

================================================================
== Vivado HLS Report for 'crypto_sign'
================================================================
* Date:           Thu May 14 18:41:48 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        picnic1
* Solution:       sign
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       48|       48|         3|          -|          -|    16|    no    |
        |- Loop 2  |        ?|        ?|         2|          -|          -|     ?|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 6 11 
4 --> 5 
5 --> 3 
6 --> 11 7 
7 --> 8 
8 --> 9 
9 --> 10 11 
10 --> 9 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.75>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%secret_data = alloca [32 x i8], align 1" [api.c:87]   --->   Operation 12 'alloca' 'secret_data' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%secret_pk_plaintext = alloca [32 x i8], align 1" [api.c:87]   --->   Operation 13 'alloca' 'secret_pk_plaintext' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%secret_pk_ciphertext = alloca [32 x i8], align 1" [api.c:87]   --->   Operation 14 'alloca' 'secret_pk_ciphertext' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sk_addr = getelementptr [49 x i8]* %sk, i64 0, i64 0" [picnic.c:625->api.c:90]   --->   Operation 15 'getelementptr' 'sk_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [2/2] (1.75ns)   --->   "%sk_load = load i8* %sk_addr, align 1" [picnic.c:632->api.c:90]   --->   Operation 16 'load' 'sk_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>

State 2 <SV = 1> <Delay = 4.56>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([37336 x i8]* %sm) nounwind, !map !670"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1 x i64]* %smlen) nounwind, !map !676"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([3300 x i8]* %m) nounwind, !map !680"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %mlen) nounwind, !map !686"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([49 x i8]* %sk) nounwind, !map !692"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%mlen_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %mlen) nounwind" [api.c:83]   --->   Operation 22 'read' 'mlen_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%smlen_addr = getelementptr [1 x i64]* %smlen, i64 0, i64 0" [api.c:83]   --->   Operation 23 'getelementptr' 'smlen_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%sm_addr = getelementptr [37336 x i8]* %sm, i64 0, i64 0" [api.c:83]   --->   Operation 24 'getelementptr' 'sm_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !698"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @crypto_sign_str) nounwind"   --->   Operation 26 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/2] (1.75ns)   --->   "%sk_load = load i8* %sk_addr, align 1" [picnic.c:632->api.c:90]   --->   Operation 27 'load' 'sk_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln632 = trunc i8 %sk_load to i4" [picnic.c:632->api.c:90]   --->   Operation 28 'trunc' 'trunc_ln632' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (1.21ns)   --->   "%empty = icmp eq i4 %trunc_ln632, -1" [picnic.c:632->api.c:90]   --->   Operation 29 'icmp' 'empty' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (1.21ns)   --->   "%empty_85 = icmp eq i4 %trunc_ln632, -2" [picnic.c:632->api.c:90]   --->   Operation 30 'icmp' 'empty_85' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node empty_94)   --->   "%empty_86 = or i1 %empty_85, %empty" [picnic.c:632->api.c:90]   --->   Operation 31 'or' 'empty_86' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.21ns)   --->   "%empty_87 = icmp eq i4 %trunc_ln632, -3" [picnic.c:632->api.c:90]   --->   Operation 32 'icmp' 'empty_87' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node empty_94)   --->   "%empty_88 = or i1 %empty_87, %empty_86" [picnic.c:632->api.c:90]   --->   Operation 33 'or' 'empty_88' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.21ns)   --->   "%empty_89 = icmp eq i4 %trunc_ln632, -4" [picnic.c:632->api.c:90]   --->   Operation 34 'icmp' 'empty_89' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node empty_94)   --->   "%empty_90 = or i1 %empty_89, %empty_88" [picnic.c:632->api.c:90]   --->   Operation 35 'or' 'empty_90' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.21ns)   --->   "%empty_91 = icmp eq i4 %trunc_ln632, -5" [picnic.c:632->api.c:90]   --->   Operation 36 'icmp' 'empty_91' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node empty_94)   --->   "%empty_92 = or i1 %empty_91, %empty_90" [picnic.c:632->api.c:90]   --->   Operation 37 'or' 'empty_92' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (1.21ns)   --->   "%empty_93 = icmp eq i4 %trunc_ln632, -6" [picnic.c:632->api.c:90]   --->   Operation 38 'icmp' 'empty_93' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.80ns) (out node of the LUT)   --->   "%empty_94 = or i1 %empty_93, %empty_92" [picnic.c:632->api.c:90]   --->   Operation 39 'or' 'empty_94' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.21ns)   --->   "%empty_95 = icmp eq i4 %trunc_ln632, 0" [picnic.c:632->api.c:90]   --->   Operation 40 'icmp' 'empty_95' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.80ns) (out node of the LUT)   --->   "%empty_96 = or i1 %empty_95, %empty_94" [picnic.c:632->api.c:90]   --->   Operation 41 'or' 'empty_96' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "br i1 %empty_96, label %._crit_edge7.i.i, label %.preheader.i.preheader" [picnic.c:632->api.c:90]   --->   Operation 42 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.35ns)   --->   "br label %.preheader.i" [picnic.c:657->api.c:90]   --->   Operation 43 'br' <Predicate = (!empty_96)> <Delay = 1.35>
ST_2 : Operation 44 [1/1] (1.35ns)   --->   "br label %picnic_read_private_key.exit"   --->   Operation 44 'br' <Predicate = (empty_96)> <Delay = 1.35>

State 3 <SV = 2> <Delay = 3.30>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%loop_0_i = phi i5 [ %loop_22, %1 ], [ 0, %.preheader.i.preheader ]"   --->   Operation 45 'phi' 'loop_0_i' <Predicate = (!empty_96)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln657 = zext i5 %loop_0_i to i64" [picnic.c:657->api.c:90]   --->   Operation 46 'zext' 'zext_ln657' <Predicate = (!empty_96)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%sext_ln657_i_cast = zext i5 %loop_0_i to i6" [picnic.c:658->api.c:90]   --->   Operation 47 'zext' 'sext_ln657_i_cast' <Predicate = (!empty_96)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%empty_97 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 48 'speclooptripcount' 'empty_97' <Predicate = (!empty_96)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (1.21ns)   --->   "%icmp_ln657 = icmp eq i5 %loop_0_i, -16" [picnic.c:657->api.c:90]   --->   Operation 49 'icmp' 'icmp_ln657' <Predicate = (!empty_96)> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (1.54ns)   --->   "%loop_22 = add i5 %loop_0_i, 1" [picnic.c:658->api.c:90]   --->   Operation 50 'add' 'loop_22' <Predicate = (!empty_96)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %icmp_ln657, label %picnic_read_private_key.exit.loopexit, label %1" [picnic.c:657->api.c:90]   --->   Operation 51 'br' <Predicate = (!empty_96)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln658 = zext i5 %loop_22 to i64" [picnic.c:658->api.c:90]   --->   Operation 52 'zext' 'zext_ln658' <Predicate = (!empty_96 & !icmp_ln657)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%sk_addr_1 = getelementptr [49 x i8]* %sk, i64 0, i64 %zext_ln658" [picnic.c:658->api.c:90]   --->   Operation 53 'getelementptr' 'sk_addr_1' <Predicate = (!empty_96 & !icmp_ln657)> <Delay = 0.00>
ST_3 : Operation 54 [2/2] (1.75ns)   --->   "%sk_load_1 = load i8* %sk_addr_1, align 1" [picnic.c:658->api.c:90]   --->   Operation 54 'load' 'sk_load_1' <Predicate = (!empty_96 & !icmp_ln657)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_3 : Operation 55 [1/1] (1.35ns)   --->   "br label %picnic_read_private_key.exit"   --->   Operation 55 'br' <Predicate = (!empty_96 & icmp_ln657)> <Delay = 1.35>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%ret = phi i1 [ true, %._crit_edge7.i.i ], [ false, %picnic_read_private_key.exit.loopexit ]"   --->   Operation 56 'phi' 'ret' <Predicate = (icmp_ln657) | (empty_96)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.81ns)   --->   "%select_ln625 = select i1 %ret, i32 -1, i32 0" [picnic.c:625->api.c:90]   --->   Operation 57 'select' 'select_ln625' <Predicate = (icmp_ln657) | (empty_96)> <Delay = 0.81> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (1.55ns)   --->   "br i1 %ret, label %.loopexit, label %2" [api.c:92]   --->   Operation 58 'br' <Predicate = (icmp_ln657) | (empty_96)> <Delay = 1.55>
ST_3 : Operation 59 [1/1] (2.99ns)   --->   "%add_ln100 = add i64 %mlen_read, 4" [api.c:100]   --->   Operation 59 'add' 'add_ln100' <Predicate = (icmp_ln657 & !ret) | (empty_96 & !ret)> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [2/2] (0.00ns)   --->   "%tmp_s = call fastcc { i32, i64 } @picnic_sign([32 x i8]* %secret_data, [32 x i8]* %secret_pk_plaintext, [32 x i8]* %secret_pk_ciphertext, [3300 x i8]* %m, i64 %mlen_read, [37336 x i8]* %sm, i64 %add_ln100) nounwind" [api.c:100]   --->   Operation 60 'call' 'tmp_s' <Predicate = (icmp_ln657 & !ret) | (empty_96 & !ret)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 3.51>
ST_4 : Operation 61 [1/2] (1.75ns)   --->   "%sk_load_1 = load i8* %sk_addr_1, align 1" [picnic.c:658->api.c:90]   --->   Operation 61 'load' 'sk_load_1' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%secret_data_addr = getelementptr [32 x i8]* %secret_data, i64 0, i64 %zext_ln657" [picnic.c:658->api.c:90]   --->   Operation 62 'getelementptr' 'secret_data_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (1.75ns)   --->   "store i8 %sk_load_1, i8* %secret_data_addr, align 1" [picnic.c:658->api.c:90]   --->   Operation 63 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_4 : Operation 64 [1/1] (1.60ns)   --->   "%add_ln659 = add i6 %sext_ln657_i_cast, 17" [picnic.c:659->api.c:90]   --->   Operation 64 'add' 'add_ln659' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln659 = zext i6 %add_ln659 to i64" [picnic.c:659->api.c:90]   --->   Operation 65 'zext' 'zext_ln659' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%sk_addr_2 = getelementptr [49 x i8]* %sk, i64 0, i64 %zext_ln659" [picnic.c:659->api.c:90]   --->   Operation 66 'getelementptr' 'sk_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [2/2] (1.75ns)   --->   "%sk_load_2 = load i8* %sk_addr_2, align 1" [picnic.c:659->api.c:90]   --->   Operation 67 'load' 'sk_load_2' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_4 : Operation 68 [1/1] (1.60ns)   --->   "%add_ln660 = add i6 %sext_ln657_i_cast, -31" [picnic.c:660->api.c:90]   --->   Operation 68 'add' 'add_ln660' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln660 = zext i6 %add_ln660 to i64" [picnic.c:660->api.c:90]   --->   Operation 69 'zext' 'zext_ln660' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%sk_addr_3 = getelementptr [49 x i8]* %sk, i64 0, i64 %zext_ln660" [picnic.c:660->api.c:90]   --->   Operation 70 'getelementptr' 'sk_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [2/2] (1.75ns)   --->   "%sk_load_3 = load i8* %sk_addr_3, align 1" [picnic.c:660->api.c:90]   --->   Operation 71 'load' 'sk_load_3' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>

State 5 <SV = 4> <Delay = 3.51>
ST_5 : Operation 72 [1/2] (1.75ns)   --->   "%sk_load_2 = load i8* %sk_addr_2, align 1" [picnic.c:659->api.c:90]   --->   Operation 72 'load' 'sk_load_2' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%secret_pk_ciphertext_1 = getelementptr [32 x i8]* %secret_pk_ciphertext, i64 0, i64 %zext_ln657" [picnic.c:659->api.c:90]   --->   Operation 73 'getelementptr' 'secret_pk_ciphertext_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (1.75ns)   --->   "store i8 %sk_load_2, i8* %secret_pk_ciphertext_1, align 1" [picnic.c:659->api.c:90]   --->   Operation 74 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_5 : Operation 75 [1/2] (1.75ns)   --->   "%sk_load_3 = load i8* %sk_addr_3, align 1" [picnic.c:660->api.c:90]   --->   Operation 75 'load' 'sk_load_3' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%secret_pk_plaintext_s = getelementptr [32 x i8]* %secret_pk_plaintext, i64 0, i64 %zext_ln657" [picnic.c:660->api.c:90]   --->   Operation 76 'getelementptr' 'secret_pk_plaintext_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (1.75ns)   --->   "store i8 %sk_load_3, i8* %secret_pk_plaintext_s, align 1" [picnic.c:660->api.c:90]   --->   Operation 77 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "br label %.preheader.i" [picnic.c:657->api.c:90]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 3> <Delay = 7.89>
ST_6 : Operation 79 [1/2] (4.00ns)   --->   "%tmp_s = call fastcc { i32, i64 } @picnic_sign([32 x i8]* %secret_data, [32 x i8]* %secret_pk_plaintext, [32 x i8]* %secret_pk_ciphertext, [3300 x i8]* %m, i64 %mlen_read, [37336 x i8]* %sm, i64 %add_ln100) nounwind" [api.c:100]   --->   Operation 79 'call' 'tmp_s' <Predicate = true> <Delay = 4.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%ret_1 = extractvalue { i32, i64 } %tmp_s, 0" [api.c:100]   --->   Operation 80 'extractvalue' 'ret_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%signature_len = extractvalue { i32, i64 } %tmp_s, 1" [api.c:100]   --->   Operation 81 'extractvalue' 'signature_len' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (2.11ns)   --->   "%icmp_ln101 = icmp eq i32 %ret_1, 0" [api.c:101]   --->   Operation 82 'icmp' 'icmp_ln101' <Predicate = true> <Delay = 2.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (1.55ns)   --->   "br i1 %icmp_ln101, label %3, label %.loopexit" [api.c:101]   --->   Operation 83 'br' <Predicate = true> <Delay = 1.55>
ST_6 : Operation 84 [1/1] (2.34ns)   --->   "%icmp_ln104 = icmp ugt i64 %signature_len, 34036" [api.c:104]   --->   Operation 84 'icmp' 'icmp_ln104' <Predicate = (icmp_ln101)> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/1] (1.55ns)   --->   "br i1 %icmp_ln104, label %.loopexit, label %4" [api.c:104]   --->   Operation 85 'br' <Predicate = (icmp_ln101)> <Delay = 1.55>
ST_6 : Operation 86 [1/1] (2.99ns)   --->   "%add_ln108 = add i64 %add_ln100, %signature_len" [api.c:108]   --->   Operation 86 'add' 'add_ln108' <Predicate = (icmp_ln101 & !icmp_ln104)> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln111 = trunc i64 %signature_len to i8" [api.c:111]   --->   Operation 87 'trunc' 'trunc_ln111' <Predicate = (icmp_ln101 & !icmp_ln104)> <Delay = 0.00>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %signature_len, i32 8, i32 15)" [api.c:113]   --->   Operation 88 'partselect' 'trunc_ln' <Predicate = (icmp_ln101 & !icmp_ln104)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 2.77>
ST_7 : Operation 89 [1/1] (1.75ns)   --->   "store i64 %add_ln108, i64* %smlen_addr, align 8" [api.c:108]   --->   Operation 89 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_7 : Operation 90 [1/1] (2.77ns)   --->   "store i8 %trunc_ln111, i8* %sm_addr, align 1" [api.c:111]   --->   Operation 90 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%sm_addr_1 = getelementptr [37336 x i8]* %sm, i64 0, i64 1" [api.c:113]   --->   Operation 91 'getelementptr' 'sm_addr_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (2.77ns)   --->   "store i8 %trunc_ln, i8* %sm_addr_1, align 1" [api.c:113]   --->   Operation 92 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>

State 8 <SV = 5> <Delay = 2.77>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%sm_addr_2 = getelementptr [37336 x i8]* %sm, i64 0, i64 2" [api.c:115]   --->   Operation 93 'getelementptr' 'sm_addr_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (2.77ns)   --->   "store i8 0, i8* %sm_addr_2, align 1" [api.c:115]   --->   Operation 94 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%sm_addr_3 = getelementptr [37336 x i8]* %sm, i64 0, i64 3" [api.c:117]   --->   Operation 95 'getelementptr' 'sm_addr_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 96 [1/1] (2.77ns)   --->   "store i8 0, i8* %sm_addr_3, align 1" [api.c:117]   --->   Operation 96 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_8 : Operation 97 [1/1] (1.35ns)   --->   "br label %5" [api.c:119]   --->   Operation 97 'br' <Predicate = true> <Delay = 1.35>

State 9 <SV = 6> <Delay = 2.77>
ST_9 : Operation 98 [1/1] (0.00ns)   --->   "%loop_0 = phi i32 [ 0, %4 ], [ %loop, %6 ]"   --->   Operation 98 'phi' 'loop_0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%sext_ln119 = sext i32 %loop_0 to i64" [api.c:119]   --->   Operation 99 'sext' 'sext_ln119' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (2.34ns)   --->   "%icmp_ln119 = icmp ult i64 %sext_ln119, %mlen_read" [api.c:119]   --->   Operation 100 'icmp' 'icmp_ln119' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 101 [1/1] (2.18ns)   --->   "%loop = add nsw i32 %loop_0, 1" [api.c:119]   --->   Operation 101 'add' 'loop' <Predicate = true> <Delay = 2.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 102 [1/1] (0.00ns)   --->   "br i1 %icmp_ln119, label %6, label %.loopexit.loopexit" [api.c:119]   --->   Operation 102 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "%m_addr = getelementptr [3300 x i8]* %m, i64 0, i64 %sext_ln119" [api.c:120]   --->   Operation 103 'getelementptr' 'm_addr' <Predicate = (icmp_ln119)> <Delay = 0.00>
ST_9 : Operation 104 [2/2] (2.77ns)   --->   "%m_load = load i8* %m_addr, align 1" [api.c:120]   --->   Operation 104 'load' 'm_load' <Predicate = (icmp_ln119)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_9 : Operation 105 [1/1] (1.55ns)   --->   "br label %.loopexit"   --->   Operation 105 'br' <Predicate = (!icmp_ln119)> <Delay = 1.55>

State 10 <SV = 7> <Delay = 5.54>
ST_10 : Operation 106 [1/2] (2.77ns)   --->   "%m_load = load i8* %m_addr, align 1" [api.c:120]   --->   Operation 106 'load' 'm_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_10 : Operation 107 [1/1] (2.18ns)   --->   "%add_ln120 = add nsw i32 %loop_0, 4" [api.c:120]   --->   Operation 107 'add' 'add_ln120' <Predicate = true> <Delay = 2.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 108 [1/1] (0.00ns)   --->   "%sext_ln120 = sext i32 %add_ln120 to i64" [api.c:120]   --->   Operation 108 'sext' 'sext_ln120' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 109 [1/1] (0.00ns)   --->   "%sm_addr_4 = getelementptr [37336 x i8]* %sm, i64 0, i64 %sext_ln120" [api.c:120]   --->   Operation 109 'getelementptr' 'sm_addr_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (2.77ns)   --->   "store i8 %m_load, i8* %sm_addr_4, align 1" [api.c:120]   --->   Operation 110 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 37336> <RAM>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "br label %5" [api.c:119]   --->   Operation 111 'br' <Predicate = true> <Delay = 0.00>

State 11 <SV = 7> <Delay = 0.00>
ST_11 : Operation 112 [1/1] (0.00ns)   --->   "%p_0 = phi i32 [ %select_ln625, %picnic_read_private_key.exit ], [ %ret_1, %2 ], [ -1, %3 ], [ 0, %.loopexit.loopexit ]"   --->   Operation 112 'phi' 'p_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 113 [1/1] (0.00ns)   --->   "ret i32 %p_0" [api.c:123]   --->   Operation 113 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.75ns
The critical path consists of the following:
	'getelementptr' operation ('sk_addr', picnic.c:625->api.c:90) [31]  (0 ns)
	'load' operation ('sk_load', picnic.c:632->api.c:90) on array 'sk' [32]  (1.75 ns)

 <State 2>: 4.56ns
The critical path consists of the following:
	'load' operation ('sk_load', picnic.c:632->api.c:90) on array 'sk' [32]  (1.75 ns)
	'icmp' operation ('empty_89', picnic.c:632->api.c:90) [39]  (1.21 ns)
	'or' operation ('empty_90', picnic.c:632->api.c:90) [40]  (0 ns)
	'or' operation ('empty_92', picnic.c:632->api.c:90) [42]  (0 ns)
	'or' operation ('empty_94', picnic.c:632->api.c:90) [44]  (0.8 ns)
	'or' operation ('empty_96', picnic.c:632->api.c:90) [46]  (0.8 ns)

 <State 3>: 3.3ns
The critical path consists of the following:
	'phi' operation ('loop') with incoming values : ('loop', picnic.c:658->api.c:90) [51]  (0 ns)
	'add' operation ('loop', picnic.c:658->api.c:90) [56]  (1.55 ns)
	'getelementptr' operation ('sk_addr_1', picnic.c:658->api.c:90) [60]  (0 ns)
	'load' operation ('sk_load_1', picnic.c:658->api.c:90) on array 'sk' [61]  (1.75 ns)

 <State 4>: 3.51ns
The critical path consists of the following:
	'load' operation ('sk_load_1', picnic.c:658->api.c:90) on array 'sk' [61]  (1.75 ns)
	'store' operation ('store_ln658', picnic.c:658->api.c:90) of variable 'sk_load_1', picnic.c:658->api.c:90 on array 'secret.data', api.c:87 [63]  (1.75 ns)

 <State 5>: 3.51ns
The critical path consists of the following:
	'load' operation ('sk_load_2', picnic.c:659->api.c:90) on array 'sk' [67]  (1.75 ns)
	'store' operation ('store_ln659', picnic.c:659->api.c:90) of variable 'sk_load_2', picnic.c:659->api.c:90 on array 'secret.pk.ciphertext', api.c:87 [69]  (1.75 ns)

 <State 6>: 7.9ns
The critical path consists of the following:
	'call' operation ('tmp_s', api.c:100) to 'picnic_sign' [87]  (4 ns)
	'icmp' operation ('icmp_ln104', api.c:104) [93]  (2.34 ns)
	multiplexor before 'phi' operation ('ret') with incoming values : ('select_ln625', picnic.c:625->api.c:90) ('ret', api.c:100) [125]  (1.55 ns)

 <State 7>: 2.77ns
The critical path consists of the following:
	'store' operation ('store_ln111', api.c:111) of variable 'trunc_ln111', api.c:111 on array 'sm' [99]  (2.77 ns)

 <State 8>: 2.77ns
The critical path consists of the following:
	'getelementptr' operation ('sm_addr_2', api.c:115) [103]  (0 ns)
	'store' operation ('store_ln115', api.c:115) of constant 0 on array 'sm' [104]  (2.77 ns)

 <State 9>: 2.77ns
The critical path consists of the following:
	'phi' operation ('loop') with incoming values : ('loop', api.c:119) [109]  (0 ns)
	'getelementptr' operation ('m_addr', api.c:120) [115]  (0 ns)
	'load' operation ('m_load', api.c:120) on array 'm' [116]  (2.77 ns)

 <State 10>: 5.54ns
The critical path consists of the following:
	'load' operation ('m_load', api.c:120) on array 'm' [116]  (2.77 ns)
	'store' operation ('store_ln120', api.c:120) of variable 'm_load', api.c:120 on array 'sm' [120]  (2.77 ns)

 <State 11>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
