

================================================================
== Vivado HLS Report for 'fromWordsToBytes'
================================================================
* Date:           Thu May 14 18:40:36 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        picnic1
* Solution:       sign
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.247 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      203|      203| 2.030 us | 2.030 us |  203|  203|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |           Loop Name          |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- L_fromWordsToBytes_label14  |      201|      201|         3|          1|          1|   200|    yes   |
        +------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 5 3 
3 --> 4 
4 --> 2 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 6 [1/1] (1.35ns)   --->   "br label %.preheader" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 6 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 5.30>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8 [ 0, %0 ], [ %add_ln280, %fromWordsToBytes_label14 ]" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 7 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ 0, %0 ], [ %select_ln280_1, %fromWordsToBytes_label14 ]" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 8 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%j_0 = phi i4 [ 0, %0 ], [ %j, %fromWordsToBytes_label14 ]"   --->   Operation 9 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (1.24ns)   --->   "%icmp_ln280 = icmp eq i8 %indvar_flatten, -56" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 10 'icmp' 'icmp_ln280' <Predicate = true> <Delay = 1.24> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (1.71ns)   --->   "%add_ln280 = add i8 %indvar_flatten, 1" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 11 'add' 'add_ln280' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "br i1 %icmp_ln280, label %1, label %fromWordsToBytes_label14" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 12 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.54ns)   --->   "%i = add i5 1, %i_0" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 13 'add' 'i' <Predicate = (!icmp_ln280)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (1.21ns)   --->   "%icmp_ln281 = icmp eq i4 %j_0, -8" [sha3/KeccakP-1600-reference.c:281]   --->   Operation 14 'icmp' 'icmp_ln281' <Predicate = (!icmp_ln280)> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.80ns)   --->   "%select_ln280 = select i1 %icmp_ln281, i4 0, i4 %j_0" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 15 'select' 'select_ln280' <Predicate = (!icmp_ln280)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.98ns)   --->   "%select_ln280_1 = select i1 %icmp_ln281, i5 %i, i5 %i_0" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 16 'select' 'select_ln280_1' <Predicate = (!icmp_ln280)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln280 = zext i5 %select_ln280_1 to i64" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 17 'zext' 'zext_ln280' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%stateAsWords_addr = getelementptr [25 x i64]* %stateAsWords, i64 0, i64 %zext_ln280" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 18 'getelementptr' 'stateAsWords_addr' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_2 : Operation 19 [2/2] (2.77ns)   --->   "%stateAsWords_load = load i64* %stateAsWords_addr, align 8" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 19 'load' 'stateAsWords_load' <Predicate = (!icmp_ln280)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 200> <RAM>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln282 = trunc i4 %select_ln280 to i3" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 20 'trunc' 'trunc_ln282' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.49ns)   --->   "%j = add i4 1, %select_ln280" [sha3/KeccakP-1600-reference.c:281]   --->   Operation 21 'add' 'j' <Predicate = (!icmp_ln280)> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.24>
ST_3 : Operation 22 [1/2] (2.77ns)   --->   "%stateAsWords_load = load i64* %stateAsWords_addr, align 8" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 22 'load' 'stateAsWords_load' <Predicate = (!icmp_ln280)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 200> <RAM>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%shl_ln = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %trunc_ln282, i3 0)" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 23 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln282 = zext i6 %shl_ln to i64" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 24 'zext' 'zext_ln282' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (3.47ns)   --->   "%lshr_ln282 = lshr i64 %stateAsWords_load, %zext_ln282" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 25 'lshr' 'lshr_ln282' <Predicate = (!icmp_ln280)> <Delay = 3.47> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.47> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%trunc_ln282_1 = trunc i64 %lshr_ln282 to i8" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 26 'trunc' 'trunc_ln282_1' <Predicate = (!icmp_ln280)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.49>
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([27 x i8]* @L_fromWordsToBytes_l)"   --->   Operation 27 'specloopname' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 28 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 200, i64 200, i64 200)"   --->   Operation 28 'speclooptripcount' 'empty' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%shl_ln282_1_mid2 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %select_ln280_1, i3 0)" [sha3/KeccakP-1600-reference.c:280]   --->   Operation 29 'bitconcatenate' 'shl_ln282_1_mid2' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln281 = zext i4 %select_ln280 to i8" [sha3/KeccakP-1600-reference.c:281]   --->   Operation 30 'zext' 'zext_ln281' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([25 x i8]* @p_str23) nounwind" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 31 'specloopname' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([25 x i8]* @p_str23)" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 32 'specregionbegin' 'tmp' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str13) nounwind" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 33 'specpipeline' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (1.71ns)   --->   "%add_ln282 = add i8 %zext_ln281, %shl_ln282_1_mid2" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 34 'add' 'add_ln282' <Predicate = (!icmp_ln280)> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln282_1 = zext i8 %add_ln282 to i64" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 35 'zext' 'zext_ln282_1' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%state_addr = getelementptr [200 x i8]* %state, i64 0, i64 %zext_ln282_1" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 36 'getelementptr' 'state_addr' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (2.77ns)   --->   "store i8 %trunc_ln282_1, i8* %state_addr, align 1" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 37 'store' <Predicate = (!icmp_ln280)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 200> <RAM>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%empty_82 = call i32 (...)* @_ssdm_op_SpecRegionEnd([25 x i8]* @p_str23, i32 %tmp)" [sha3/KeccakP-1600-reference.c:282]   --->   Operation 38 'specregionend' 'empty_82' <Predicate = (!icmp_ln280)> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "br label %.preheader" [sha3/KeccakP-1600-reference.c:281]   --->   Operation 39 'br' <Predicate = (!icmp_ln280)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "ret void" [sha3/KeccakP-1600-reference.c:283]   --->   Operation 40 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', sha3/KeccakP-1600-reference.c:280) with incoming values : ('add_ln280', sha3/KeccakP-1600-reference.c:280) [5]  (1.35 ns)

 <State 2>: 5.31ns
The critical path consists of the following:
	'phi' operation ('i_0', sha3/KeccakP-1600-reference.c:280) with incoming values : ('select_ln280_1', sha3/KeccakP-1600-reference.c:280) [6]  (0 ns)
	'add' operation ('i', sha3/KeccakP-1600-reference.c:280) [12]  (1.55 ns)
	'select' operation ('select_ln280_1', sha3/KeccakP-1600-reference.c:280) [17]  (0.986 ns)
	'getelementptr' operation ('stateAsWords_addr', sha3/KeccakP-1600-reference.c:282) [24]  (0 ns)
	'load' operation ('stateAsWords_load', sha3/KeccakP-1600-reference.c:282) on array 'stateAsWords' [25]  (2.77 ns)

 <State 3>: 6.25ns
The critical path consists of the following:
	'load' operation ('stateAsWords_load', sha3/KeccakP-1600-reference.c:282) on array 'stateAsWords' [25]  (2.77 ns)
	'lshr' operation ('lshr_ln282', sha3/KeccakP-1600-reference.c:282) [29]  (3.48 ns)

 <State 4>: 4.49ns
The critical path consists of the following:
	'add' operation ('add_ln282', sha3/KeccakP-1600-reference.c:282) [31]  (1.72 ns)
	'getelementptr' operation ('state_addr', sha3/KeccakP-1600-reference.c:282) [33]  (0 ns)
	'store' operation ('store_ln282', sha3/KeccakP-1600-reference.c:282) of variable 'trunc_ln282_1', sha3/KeccakP-1600-reference.c:282 on array 'state' [34]  (2.77 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
