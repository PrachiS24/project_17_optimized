

================================================================
== Vivado HLS Report for 'matrix_mul_1'
================================================================
* Date:           Thu May 14 18:41:05 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        picnic1
* Solution:       sign
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.360 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     2186|     2186| 21.860 us | 21.860 us |  2186|  2186|   none  |
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                      |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1              |     2176|     2176|        17|          -|          -|   128|    no    |
        | + matrix_mul_label3  |        4|        4|         2|          1|          1|     4|    yes   |
        | + Loop 1.2           |        6|        6|         2|          -|          -|     3|    no    |
        |- matrix_mul_label7   |        8|        8|         2|          -|          -|     4|    no    |
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 11 
3 --> 5 4 
4 --> 3 
5 --> 6 
6 --> 7 
7 --> 8 9 
8 --> 7 
9 --> 10 
10 --> 2 
11 --> 12 
12 --> 11 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBRAMWithByteEnable([36 x i32]* %output_r)"   --->   Operation 13 'specbramwithbyteenable' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%matrix_offset_read = call i14 @_ssdm_op_Read.ap_auto.i14(i14 %matrix_offset)"   --->   Operation 14 'read' 'matrix_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%state_offset_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %state_offset)"   --->   Operation 15 'read' 'state_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%prod = alloca [64 x i32], align 16" [picnic_impl.c:121]   --->   Operation 16 'alloca' 'prod' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%temp = alloca [64 x i32], align 16" [picnic_impl.c:122]   --->   Operation 17 'alloca' 'temp' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%prod_addr = getelementptr [64 x i32]* %prod, i64 0, i64 0" [picnic_impl.c:81->picnic_impl.c:129]   --->   Operation 18 'getelementptr' 'prod_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%trunc_ln127 = trunc i6 %state_offset_read to i5" [picnic_impl.c:127]   --->   Operation 19 'trunc' 'trunc_ln127' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.35ns)   --->   "br label %1" [picnic_impl.c:124]   --->   Operation 20 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 1.71>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%bitNumber_assign = phi i8 [ 0, %0 ], [ %i, %parity.exit ]"   --->   Operation 21 'phi' 'bitNumber_assign' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.24ns)   --->   "%icmp_ln124 = icmp eq i8 %bitNumber_assign, -128" [picnic_impl.c:124]   --->   Operation 22 'icmp' 'icmp_ln124' <Predicate = true> <Delay = 1.24> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 0)"   --->   Operation 23 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.71ns)   --->   "%i = add i8 %bitNumber_assign, 1" [picnic_impl.c:124]   --->   Operation 24 'add' 'i' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "br i1 %icmp_ln124, label %.preheader.preheader, label %.preheader1.preheader" [picnic_impl.c:124]   --->   Operation 25 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%trunc_ln124 = trunc i8 %bitNumber_assign to i3" [picnic_impl.c:124]   --->   Operation 26 'trunc' 'trunc_ln124' <Predicate = (!icmp_ln124)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln126 = trunc i8 %bitNumber_assign to i7" [picnic_impl.c:126]   --->   Operation 27 'trunc' 'trunc_ln126' <Predicate = (!icmp_ln124)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%shl_ln = call i9 @_ssdm_op_BitConcatenate.i9.i7.i2(i7 %trunc_ln126, i2 0)" [picnic_impl.c:126]   --->   Operation 28 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln124)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (1.35ns)   --->   "br label %.preheader1" [picnic_impl.c:125]   --->   Operation 29 'br' <Predicate = (!icmp_ln124)> <Delay = 1.35>
ST_2 : Operation 30 [1/1] (1.35ns)   --->   "br label %.preheader" [picnic_impl.c:133]   --->   Operation 30 'br' <Predicate = (icmp_ln124)> <Delay = 1.35>

State 3 <SV = 2> <Delay = 6.31>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ %j, %matrix_mul_label3 ], [ 0, %.preheader1.preheader ]"   --->   Operation 31 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.00ns)   --->   "%icmp_ln125 = icmp eq i3 %j_0, -4" [picnic_impl.c:125]   --->   Operation 32 'icmp' 'icmp_ln125' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%empty_74 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 0)"   --->   Operation 33 'speclooptripcount' 'empty_74' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (1.34ns)   --->   "%j = add i3 %j_0, 1" [picnic_impl.c:125]   --->   Operation 34 'add' 'j' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "br i1 %icmp_ln125, label %2, label %matrix_mul_label3" [picnic_impl.c:125]   --->   Operation 35 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln125 = zext i3 %j_0 to i9" [picnic_impl.c:125]   --->   Operation 36 'zext' 'zext_ln125' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.73ns)   --->   "%add_ln126 = add i9 %shl_ln, %zext_ln125" [picnic_impl.c:126]   --->   Operation 37 'add' 'add_ln126' <Predicate = (!icmp_ln125)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln126 = zext i9 %add_ln126 to i14" [picnic_impl.c:126]   --->   Operation 38 'zext' 'zext_ln126' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln127_1 = zext i3 %j_0 to i5" [picnic_impl.c:127]   --->   Operation 39 'zext' 'zext_ln127_1' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (1.54ns)   --->   "%add_ln127 = add i5 %zext_ln127_1, %trunc_ln127" [picnic_impl.c:127]   --->   Operation 40 'add' 'add_ln127' <Predicate = (!icmp_ln125)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln127_2 = zext i5 %add_ln127 to i64" [picnic_impl.c:127]   --->   Operation 41 'zext' 'zext_ln127_2' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%state_addr_1 = getelementptr [36 x i32]* %output_r, i64 0, i64 %zext_ln127_2" [picnic_impl.c:127]   --->   Operation 42 'getelementptr' 'state_addr_1' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 43 [2/2] (2.77ns)   --->   "%state_load = load i32* %state_addr_1, align 4" [picnic_impl.c:127]   --->   Operation 43 'load' 'state_load' <Predicate = (!icmp_ln125)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_3 : Operation 44 [1/1] (1.80ns)   --->   "%add_ln127_1 = add i14 %zext_ln126, %matrix_offset_read" [picnic_impl.c:127]   --->   Operation 44 'add' 'add_ln127_1' <Predicate = (!icmp_ln125)> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln127_3 = zext i14 %add_ln127_1 to i64" [picnic_impl.c:127]   --->   Operation 45 'zext' 'zext_ln127_3' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%temp_matrix2_addr = getelementptr [10240 x i32]* @temp_matrix2, i64 0, i64 %zext_ln127_3" [picnic_impl.c:127]   --->   Operation 46 'getelementptr' 'temp_matrix2_addr' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 47 [2/2] (2.77ns)   --->   "%temp_matrix2_load = load i32* %temp_matrix2_addr, align 4" [picnic_impl.c:127]   --->   Operation 47 'load' 'temp_matrix2_load' <Predicate = (!icmp_ln125)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10240> <ROM>

State 4 <SV = 3> <Delay = 6.35>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @p_str20137) nounwind" [picnic_impl.c:125]   --->   Operation 48 'specloopname' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @p_str20137)" [picnic_impl.c:125]   --->   Operation 49 'specregionbegin' 'tmp_s' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3118) nounwind" [picnic_impl.c:126]   --->   Operation 50 'specpipeline' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln127 = zext i3 %j_0 to i64" [picnic_impl.c:127]   --->   Operation 51 'zext' 'zext_ln127' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_4 : Operation 52 [1/2] (2.77ns)   --->   "%state_load = load i32* %state_addr_1, align 4" [picnic_impl.c:127]   --->   Operation 52 'load' 'state_load' <Predicate = (!icmp_ln125)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_4 : Operation 53 [1/2] (2.77ns)   --->   "%temp_matrix2_load = load i32* %temp_matrix2_addr, align 4" [picnic_impl.c:127]   --->   Operation 53 'load' 'temp_matrix2_load' <Predicate = (!icmp_ln125)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10240> <ROM>
ST_4 : Operation 54 [1/1] (0.80ns)   --->   "%and_ln127 = and i32 %temp_matrix2_load, %state_load" [picnic_impl.c:127]   --->   Operation 54 'and' 'and_ln127' <Predicate = (!icmp_ln125)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%prod_addr_1 = getelementptr inbounds [64 x i32]* %prod, i64 0, i64 %zext_ln127" [picnic_impl.c:127]   --->   Operation 55 'getelementptr' 'prod_addr_1' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (2.77ns)   --->   "store i32 %and_ln127, i32* %prod_addr_1, align 4" [picnic_impl.c:127]   --->   Operation 56 'store' <Predicate = (!icmp_ln125)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%empty_75 = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @p_str20137, i32 %tmp_s)" [picnic_impl.c:128]   --->   Operation 57 'specregionend' 'empty_75' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "br label %.preheader1" [picnic_impl.c:125]   --->   Operation 58 'br' <Predicate = (!icmp_ln125)> <Delay = 0.00>

State 5 <SV = 3> <Delay = 2.77>
ST_5 : Operation 59 [2/2] (2.77ns)   --->   "%x = load i32* %prod_addr, align 16" [picnic_impl.c:83->picnic_impl.c:129]   --->   Operation 59 'load' 'x' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>

State 6 <SV = 4> <Delay = 2.77>
ST_6 : Operation 60 [1/2] (2.77ns)   --->   "%x = load i32* %prod_addr, align 16" [picnic_impl.c:83->picnic_impl.c:129]   --->   Operation 60 'load' 'x' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_6 : Operation 61 [1/1] (1.35ns)   --->   "br label %3" [picnic_impl.c:85->picnic_impl.c:129]   --->   Operation 61 'br' <Predicate = true> <Delay = 1.35>

State 7 <SV = 5> <Delay = 2.77>
ST_7 : Operation 62 [1/1] (0.00ns)   --->   "%x_0_i = phi i32 [ %x, %2 ], [ %x_7, %4 ]"   --->   Operation 62 'phi' 'x_0_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 63 [1/1] (0.00ns)   --->   "%i_0_i = phi i3 [ 1, %2 ], [ %i_11, %4 ]"   --->   Operation 63 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln85 = zext i3 %i_0_i to i64" [picnic_impl.c:85->picnic_impl.c:129]   --->   Operation 64 'zext' 'zext_ln85' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 65 [1/1] (1.00ns)   --->   "%icmp_ln85 = icmp eq i3 %i_0_i, -4" [picnic_impl.c:85->picnic_impl.c:129]   --->   Operation 65 'icmp' 'icmp_ln85' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 66 [1/1] (0.00ns)   --->   "%empty_76 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 66 'speclooptripcount' 'empty_76' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "br i1 %icmp_ln85, label %parity.exit, label %4" [picnic_impl.c:85->picnic_impl.c:129]   --->   Operation 67 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (0.00ns)   --->   "%prod_addr_2 = getelementptr [64 x i32]* %prod, i64 0, i64 %zext_ln85" [picnic_impl.c:86->picnic_impl.c:129]   --->   Operation 68 'getelementptr' 'prod_addr_2' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_7 : Operation 69 [2/2] (2.77ns)   --->   "%prod_load = load i32* %prod_addr_2, align 4" [picnic_impl.c:86->picnic_impl.c:129]   --->   Operation 69 'load' 'prod_load' <Predicate = (!icmp_ln85)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_7 : Operation 70 [1/1] (1.34ns)   --->   "%i_11 = add i3 %i_0_i, 1" [picnic_impl.c:85->picnic_impl.c:129]   --->   Operation 70 'add' 'i_11' <Predicate = (!icmp_ln85)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_38 = call i2 @_ssdm_op_PartSelect.i2.i8.i32.i32(i8 %bitNumber_assign, i32 3, i32 4)" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 71 'partselect' 'tmp_38' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%adjSize = call i3 @_ssdm_op_PartSelect.i3.i8.i32.i32(i8 %bitNumber_assign, i32 5, i32 7)" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 72 'partselect' 'adjSize' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln66 = zext i3 %adjSize to i64" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 73 'zext' 'zext_ln66' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%temp_addr_2 = getelementptr [64 x i32]* %temp, i64 0, i64 %zext_ln66" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 74 'getelementptr' 'temp_addr_2' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_7 : Operation 75 [2/2] (2.77ns)   --->   "%temp_load_1 = load i32* %temp_addr_2, align 4" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 75 'load' 'temp_load_1' <Predicate = (icmp_ln85)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>

State 8 <SV = 6> <Delay = 3.58>
ST_8 : Operation 76 [1/2] (2.77ns)   --->   "%prod_load = load i32* %prod_addr_2, align 4" [picnic_impl.c:86->picnic_impl.c:129]   --->   Operation 76 'load' 'prod_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_8 : Operation 77 [1/1] (0.80ns)   --->   "%x_7 = xor i32 %prod_load, %x_0_i" [picnic_impl.c:86->picnic_impl.c:129]   --->   Operation 77 'xor' 'x_7' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 78 [1/1] (0.00ns)   --->   "br label %3" [picnic_impl.c:85->picnic_impl.c:129]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>

State 9 <SV = 6> <Delay = 8.36>
ST_9 : Operation 79 [1/1] (0.00ns)   --->   "%lshr_ln = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %x_0_i, i32 1, i32 31)" [picnic_impl.c:93->picnic_impl.c:129]   --->   Operation 79 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln93 = zext i31 %lshr_ln to i32" [picnic_impl.c:93->picnic_impl.c:129]   --->   Operation 80 'zext' 'zext_ln93' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_7)   --->   "%trunc_ln93 = trunc i32 %x_0_i to i1" [picnic_impl.c:93->picnic_impl.c:129]   --->   Operation 81 'trunc' 'trunc_ln93' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_7)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_0_i, i32 1)" [picnic_impl.c:93->picnic_impl.c:129]   --->   Operation 82 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%trunc_ln93_1 = trunc i32 %x_0_i to i24" [picnic_impl.c:93->picnic_impl.c:129]   --->   Operation 83 'trunc' 'trunc_ln93_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%trunc_ln93_3 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %x_0_i, i32 1, i32 24)" [picnic_impl.c:93->picnic_impl.c:129]   --->   Operation 84 'partselect' 'trunc_ln93_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 85 [1/1] (0.80ns)   --->   "%y = xor i32 %zext_ln93, %x_0_i" [picnic_impl.c:93->picnic_impl.c:129]   --->   Operation 85 'xor' 'y' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%lshr_ln1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %y, i32 2, i32 31)" [picnic_impl.c:94->picnic_impl.c:129]   --->   Operation 86 'partselect' 'lshr_ln1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln94 = zext i30 %lshr_ln1 to i32" [picnic_impl.c:94->picnic_impl.c:129]   --->   Operation 87 'zext' 'zext_ln94' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_7)   --->   "%tmp_34 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %y, i32 2)" [picnic_impl.c:94->picnic_impl.c:129]   --->   Operation 88 'bitselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%xor_ln94 = xor i24 %trunc_ln93_3, %trunc_ln93_1" [picnic_impl.c:94->picnic_impl.c:129]   --->   Operation 89 'xor' 'xor_ln94' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%trunc_ln94_1 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %y, i32 2, i32 25)" [picnic_impl.c:94->picnic_impl.c:129]   --->   Operation 90 'partselect' 'trunc_ln94_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 91 [1/1] (0.80ns)   --->   "%y_1 = xor i32 %zext_ln94, %y" [picnic_impl.c:94->picnic_impl.c:129]   --->   Operation 91 'xor' 'y_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "%lshr_ln2 = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %y_1, i32 4, i32 31)" [picnic_impl.c:95->picnic_impl.c:129]   --->   Operation 92 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln95 = zext i28 %lshr_ln2 to i32" [picnic_impl.c:95->picnic_impl.c:129]   --->   Operation 93 'zext' 'zext_ln95' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_7)   --->   "%tmp_35 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %y_1, i32 4)" [picnic_impl.c:95->picnic_impl.c:129]   --->   Operation 94 'bitselect' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%xor_ln95 = xor i24 %trunc_ln94_1, %xor_ln94" [picnic_impl.c:95->picnic_impl.c:129]   --->   Operation 95 'xor' 'xor_ln95' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%trunc_ln95_1 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %y_1, i32 4, i32 27)" [picnic_impl.c:95->picnic_impl.c:129]   --->   Operation 96 'partselect' 'trunc_ln95_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 97 [1/1] (0.80ns)   --->   "%y_2 = xor i32 %zext_ln95, %y_1" [picnic_impl.c:95->picnic_impl.c:129]   --->   Operation 97 'xor' 'y_2' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%xor_ln95_2 = xor i24 %trunc_ln95_1, %xor_ln95" [picnic_impl.c:95->picnic_impl.c:129]   --->   Operation 98 'xor' 'xor_ln95_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%trunc_ln = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %y_2, i32 8, i32 31)" [picnic_impl.c:96->picnic_impl.c:129]   --->   Operation 99 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%tmp_36 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %y_2, i32 8)" [picnic_impl.c:96->picnic_impl.c:129]   --->   Operation 100 'bitselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%y_3 = xor i24 %trunc_ln, %xor_ln95_2" [picnic_impl.c:96->picnic_impl.c:129]   --->   Operation 101 'xor' 'y_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node xor_ln98_2)   --->   "%tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %y_3, i32 16)" [picnic_impl.c:98->picnic_impl.c:129]   --->   Operation 102 'bitselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_7)   --->   "%xor_ln98 = xor i1 %trunc_ln93, %tmp_34" [picnic_impl.c:98->picnic_impl.c:129]   --->   Operation 103 'xor' 'xor_ln98' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_7)   --->   "%xor_ln98_1 = xor i1 %xor_ln98, %tmp" [picnic_impl.c:98->picnic_impl.c:129]   --->   Operation 104 'xor' 'xor_ln98_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 105 [1/1] (0.80ns) (out node of the LUT)   --->   "%xor_ln98_2 = xor i1 %tmp_36, %tmp_37" [picnic_impl.c:98->picnic_impl.c:129]   --->   Operation 105 'xor' 'xor_ln98_2' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_7)   --->   "%xor_ln98_3 = xor i1 %xor_ln98_2, %tmp_35" [picnic_impl.c:98->picnic_impl.c:129]   --->   Operation 106 'xor' 'xor_ln98_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_7)   --->   "%xor_ln98_4 = xor i1 %xor_ln98_3, %xor_ln98_1" [picnic_impl.c:98->picnic_impl.c:129]   --->   Operation 107 'xor' 'xor_ln98_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_7)   --->   "%zext_ln98 = zext i1 %xor_ln98_4 to i8" [picnic_impl.c:98->picnic_impl.c:129]   --->   Operation 108 'zext' 'zext_ln98' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 109 [1/2] (2.77ns)   --->   "%temp_load_1 = load i32* %temp_addr_2, align 4" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 109 'load' 'temp_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_9 : Operation 110 [1/1] (0.00ns)   --->   "%start_pos = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %tmp_38, i3 0)" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 110 'bitconcatenate' 'start_pos' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 111 [1/1] (0.00ns)   --->   "%or_ln66_6 = or i5 %start_pos, 7" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 111 'or' 'or_ln66_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 112 [1/1] (1.21ns)   --->   "%icmp_ln66 = icmp ugt i5 %start_pos, %or_ln66_6" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 112 'icmp' 'icmp_ln66' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln66_38 = zext i5 %start_pos to i6" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 113 'zext' 'zext_ln66_38' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln66_39 = zext i5 %or_ln66_6 to i6" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 114 'zext' 'zext_ln66_39' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln66)   --->   "%tmp_39 = call i32 @llvm.part.select.i32(i32 %temp_load_1, i32 31, i32 0)" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 115 'partselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 116 [1/1] (1.54ns)   --->   "%sub_ln66 = sub i6 %zext_ln66_38, %zext_ln66_39" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 116 'sub' 'sub_ln66' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln66)   --->   "%xor_ln66_12 = xor i6 %zext_ln66_38, 31" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 117 'xor' 'xor_ln66_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 118 [1/1] (1.54ns)   --->   "%sub_ln66_9 = sub i6 %zext_ln66_39, %zext_ln66_38" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 118 'sub' 'sub_ln66_9' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node sub_ln66_10)   --->   "%select_ln66 = select i1 %icmp_ln66, i6 %sub_ln66, i6 %sub_ln66_9" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 119 'select' 'select_ln66' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln66)   --->   "%select_ln66_21 = select i1 %icmp_ln66, i32 %tmp_39, i32 %temp_load_1" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 120 'select' 'select_ln66_21' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln66)   --->   "%select_ln66_22 = select i1 %icmp_ln66, i6 %xor_ln66_12, i6 %zext_ln66_38" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 121 'select' 'select_ln66_22' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 122 [1/1] (1.60ns) (out node of the LUT)   --->   "%sub_ln66_10 = sub i6 31, %select_ln66" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 122 'sub' 'sub_ln66_10' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln66)   --->   "%zext_ln66_40 = zext i6 %select_ln66_22 to i32" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 123 'zext' 'zext_ln66_40' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%zext_ln66_41 = zext i6 %sub_ln66_10 to i32" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 124 'zext' 'zext_ln66_41' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 125 [1/1] (3.30ns) (out node of the LUT)   --->   "%lshr_ln66 = lshr i32 %select_ln66_21, %zext_ln66_40" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 125 'lshr' 'lshr_ln66' <Predicate = true> <Delay = 3.30> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%lshr_ln66_9 = lshr i32 -1, %zext_ln66_41" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 126 'lshr' 'lshr_ln66_9' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%and_ln66_12 = and i32 %lshr_ln66, %lshr_ln66_9" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 127 'and' 'and_ln66_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%trunc_ln66 = trunc i32 %and_ln66_12 to i8" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 128 'trunc' 'trunc_ln66' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 129 [1/1] (0.80ns)   --->   "%xor_ln66 = xor i3 %trunc_ln124, -1" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 129 'xor' 'xor_ln66' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln66_1 = zext i3 %xor_ln66 to i8" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 130 'zext' 'zext_ln66_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%shl_ln66 = shl i8 1, %zext_ln66_1" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 131 'shl' 'shl_ln66' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%xor_ln66_3 = xor i8 %shl_ln66, -1" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 132 'xor' 'xor_ln66_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 133 [1/1] (1.68ns) (out node of the LUT)   --->   "%shl_ln66_7 = shl i8 %zext_ln98, %zext_ln66_1" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 133 'shl' 'shl_ln66_7' <Predicate = true> <Delay = 1.68> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node or_ln66)   --->   "%and_ln66 = and i8 %trunc_ln66, %xor_ln66_3" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 134 'and' 'and_ln66' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 135 [1/1] (2.28ns) (out node of the LUT)   --->   "%or_ln66 = or i8 %and_ln66, %shl_ln66_7" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 135 'or' 'or_ln66' <Predicate = true> <Delay = 2.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 7> <Delay = 7.22>
ST_10 : Operation 136 [1/1] (1.21ns)   --->   "%icmp_ln66_6 = icmp ugt i5 %start_pos, %or_ln66_6" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 136 'icmp' 'icmp_ln66_6' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln66_42 = zext i5 %start_pos to i6" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 137 'zext' 'zext_ln66_42' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln66_43 = zext i5 %or_ln66_6 to i6" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 138 'zext' 'zext_ln66_43' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_15)   --->   "%zext_ln66_44 = zext i8 %or_ln66 to i32" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 139 'zext' 'zext_ln66_44' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_15)   --->   "%xor_ln66_13 = xor i6 %zext_ln66_42, 31" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 140 'xor' 'xor_ln66_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_13)   --->   "%select_ln66_23 = select i1 %icmp_ln66_6, i6 %zext_ln66_42, i6 %zext_ln66_43" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 141 'select' 'select_ln66_23' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_13)   --->   "%select_ln66_24 = select i1 %icmp_ln66_6, i6 %zext_ln66_43, i6 %zext_ln66_42" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 142 'select' 'select_ln66_24' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_15)   --->   "%select_ln66_25 = select i1 %icmp_ln66_6, i6 %xor_ln66_13, i6 %zext_ln66_42" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 143 'select' 'select_ln66_25' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_13)   --->   "%xor_ln66_14 = xor i6 %select_ln66_23, 31" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 144 'xor' 'xor_ln66_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node shl_ln66_15)   --->   "%zext_ln66_45 = zext i6 %select_ln66_25 to i32" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 145 'zext' 'zext_ln66_45' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_13)   --->   "%zext_ln66_46 = zext i6 %select_ln66_24 to i32" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 146 'zext' 'zext_ln66_46' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_13)   --->   "%zext_ln66_47 = zext i6 %xor_ln66_14 to i32" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 147 'zext' 'zext_ln66_47' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 148 [1/1] (2.42ns) (out node of the LUT)   --->   "%shl_ln66_15 = shl i32 %zext_ln66_44, %zext_ln66_45" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 148 'shl' 'shl_ln66_15' <Predicate = true> <Delay = 2.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_14)   --->   "%tmp_40 = call i32 @llvm.part.select.i32(i32 %shl_ln66_15, i32 31, i32 0)" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 149 'partselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_14)   --->   "%select_ln66_26 = select i1 %icmp_ln66_6, i32 %tmp_40, i32 %shl_ln66_15" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 150 'select' 'select_ln66_26' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_13)   --->   "%shl_ln66_16 = shl i32 -1, %zext_ln66_46" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 151 'shl' 'shl_ln66_16' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node and_ln66_13)   --->   "%lshr_ln66_10 = lshr i32 -1, %zext_ln66_47" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 152 'lshr' 'lshr_ln66_10' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 153 [1/1] (2.28ns) (out node of the LUT)   --->   "%and_ln66_13 = and i32 %shl_ln66_16, %lshr_ln66_10" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 153 'and' 'and_ln66_13' <Predicate = true> <Delay = 2.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 154 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln66_14 = and i32 %select_ln66_26, %and_ln66_13" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 154 'and' 'and_ln66_14' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBRAMWithByteEnable([64 x i32]* %temp)" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 155 'specbramwithbyteenable' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln66_48 = zext i2 %tmp_38 to i4" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 156 'zext' 'zext_ln66_48' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 157 [1/1] (1.49ns)   --->   "%shl_ln66_17 = shl i4 1, %zext_ln66_48" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 157 'shl' 'shl_ln66_17' <Predicate = true> <Delay = 1.49> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 158 [1/1] (2.77ns)   --->   "call void @_ssdm_op_Write.bram.i32(i32* %temp_addr_2, i32 %and_ln66_14, i4 %shl_ln66_17)" [picnic_impl.c:66->picnic_impl.c:129]   --->   Operation 158 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_10 : Operation 159 [1/1] (0.00ns)   --->   "br label %1" [picnic_impl.c:124]   --->   Operation 159 'br' <Predicate = true> <Delay = 0.00>

State 11 <SV = 2> <Delay = 2.77>
ST_11 : Operation 160 [1/1] (0.00ns)   --->   "%loop_0 = phi i3 [ %loop, %5 ], [ 0, %.preheader.preheader ]"   --->   Operation 160 'phi' 'loop_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 161 [1/1] (1.00ns)   --->   "%icmp_ln133 = icmp eq i3 %loop_0, -4" [picnic_impl.c:133]   --->   Operation 161 'icmp' 'icmp_ln133' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 162 [1/1] (0.00ns)   --->   "%empty_77 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 0)"   --->   Operation 162 'speclooptripcount' 'empty_77' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 163 [1/1] (1.34ns)   --->   "%loop = add i3 %loop_0, 1" [picnic_impl.c:133]   --->   Operation 163 'add' 'loop' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 164 [1/1] (0.00ns)   --->   "br i1 %icmp_ln133, label %6, label %5" [picnic_impl.c:133]   --->   Operation 164 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln134 = zext i3 %loop_0 to i64" [picnic_impl.c:134]   --->   Operation 165 'zext' 'zext_ln134' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_11 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln134_1 = zext i3 %loop_0 to i5" [picnic_impl.c:134]   --->   Operation 166 'zext' 'zext_ln134_1' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_11 : Operation 167 [1/1] (0.00ns)   --->   "%temp_addr = getelementptr inbounds [64 x i32]* %temp, i64 0, i64 %zext_ln134" [picnic_impl.c:134]   --->   Operation 167 'getelementptr' 'temp_addr' <Predicate = (!icmp_ln133)> <Delay = 0.00>
ST_11 : Operation 168 [2/2] (2.77ns)   --->   "%temp_load = load i32* %temp_addr, align 4" [picnic_impl.c:134]   --->   Operation 168 'load' 'temp_load' <Predicate = (!icmp_ln133)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_11 : Operation 169 [1/1] (1.54ns)   --->   "%add_ln134 = add i5 %zext_ln134_1, %trunc_ln127" [picnic_impl.c:134]   --->   Operation 169 'add' 'add_ln134' <Predicate = (!icmp_ln133)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 170 [1/1] (0.00ns)   --->   "ret void" [picnic_impl.c:135]   --->   Operation 170 'ret' <Predicate = (icmp_ln133)> <Delay = 0.00>

State 12 <SV = 3> <Delay = 5.54>
ST_12 : Operation 171 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @p_str21138) nounwind" [picnic_impl.c:134]   --->   Operation 171 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 172 [1/2] (2.77ns)   --->   "%temp_load = load i32* %temp_addr, align 4" [picnic_impl.c:134]   --->   Operation 172 'load' 'temp_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_12 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln134_2 = zext i5 %add_ln134 to i64" [picnic_impl.c:134]   --->   Operation 173 'zext' 'zext_ln134_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 174 [1/1] (0.00ns)   --->   "%state_addr = getelementptr [36 x i32]* %output_r, i64 0, i64 %zext_ln134_2" [picnic_impl.c:134]   --->   Operation 174 'getelementptr' 'state_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 175 [1/1] (2.77ns)   --->   "call void @_ssdm_op_Write.bram.i32(i32* %state_addr, i32 %temp_load, i4 -1)" [picnic_impl.c:134]   --->   Operation 175 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_12 : Operation 176 [1/1] (0.00ns)   --->   "br label %.preheader" [picnic_impl.c:133]   --->   Operation 176 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', picnic_impl.c:124) [15]  (1.35 ns)

 <State 2>: 1.72ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', picnic_impl.c:124) [15]  (0 ns)
	'add' operation ('i', picnic_impl.c:124) [18]  (1.72 ns)

 <State 3>: 6.32ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', picnic_impl.c:125) [26]  (0 ns)
	'add' operation ('add_ln126', picnic_impl.c:126) [36]  (1.73 ns)
	'add' operation ('add_ln127_1', picnic_impl.c:127) [44]  (1.81 ns)
	'getelementptr' operation ('temp_matrix2_addr', picnic_impl.c:127) [46]  (0 ns)
	'load' operation ('temp_matrix2_load', picnic_impl.c:127) on array 'temp_matrix2' [47]  (2.77 ns)

 <State 4>: 6.35ns
The critical path consists of the following:
	'load' operation ('state_load', picnic_impl.c:127) on array 'output_r' [43]  (2.77 ns)
	'and' operation ('and_ln127', picnic_impl.c:127) [48]  (0.809 ns)
	'store' operation ('store_ln127', picnic_impl.c:127) of variable 'and_ln127', picnic_impl.c:127 on array 'prod', picnic_impl.c:121 [50]  (2.77 ns)

 <State 5>: 2.77ns
The critical path consists of the following:
	'load' operation ('x', picnic_impl.c:83->picnic_impl.c:129) on array 'prod', picnic_impl.c:121 [54]  (2.77 ns)

 <State 6>: 2.77ns
The critical path consists of the following:
	'load' operation ('x', picnic_impl.c:83->picnic_impl.c:129) on array 'prod', picnic_impl.c:121 [54]  (2.77 ns)

 <State 7>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', picnic_impl.c:85->picnic_impl.c:129) [58]  (0 ns)
	'getelementptr' operation ('prod_addr_2', picnic_impl.c:86->picnic_impl.c:129) [64]  (0 ns)
	'load' operation ('prod_load', picnic_impl.c:86->picnic_impl.c:129) on array 'prod', picnic_impl.c:121 [65]  (2.77 ns)

 <State 8>: 3.58ns
The critical path consists of the following:
	'load' operation ('prod_load', picnic_impl.c:86->picnic_impl.c:129) on array 'prod', picnic_impl.c:121 [65]  (2.77 ns)
	'xor' operation ('x', picnic_impl.c:86->picnic_impl.c:129) [66]  (0.809 ns)

 <State 9>: 8.36ns
The critical path consists of the following:
	'load' operation ('temp_load_1', picnic_impl.c:66->picnic_impl.c:129) on array 'temp', picnic_impl.c:122 [104]  (2.77 ns)
	'select' operation ('select_ln66_21', picnic_impl.c:66->picnic_impl.c:129) [115]  (0 ns)
	'lshr' operation ('lshr_ln66', picnic_impl.c:66->picnic_impl.c:129) [120]  (3.31 ns)
	'and' operation ('and_ln66_12', picnic_impl.c:66->picnic_impl.c:129) [122]  (0 ns)
	'and' operation ('and_ln66', picnic_impl.c:66->picnic_impl.c:129) [129]  (0 ns)
	'or' operation ('or_ln66', picnic_impl.c:66->picnic_impl.c:129) [130]  (2.28 ns)

 <State 10>: 7.22ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln66_6', picnic_impl.c:66->picnic_impl.c:129) [131]  (1.22 ns)
	'select' operation ('select_ln66_25', picnic_impl.c:66->picnic_impl.c:129) [138]  (0 ns)
	'shl' operation ('shl_ln66_15', picnic_impl.c:66->picnic_impl.c:129) [143]  (2.42 ns)
	'select' operation ('select_ln66_26', picnic_impl.c:66->picnic_impl.c:129) [145]  (0 ns)
	'and' operation ('and_ln66_14', picnic_impl.c:66->picnic_impl.c:129) [149]  (0.809 ns)
	'store' operation ('store_ln66', picnic_impl.c:66->picnic_impl.c:129) of constant <constant:_ssdm_op_Write.bram.i32> on array 'temp', picnic_impl.c:122 [153]  (2.77 ns)

 <State 11>: 2.77ns
The critical path consists of the following:
	'phi' operation ('loop') with incoming values : ('loop', picnic_impl.c:133) [158]  (0 ns)
	'getelementptr' operation ('temp_addr', picnic_impl.c:134) [167]  (0 ns)
	'load' operation ('temp_load', picnic_impl.c:134) on array 'temp', picnic_impl.c:122 [168]  (2.77 ns)

 <State 12>: 5.54ns
The critical path consists of the following:
	'load' operation ('temp_load', picnic_impl.c:134) on array 'temp', picnic_impl.c:122 [168]  (2.77 ns)
	'store' operation ('store_ln134', picnic_impl.c:134) of constant <constant:_ssdm_op_Write.bram.i32> on array 'output_r' [172]  (2.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
