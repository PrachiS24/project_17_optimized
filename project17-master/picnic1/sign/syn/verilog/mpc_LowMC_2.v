// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mpc_LowMC_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tapes_tape_address0,
        tapes_tape_ce0,
        tapes_tape_q0,
        tapes_tape_address1,
        tapes_tape_ce1,
        tapes_tape_q1,
        views_inputShare_address0,
        views_inputShare_ce0,
        views_inputShare_q0,
        views_inputShare_offset,
        views_communicatedBi_address0,
        views_communicatedBi_ce0,
        views_communicatedBi_we0,
        views_communicatedBi_d0,
        views_communicatedBi_q0,
        views_outputShare_address0,
        views_outputShare_ce0,
        views_outputShare_we0,
        views_outputShare_d0,
        plaintext_address0,
        plaintext_ce0,
        plaintext_q0,
        slab_address0,
        slab_ce0,
        slab_we0,
        slab_d0,
        slab_q0,
        slab_address1,
        slab_ce1,
        slab_we1,
        slab_d1,
        slab_q1
);

parameter    ap_ST_fsm_state1 = 57'd1;
parameter    ap_ST_fsm_state2 = 57'd2;
parameter    ap_ST_fsm_state3 = 57'd4;
parameter    ap_ST_fsm_state4 = 57'd8;
parameter    ap_ST_fsm_state5 = 57'd16;
parameter    ap_ST_fsm_state6 = 57'd32;
parameter    ap_ST_fsm_state7 = 57'd64;
parameter    ap_ST_fsm_state8 = 57'd128;
parameter    ap_ST_fsm_state9 = 57'd256;
parameter    ap_ST_fsm_state10 = 57'd512;
parameter    ap_ST_fsm_state11 = 57'd1024;
parameter    ap_ST_fsm_state12 = 57'd2048;
parameter    ap_ST_fsm_state13 = 57'd4096;
parameter    ap_ST_fsm_state14 = 57'd8192;
parameter    ap_ST_fsm_state15 = 57'd16384;
parameter    ap_ST_fsm_state16 = 57'd32768;
parameter    ap_ST_fsm_state17 = 57'd65536;
parameter    ap_ST_fsm_state18 = 57'd131072;
parameter    ap_ST_fsm_state19 = 57'd262144;
parameter    ap_ST_fsm_state20 = 57'd524288;
parameter    ap_ST_fsm_state21 = 57'd1048576;
parameter    ap_ST_fsm_state22 = 57'd2097152;
parameter    ap_ST_fsm_state23 = 57'd4194304;
parameter    ap_ST_fsm_state24 = 57'd8388608;
parameter    ap_ST_fsm_state25 = 57'd16777216;
parameter    ap_ST_fsm_state26 = 57'd33554432;
parameter    ap_ST_fsm_state27 = 57'd67108864;
parameter    ap_ST_fsm_state28 = 57'd134217728;
parameter    ap_ST_fsm_state29 = 57'd268435456;
parameter    ap_ST_fsm_state30 = 57'd536870912;
parameter    ap_ST_fsm_state31 = 57'd1073741824;
parameter    ap_ST_fsm_state32 = 57'd2147483648;
parameter    ap_ST_fsm_state33 = 57'd4294967296;
parameter    ap_ST_fsm_state34 = 57'd8589934592;
parameter    ap_ST_fsm_state35 = 57'd17179869184;
parameter    ap_ST_fsm_state36 = 57'd34359738368;
parameter    ap_ST_fsm_state37 = 57'd68719476736;
parameter    ap_ST_fsm_state38 = 57'd137438953472;
parameter    ap_ST_fsm_state39 = 57'd274877906944;
parameter    ap_ST_fsm_state40 = 57'd549755813888;
parameter    ap_ST_fsm_state41 = 57'd1099511627776;
parameter    ap_ST_fsm_state42 = 57'd2199023255552;
parameter    ap_ST_fsm_state43 = 57'd4398046511104;
parameter    ap_ST_fsm_state44 = 57'd8796093022208;
parameter    ap_ST_fsm_state45 = 57'd17592186044416;
parameter    ap_ST_fsm_state46 = 57'd35184372088832;
parameter    ap_ST_fsm_state47 = 57'd70368744177664;
parameter    ap_ST_fsm_state48 = 57'd140737488355328;
parameter    ap_ST_fsm_state49 = 57'd281474976710656;
parameter    ap_ST_fsm_state50 = 57'd562949953421312;
parameter    ap_ST_fsm_state51 = 57'd1125899906842624;
parameter    ap_ST_fsm_state52 = 57'd2251799813685248;
parameter    ap_ST_fsm_state53 = 57'd4503599627370496;
parameter    ap_ST_fsm_state54 = 57'd9007199254740992;
parameter    ap_ST_fsm_state55 = 57'd18014398509481984;
parameter    ap_ST_fsm_state56 = 57'd36028797018963968;
parameter    ap_ST_fsm_state57 = 57'd72057594037927936;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] tapes_tape_address0;
output   tapes_tape_ce0;
input  [7:0] tapes_tape_q0;
output  [8:0] tapes_tape_address1;
output   tapes_tape_ce1;
input  [7:0] tapes_tape_q1;
output  [11:0] views_inputShare_address0;
output   views_inputShare_ce0;
input  [31:0] views_inputShare_q0;
input  [7:0] views_inputShare_offset;
output  [15:0] views_communicatedBi_address0;
output   views_communicatedBi_ce0;
output   views_communicatedBi_we0;
output  [7:0] views_communicatedBi_d0;
input  [7:0] views_communicatedBi_q0;
output  [11:0] views_outputShare_address0;
output   views_outputShare_ce0;
output   views_outputShare_we0;
output  [31:0] views_outputShare_d0;
output  [2:0] plaintext_address0;
output   plaintext_ce0;
input  [31:0] plaintext_q0;
output  [5:0] slab_address0;
output   slab_ce0;
output  [3:0] slab_we0;
output  [31:0] slab_d0;
input  [31:0] slab_q0;
output  [5:0] slab_address1;
output   slab_ce1;
output  [3:0] slab_we1;
output  [31:0] slab_d1;
input  [31:0] slab_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tapes_tape_ce0;
reg tapes_tape_ce1;
reg views_inputShare_ce0;
reg views_communicatedBi_ce0;
reg views_communicatedBi_we0;
reg views_outputShare_ce0;
reg views_outputShare_we0;
reg plaintext_ce0;
reg[5:0] slab_address0;
reg slab_ce0;
reg[3:0] slab_we0;
reg[31:0] slab_d0;
reg[5:0] slab_address1;
reg slab_ce1;
reg[3:0] slab_we1;
reg[31:0] slab_d1;

(* fsm_encoding = "none" *) reg   [56:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] temp_matrix3_address0;
reg    temp_matrix3_ce0;
wire   [31:0] temp_matrix3_q0;
reg   [31:0] reg_1092;
wire    ap_CS_fsm_state29;
wire    grp_mpc_AND_2_fu_991_ap_ready;
wire    grp_mpc_AND_2_fu_991_ap_done;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state33;
wire   [10:0] sub_ln1514_fu_1113_p2;
reg   [10:0] sub_ln1514_reg_3071;
wire   [4:0] loop_fu_1125_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] i_2_fu_1142_p2;
reg   [2:0] i_2_reg_3087;
wire    ap_CS_fsm_state3;
reg   [5:0] slab_addr_1_reg_3092;
wire   [0:0] icmp_ln108_fu_1136_p2;
wire   [1:0] i_4_fu_1181_p2;
reg   [1:0] i_4_reg_3105;
wire    ap_CS_fsm_state10;
wire   [19:0] mem_index_phi_fu_1192_p6;
reg   [19:0] mem_index_phi_reg_3117;
wire    ap_CS_fsm_state11;
wire   [2:0] i_5_fu_1212_p2;
reg   [2:0] i_5_reg_3125;
wire    ap_CS_fsm_state12;
reg   [5:0] slab_addr_2_reg_3130;
wire   [0:0] icmp_ln108_2_fu_1206_p2;
wire   [13:0] shl_ln_fu_1269_p3;
reg   [13:0] shl_ln_reg_3198;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln1494_fu_1263_p2;
wire   [4:0] add_ln1401_fu_1288_p2;
reg   [4:0] add_ln1401_reg_3207;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln1398_fu_1282_p2;
wire   [4:0] add_ln1402_fu_1294_p2;
reg   [4:0] add_ln1402_reg_3212;
wire   [7:0] zext_ln54_fu_1306_p1;
reg   [7:0] zext_ln54_reg_3217;
wire   [7:0] zext_ln54_5_fu_1316_p1;
reg   [7:0] zext_ln54_5_reg_3224;
wire   [7:0] zext_ln54_6_fu_1326_p1;
reg   [7:0] zext_ln54_6_reg_3231;
wire   [13:0] add_ln1503_fu_1330_p2;
reg   [13:0] add_ln1503_reg_3238;
wire   [1:0] j_7_fu_1342_p2;
reg   [1:0] j_7_reg_3246;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln1400_fu_1336_p2;
wire    ap_CS_fsm_state22;
wire   [0:0] a_0_fu_1490_p1;
reg   [0:0] a_0_reg_3276;
wire    ap_CS_fsm_state23;
wire   [7:0] zext_ln54_10_fu_1494_p1;
wire    ap_CS_fsm_state24;
reg   [31:0] slab_load_9_reg_3293;
wire    ap_CS_fsm_state25;
wire   [0:0] b_0_fu_1657_p1;
reg   [0:0] b_0_reg_3299;
wire   [7:0] zext_ln54_11_fu_1661_p1;
wire    ap_CS_fsm_state26;
wire   [0:0] c_0_fu_1783_p1;
reg   [0:0] c_0_reg_3311;
wire   [7:0] zext_ln54_12_fu_1787_p1;
wire    ap_CS_fsm_state27;
reg   [7:0] ab_0_reg_3323;
reg   [7:0] ab_1_reg_3328;
reg   [7:0] ab_2_reg_3333;
wire    ap_CS_fsm_state30;
reg   [7:0] bc_0_reg_3353;
reg   [7:0] bc_1_reg_3358;
reg   [7:0] bc_2_reg_3363;
wire    ap_CS_fsm_state32;
reg   [7:0] ca_0_reg_3383;
reg   [7:0] ca_1_reg_3388;
reg   [7:0] ca_2_reg_3393;
wire   [7:0] xor_ln66_fu_1849_p2;
reg   [7:0] xor_ln66_reg_3398;
wire   [7:0] xor_ln66_1_fu_1860_p2;
reg   [7:0] xor_ln66_1_reg_3403;
wire   [7:0] xor_ln66_2_fu_1871_p2;
reg   [7:0] xor_ln66_2_reg_3408;
wire   [1:0] j_fu_1898_p2;
reg   [1:0] j_reg_3416;
wire    ap_CS_fsm_state34;
wire   [7:0] tmp_5_i_fu_1904_p5;
reg   [7:0] tmp_5_i_reg_3421;
wire   [0:0] icmp_ln1410_fu_1892_p2;
wire   [7:0] tmp_6_i_fu_1916_p5;
reg   [7:0] tmp_6_i_reg_3426;
wire   [1:0] grp_fu_1036_p4;
reg   [1:0] tmp_21_reg_3431;
reg   [5:0] slab_addr_7_reg_3437;
wire   [1:0] grp_fu_1045_p4;
reg   [1:0] tmp_24_reg_3443;
wire   [7:0] shl_ln66_4_fu_1975_p2;
reg   [7:0] shl_ln66_4_reg_3449;
wire   [1:0] grp_fu_1054_p4;
reg   [1:0] tmp_27_reg_3454;
wire   [7:0] shl_ln66_5_fu_2043_p2;
reg   [7:0] shl_ln66_5_reg_3460;
wire   [4:0] add_ln1398_fu_2048_p2;
wire   [4:0] cast_offset1_fu_2063_p3;
reg   [4:0] cast_offset1_reg_3470;
wire    ap_CS_fsm_state35;
wire   [4:0] or_ln66_3_fu_2071_p2;
reg   [4:0] or_ln66_3_reg_3476;
wire   [7:0] or_ln66_fu_2184_p2;
reg   [7:0] or_ln66_reg_3482;
reg   [5:0] slab_addr_8_reg_3487;
wire    ap_CS_fsm_state37;
wire   [4:0] cast_offset2_fu_2335_p3;
reg   [4:0] cast_offset2_reg_3493;
wire    ap_CS_fsm_state38;
wire   [4:0] or_ln66_4_fu_2343_p2;
reg   [4:0] or_ln66_4_reg_3499;
wire   [7:0] or_ln66_1_fu_2451_p2;
reg   [7:0] or_ln66_1_reg_3505;
reg   [5:0] slab_addr_9_reg_3510;
wire    ap_CS_fsm_state40;
wire   [4:0] cast_offset3_fu_2601_p3;
reg   [4:0] cast_offset3_reg_3516;
wire    ap_CS_fsm_state41;
wire   [4:0] or_ln66_5_fu_2609_p2;
reg   [4:0] or_ln66_5_reg_3522;
wire   [7:0] or_ln66_2_fu_2717_p2;
reg   [7:0] or_ln66_2_reg_3528;
wire   [6:0] add_ln1507_fu_2846_p2;
reg   [6:0] add_ln1507_reg_3533;
wire    ap_CS_fsm_state47;
wire    grp_matrix_mul_1_fu_978_ap_ready;
wire    grp_matrix_mul_1_fu_978_ap_done;
wire   [2:0] i_8_fu_2858_p2;
reg   [2:0] i_8_reg_3541;
wire    ap_CS_fsm_state48;
reg   [5:0] slab_addr_4_reg_3546;
wire   [0:0] icmp_ln108_1_fu_2852_p2;
wire   [1:0] i_9_fu_2906_p2;
reg   [1:0] i_9_reg_3560;
wire    ap_CS_fsm_state50;
wire   [4:0] r_fu_2912_p2;
wire   [0:0] icmp_ln252_1_fu_2900_p2;
wire   [19:0] mem_index_phi3_fu_2918_p6;
reg   [19:0] mem_index_phi3_reg_3570;
wire    ap_CS_fsm_state51;
wire   [2:0] i_10_fu_2938_p2;
reg   [2:0] i_10_reg_3578;
wire    ap_CS_fsm_state52;
reg   [5:0] slab_addr_11_reg_3583;
wire   [0:0] icmp_ln108_3_fu_2932_p2;
wire   [1:0] i_fu_2995_p2;
reg   [1:0] i_reg_3596;
wire    ap_CS_fsm_state54;
wire   [12:0] tmp_38_cast_fu_3010_p3;
reg   [12:0] tmp_38_cast_reg_3601;
wire   [0:0] icmp_ln1511_fu_2989_p2;
wire   [2:0] loop_21_fu_3024_p2;
reg   [2:0] loop_21_reg_3609;
wire    ap_CS_fsm_state55;
reg   [11:0] views_outputShare_ad_reg_3614;
wire   [0:0] icmp_ln1513_fu_3018_p2;
wire    ap_CS_fsm_state56;
wire    grp_matrix_mul_fu_957_ap_start;
wire    grp_matrix_mul_fu_957_ap_done;
wire    grp_matrix_mul_fu_957_ap_idle;
wire    grp_matrix_mul_fu_957_ap_ready;
wire   [5:0] grp_matrix_mul_fu_957_output_r_address0;
wire    grp_matrix_mul_fu_957_output_r_ce0;
wire   [3:0] grp_matrix_mul_fu_957_output_r_we0;
wire   [31:0] grp_matrix_mul_fu_957_output_r_d0;
reg   [4:0] grp_matrix_mul_fu_957_output_offset;
wire   [11:0] grp_matrix_mul_fu_957_state_address0;
wire    grp_matrix_mul_fu_957_state_ce0;
reg   [3:0] grp_matrix_mul_fu_957_state_offset1;
reg   [13:0] grp_matrix_mul_fu_957_matrix_offset;
wire    grp_matrix_mul_1_fu_978_ap_start;
wire    grp_matrix_mul_1_fu_978_ap_idle;
wire   [5:0] grp_matrix_mul_1_fu_978_output_r_address0;
wire    grp_matrix_mul_1_fu_978_output_r_ce0;
wire   [3:0] grp_matrix_mul_1_fu_978_output_r_we0;
wire   [31:0] grp_matrix_mul_1_fu_978_output_r_d0;
reg   [5:0] grp_matrix_mul_1_fu_978_state_offset;
wire    grp_mpc_AND_2_fu_991_ap_start;
wire    grp_mpc_AND_2_fu_991_ap_idle;
reg   [7:0] grp_mpc_AND_2_fu_991_in1_0_read;
reg   [7:0] grp_mpc_AND_2_fu_991_in1_1_read;
reg   [7:0] grp_mpc_AND_2_fu_991_in1_2_read;
reg   [7:0] grp_mpc_AND_2_fu_991_in2_0_read;
reg   [7:0] grp_mpc_AND_2_fu_991_in2_1_read;
reg   [7:0] grp_mpc_AND_2_fu_991_in2_2_read;
reg   [7:0] grp_mpc_AND_2_fu_991_out_0_read;
reg   [7:0] grp_mpc_AND_2_fu_991_out_1_read;
reg   [7:0] grp_mpc_AND_2_fu_991_out_2_read;
wire   [8:0] grp_mpc_AND_2_fu_991_rand_tape_address0;
wire    grp_mpc_AND_2_fu_991_rand_tape_ce0;
wire   [8:0] grp_mpc_AND_2_fu_991_rand_tape_address1;
wire    grp_mpc_AND_2_fu_991_rand_tape_ce1;
reg   [31:0] grp_mpc_AND_2_fu_991_rand_pos_read;
wire   [15:0] grp_mpc_AND_2_fu_991_views_communicatedBi_address0;
wire    grp_mpc_AND_2_fu_991_views_communicatedBi_ce0;
wire    grp_mpc_AND_2_fu_991_views_communicatedBi_we0;
wire   [7:0] grp_mpc_AND_2_fu_991_views_communicatedBi_d0;
wire   [31:0] grp_mpc_AND_2_fu_991_ap_return_0;
wire   [7:0] grp_mpc_AND_2_fu_991_ap_return_1;
wire   [7:0] grp_mpc_AND_2_fu_991_ap_return_2;
wire   [7:0] grp_mpc_AND_2_fu_991_ap_return_3;
reg   [4:0] loop_0_reg_371;
wire   [0:0] icmp_ln1477_fu_1119_p2;
reg   [2:0] i_0_i_i_reg_382;
wire    ap_CS_fsm_state4;
wire   [1:0] ap_phi_mux_i_0_i_phi_fu_397_p4;
reg   [1:0] i_0_i_reg_393;
wire    ap_CS_fsm_state9;
reg   [4:0] phi_ln109_reg_405;
wire   [0:0] icmp_ln252_fu_1175_p2;
reg   [2:0] i_0_i_i3_reg_423;
wire    ap_CS_fsm_state13;
reg   [4:0] r_0_reg_434;
reg   [7:0] c_2_1_i_reg_566;
reg   [7:0] c_2_038_i_reg_446;
reg   [7:0] c_1_1_i_reg_578;
reg   [7:0] c_1_037_i_reg_458;
reg   [7:0] c_0_1_i_reg_590;
reg   [7:0] c_0_036_i_reg_470;
reg   [7:0] b_2_1_i_reg_602;
reg   [7:0] b_2_035_i_reg_482;
reg   [7:0] b_1_1_i_reg_614;
reg   [7:0] b_1_034_i_reg_494;
reg   [7:0] b_0_1_i_reg_626;
reg   [7:0] b_0_033_i_reg_506;
reg   [7:0] a_2_1_i_reg_638;
reg   [7:0] a_2_032_i_reg_518;
reg   [7:0] a_1_1_i_reg_650;
reg   [7:0] a_1_031_i_reg_530;
reg   [7:0] a_0_1_i_reg_662;
reg   [7:0] a_0_030_i_reg_542;
reg   [4:0] bitNumber_assign_2_i_reg_554;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state28;
reg   [7:0] b_2_2_i_reg_748;
reg   [7:0] b_1_2_i_reg_763;
reg   [7:0] b_0_2_i_reg_778;
reg   [7:0] a_2_2_i_reg_703;
reg   [7:0] a_1_2_i_reg_718;
reg   [7:0] a_0_2_i_reg_733;
wire   [1:0] ap_phi_mux_j_0_i_phi_fu_678_p4;
reg   [1:0] j_0_i_reg_674;
reg   [6:0] phi_ln54_reg_686;
reg   [7:0] c_2_1_i_be_reg_793;
reg   [7:0] c_1_1_i_be_reg_808;
reg   [7:0] c_0_1_i_be_reg_823;
wire   [1:0] ap_phi_mux_j_1_i_phi_fu_842_p4;
reg   [1:0] j_1_i_reg_838;
wire    ap_CS_fsm_state42;
reg   [6:0] ap_phi_mux_phi_ln66_phi_fu_853_p6;
reg   [2:0] i_0_i_i2_reg_864;
wire    ap_CS_fsm_state49;
wire   [1:0] ap_phi_mux_i_0_i11_phi_fu_879_p4;
reg   [1:0] i_0_i11_reg_875;
reg   [4:0] phi_ln109_1_reg_887;
reg   [2:0] i_0_i_i15_reg_905;
wire    ap_CS_fsm_state53;
reg   [1:0] i_1_reg_916;
reg   [2:0] loop_1_reg_928;
wire    ap_CS_fsm_state57;
reg   [4:0] phi_ln1514_reg_940;
reg    grp_matrix_mul_fu_957_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state17;
reg    grp_matrix_mul_1_fu_978_ap_start_reg;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
reg    grp_mpc_AND_2_fu_991_ap_start_reg;
wire   [63:0] zext_ln1478_fu_1131_p1;
wire   [63:0] zext_ln109_1_fu_1163_p1;
wire   [63:0] zext_ln109_fu_1148_p1;
wire   [63:0] zext_ln109_5_fu_1234_p1;
wire   [63:0] zext_ln109_7_fu_1258_p1;
wire   [63:0] zext_ln54_7_fu_1364_p1;
wire   [63:0] zext_ln54_15_fu_1531_p1;
wire   [63:0] zext_ln66_fu_1925_p1;
wire   [63:0] zext_ln66_12_fu_2330_p1;
wire   [63:0] zext_ln66_24_fu_2596_p1;
wire   [63:0] zext_ln109_8_fu_2878_p1;
wire   [63:0] zext_ln109_4_fu_2888_p1;
wire   [63:0] zext_ln109_10_fu_2960_p1;
wire   [63:0] zext_ln109_12_fu_2984_p1;
wire   [63:0] zext_ln1514_4_fu_3039_p1;
wire   [63:0] zext_ln1514_6_fu_3060_p1;
reg   [31:0] tapes_pos_0_fu_174;
reg   [7:0] ab_0_1_fu_178;
reg   [7:0] ab_1_1_fu_182;
reg   [7:0] ab_2_1_fu_186;
reg   [7:0] bc_0_1_fu_190;
reg   [7:0] bc_1_1_fu_194;
reg   [7:0] bc_2_1_fu_198;
reg   [7:0] ca_0_1_fu_202;
reg   [7:0] ca_1_1_fu_206;
reg   [7:0] ca_2_1_fu_210;
wire   [31:0] xor_ln109_fu_1168_p2;
wire   [31:0] grp_fu_1028_p2;
wire    ap_CS_fsm_state36;
wire   [31:0] and_ln66_5_fu_2289_p2;
wire   [3:0] shl_ln66_8_fu_2299_p2;
wire    ap_CS_fsm_state39;
wire   [31:0] and_ln66_8_fu_2555_p2;
wire   [3:0] shl_ln66_11_fu_2565_p2;
wire   [31:0] and_ln66_11_fu_2821_p2;
wire   [3:0] shl_ln66_14_fu_2831_p2;
wire   [31:0] xor_ln109_1_fu_2893_p2;
reg   [4:0] grp_fu_1080_p0;
reg   [4:0] grp_fu_1080_p1;
reg   [4:0] grp_fu_1084_p0;
reg   [4:0] grp_fu_1084_p1;
reg   [4:0] grp_fu_1088_p0;
reg   [4:0] grp_fu_1088_p1;
wire   [9:0] tmp_fu_1101_p3;
wire   [10:0] zext_ln1514_1_fu_1109_p1;
wire   [10:0] zext_ln1514_fu_1097_p1;
wire   [2:0] xor_ln109_2_fu_1153_p2;
wire  signed [3:0] sext_ln109_fu_1159_p1;
wire   [4:0] zext_ln109_2_fu_1218_p1;
wire   [4:0] add_ln109_1_fu_1222_p2;
wire   [4:0] add_ln109_2_fu_1228_p2;
wire   [3:0] trunc_ln109_fu_1243_p1;
wire   [3:0] zext_ln109_6_fu_1239_p1;
wire   [3:0] add_ln109_3_fu_1246_p2;
wire   [3:0] add_ln109_4_fu_1252_p2;
wire   [2:0] trunc_ln1398_fu_1278_p1;
wire   [2:0] sub_ln54_fu_1300_p2;
wire   [2:0] sub_ln54_1_fu_1310_p2;
wire   [2:0] xor_ln54_fu_1320_p2;
wire   [4:0] cast_offset_fu_1369_p3;
wire   [4:0] or_ln54_fu_1377_p2;
wire   [5:0] zext_ln54_8_fu_1389_p1;
wire   [5:0] zext_ln54_9_fu_1393_p1;
wire   [0:0] icmp_ln54_fu_1383_p2;
wire   [5:0] sub_ln54_2_fu_1407_p2;
wire   [5:0] sub_ln54_3_fu_1419_p2;
reg   [31:0] tmp_20_fu_1397_p4;
wire   [5:0] xor_ln54_3_fu_1413_p2;
wire   [5:0] select_ln54_fu_1425_p3;
wire   [5:0] select_ln54_2_fu_1441_p3;
wire   [5:0] sub_ln54_4_fu_1449_p2;
wire   [31:0] select_ln54_1_fu_1433_p3;
wire   [31:0] zext_ln54_13_fu_1455_p1;
wire   [31:0] zext_ln54_14_fu_1459_p1;
wire   [31:0] lshr_ln54_5_fu_1463_p2;
wire   [31:0] lshr_ln54_6_fu_1469_p2;
wire   [31:0] and_ln54_fu_1475_p2;
wire   [7:0] trunc_ln54_fu_1481_p1;
wire   [7:0] lshr_ln54_fu_1485_p2;
wire   [0:0] icmp_ln1402_1_fu_1503_p2;
wire   [0:0] icmp_ln1402_fu_1497_p2;
wire   [0:0] or_ln1402_fu_1509_p2;
wire   [6:0] select_ln54_3_fu_1515_p3;
wire   [6:0] select_ln54_4_fu_1523_p3;
wire   [4:0] cast_offset4_fu_1536_p3;
wire   [4:0] or_ln54_1_fu_1544_p2;
wire   [5:0] zext_ln54_16_fu_1556_p1;
wire   [5:0] zext_ln54_17_fu_1560_p1;
wire   [0:0] icmp_ln54_1_fu_1550_p2;
wire   [5:0] sub_ln54_5_fu_1574_p2;
wire   [5:0] sub_ln54_6_fu_1586_p2;
reg   [31:0] tmp_31_fu_1564_p4;
wire   [5:0] xor_ln54_4_fu_1580_p2;
wire   [5:0] select_ln54_5_fu_1592_p3;
wire   [5:0] select_ln54_7_fu_1608_p3;
wire   [5:0] sub_ln54_7_fu_1616_p2;
wire   [31:0] select_ln54_6_fu_1600_p3;
wire   [31:0] zext_ln54_18_fu_1622_p1;
wire   [31:0] zext_ln54_19_fu_1626_p1;
wire   [31:0] lshr_ln54_7_fu_1630_p2;
wire   [31:0] lshr_ln54_8_fu_1636_p2;
wire   [31:0] and_ln54_1_fu_1642_p2;
wire   [7:0] trunc_ln54_2_fu_1648_p1;
wire   [7:0] lshr_ln54_3_fu_1652_p2;
wire   [4:0] cast_offset5_fu_1664_p3;
wire   [4:0] or_ln54_2_fu_1672_p2;
wire   [5:0] zext_ln54_20_fu_1684_p1;
wire   [5:0] zext_ln54_21_fu_1688_p1;
wire   [0:0] icmp_ln54_2_fu_1678_p2;
wire   [5:0] sub_ln54_8_fu_1701_p2;
wire   [5:0] sub_ln54_9_fu_1713_p2;
reg   [31:0] tmp_33_fu_1692_p4;
wire   [5:0] xor_ln54_5_fu_1707_p2;
wire   [5:0] select_ln54_8_fu_1719_p3;
wire   [5:0] select_ln54_10_fu_1734_p3;
wire   [5:0] sub_ln54_10_fu_1742_p2;
wire   [31:0] select_ln54_9_fu_1727_p3;
wire   [31:0] zext_ln54_22_fu_1748_p1;
wire   [31:0] zext_ln54_23_fu_1752_p1;
wire   [31:0] lshr_ln54_9_fu_1756_p2;
wire   [31:0] lshr_ln54_10_fu_1762_p2;
wire   [31:0] and_ln54_2_fu_1768_p2;
wire   [7:0] trunc_ln54_4_fu_1774_p1;
wire   [7:0] lshr_ln54_4_fu_1778_p2;
wire   [7:0] shl_ln66_fu_1844_p2;
wire   [7:0] shl_ln66_1_fu_1855_p2;
wire   [7:0] shl_ln66_2_fu_1866_p2;
wire   [7:0] tmp_7_i_fu_1930_p5;
wire   [7:0] tmp_10_i_fu_1954_p5;
wire   [7:0] xor_ln1412_fu_1963_p2;
wire   [7:0] tmp_8_i_fu_1942_p5;
wire   [7:0] xor_ln1412_1_fu_1969_p2;
wire   [7:0] tmp_11_i_fu_1992_p5;
wire   [7:0] tmp_i_68_fu_1980_p5;
wire   [7:0] tmp_12_i_fu_2004_p5;
wire   [7:0] tmp_13_i_fu_2016_p5;
wire   [7:0] xor_ln1413_1_fu_2031_p2;
wire   [7:0] xor_ln1413_fu_2025_p2;
wire   [7:0] xor_ln1413_2_fu_2037_p2;
wire   [5:0] zext_ln66_1_fu_2078_p1;
wire   [5:0] zext_ln66_2_fu_2082_p1;
wire   [0:0] grp_fu_1080_p2;
wire   [5:0] sub_ln66_fu_2096_p2;
wire   [5:0] sub_ln66_1_fu_2108_p2;
reg   [31:0] tmp_22_fu_2086_p4;
wire   [5:0] xor_ln66_3_fu_2102_p2;
wire   [5:0] select_ln66_fu_2114_p3;
wire   [5:0] select_ln66_2_fu_2130_p3;
wire   [5:0] sub_ln66_2_fu_2138_p2;
wire   [31:0] select_ln66_1_fu_2122_p3;
wire   [31:0] zext_ln66_3_fu_2144_p1;
wire   [31:0] zext_ln66_4_fu_2148_p1;
wire   [31:0] lshr_ln66_fu_2152_p2;
wire   [31:0] lshr_ln66_1_fu_2158_p2;
wire   [31:0] and_ln66_3_fu_2164_p2;
wire   [7:0] xor_ln1411_fu_2059_p2;
wire   [7:0] trunc_ln66_fu_2170_p1;
wire   [7:0] and_ln66_fu_2179_p2;
wire   [7:0] shl_ln66_3_fu_2174_p2;
wire   [5:0] zext_ln66_5_fu_2190_p1;
wire   [5:0] zext_ln66_6_fu_2193_p1;
wire   [5:0] xor_ln66_4_fu_2199_p2;
wire   [5:0] select_ln66_3_fu_2205_p3;
wire   [5:0] select_ln66_5_fu_2221_p3;
wire   [5:0] select_ln66_4_fu_2213_p3;
wire   [5:0] xor_ln66_5_fu_2229_p2;
wire   [31:0] zext_ln66_7_fu_2196_p1;
wire   [31:0] zext_ln66_8_fu_2235_p1;
wire   [31:0] shl_ln66_6_fu_2247_p2;
reg   [31:0] tmp_23_fu_2253_p4;
wire   [31:0] zext_ln66_9_fu_2239_p1;
wire   [31:0] zext_ln66_10_fu_2243_p1;
wire   [31:0] shl_ln66_7_fu_2271_p2;
wire   [31:0] lshr_ln66_2_fu_2277_p2;
wire   [31:0] select_ln66_6_fu_2263_p3;
wire   [31:0] and_ln66_4_fu_2283_p2;
wire   [3:0] zext_ln66_11_fu_2296_p1;
wire   [19:0] mem_index_phi1_fu_2306_p6;
wire   [6:0] trunc_ln66_1_fu_2320_p1;
wire   [6:0] add_ln66_fu_2324_p2;
wire   [5:0] zext_ln66_13_fu_2350_p1;
wire   [5:0] zext_ln66_14_fu_2354_p1;
wire   [0:0] grp_fu_1084_p2;
wire   [5:0] sub_ln66_3_fu_2368_p2;
wire   [5:0] sub_ln66_4_fu_2380_p2;
reg   [31:0] tmp_25_fu_2358_p4;
wire   [5:0] xor_ln66_6_fu_2374_p2;
wire   [5:0] select_ln66_7_fu_2386_p3;
wire   [5:0] select_ln66_9_fu_2402_p3;
wire   [5:0] sub_ln66_5_fu_2410_p2;
wire   [31:0] select_ln66_8_fu_2394_p3;
wire   [31:0] zext_ln66_15_fu_2416_p1;
wire   [31:0] zext_ln66_16_fu_2420_p1;
wire   [31:0] lshr_ln66_3_fu_2424_p2;
wire   [31:0] lshr_ln66_4_fu_2430_p2;
wire   [31:0] and_ln66_6_fu_2436_p2;
wire   [7:0] trunc_ln66_2_fu_2442_p1;
wire   [7:0] and_ln66_1_fu_2446_p2;
wire   [5:0] zext_ln66_17_fu_2456_p1;
wire   [5:0] zext_ln66_18_fu_2459_p1;
wire   [5:0] xor_ln66_7_fu_2465_p2;
wire   [5:0] select_ln66_10_fu_2471_p3;
wire   [5:0] select_ln66_12_fu_2487_p3;
wire   [5:0] select_ln66_11_fu_2479_p3;
wire   [5:0] xor_ln66_8_fu_2495_p2;
wire   [31:0] zext_ln66_19_fu_2462_p1;
wire   [31:0] zext_ln66_20_fu_2501_p1;
wire   [31:0] shl_ln66_9_fu_2513_p2;
reg   [31:0] tmp_26_fu_2519_p4;
wire   [31:0] zext_ln66_21_fu_2505_p1;
wire   [31:0] zext_ln66_22_fu_2509_p1;
wire   [31:0] shl_ln66_10_fu_2537_p2;
wire   [31:0] lshr_ln66_5_fu_2543_p2;
wire   [31:0] select_ln66_13_fu_2529_p3;
wire   [31:0] and_ln66_7_fu_2549_p2;
wire   [3:0] zext_ln66_23_fu_2562_p1;
wire   [19:0] mem_index_phi2_fu_2572_p6;
wire   [6:0] trunc_ln66_3_fu_2586_p1;
wire   [6:0] add_ln66_1_fu_2590_p2;
wire   [5:0] zext_ln66_25_fu_2616_p1;
wire   [5:0] zext_ln66_26_fu_2620_p1;
wire   [0:0] grp_fu_1088_p2;
wire   [5:0] sub_ln66_6_fu_2634_p2;
wire   [5:0] sub_ln66_7_fu_2646_p2;
reg   [31:0] tmp_28_fu_2624_p4;
wire   [5:0] xor_ln66_9_fu_2640_p2;
wire   [5:0] select_ln66_14_fu_2652_p3;
wire   [5:0] select_ln66_16_fu_2668_p3;
wire   [5:0] sub_ln66_8_fu_2676_p2;
wire   [31:0] select_ln66_15_fu_2660_p3;
wire   [31:0] zext_ln66_27_fu_2682_p1;
wire   [31:0] zext_ln66_28_fu_2686_p1;
wire   [31:0] lshr_ln66_6_fu_2690_p2;
wire   [31:0] lshr_ln66_7_fu_2696_p2;
wire   [31:0] and_ln66_9_fu_2702_p2;
wire   [7:0] trunc_ln66_4_fu_2708_p1;
wire   [7:0] and_ln66_2_fu_2712_p2;
wire   [5:0] zext_ln66_29_fu_2722_p1;
wire   [5:0] zext_ln66_30_fu_2725_p1;
wire   [5:0] xor_ln66_10_fu_2731_p2;
wire   [5:0] select_ln66_17_fu_2737_p3;
wire   [5:0] select_ln66_19_fu_2753_p3;
wire   [5:0] select_ln66_18_fu_2745_p3;
wire   [5:0] xor_ln66_11_fu_2761_p2;
wire   [31:0] zext_ln66_31_fu_2728_p1;
wire   [31:0] zext_ln66_32_fu_2767_p1;
wire   [31:0] shl_ln66_12_fu_2779_p2;
reg   [31:0] tmp_29_fu_2785_p4;
wire   [31:0] zext_ln66_33_fu_2771_p1;
wire   [31:0] zext_ln66_34_fu_2775_p1;
wire   [31:0] shl_ln66_13_fu_2803_p2;
wire   [31:0] lshr_ln66_8_fu_2809_p2;
wire   [31:0] select_ln66_20_fu_2795_p3;
wire   [31:0] and_ln66_10_fu_2815_p2;
wire   [3:0] zext_ln66_35_fu_2828_p1;
wire   [6:0] shl_ln1_fu_2838_p3;
wire   [2:0] xor_ln109_5_fu_2868_p2;
wire  signed [3:0] sext_ln109_1_fu_2874_p1;
wire   [6:0] zext_ln109_3_fu_2864_p1;
wire   [6:0] add_ln109_fu_2883_p2;
wire   [4:0] zext_ln109_9_fu_2944_p1;
wire   [4:0] add_ln109_5_fu_2948_p2;
wire   [4:0] add_ln109_6_fu_2954_p2;
wire   [3:0] trunc_ln109_1_fu_2969_p1;
wire   [3:0] zext_ln109_11_fu_2965_p1;
wire   [3:0] add_ln109_7_fu_2972_p2;
wire   [3:0] add_ln109_8_fu_2978_p2;
wire   [10:0] zext_ln1514_2_fu_3001_p1;
wire   [10:0] add_ln1514_fu_3005_p2;
wire   [12:0] zext_ln1514_3_fu_3030_p1;
wire   [12:0] add_ln1514_1_fu_3034_p2;
wire   [4:0] zext_ln1514_5_fu_3044_p1;
wire   [4:0] add_ln1514_2_fu_3048_p2;
wire   [4:0] add_ln1514_3_fu_3054_p2;
reg   [56:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 57'd1;
#0 grp_matrix_mul_fu_957_ap_start_reg = 1'b0;
#0 grp_matrix_mul_1_fu_978_ap_start_reg = 1'b0;
#0 grp_mpc_AND_2_fu_991_ap_start_reg = 1'b0;
end

mpc_LowMC_2_temp_Yie #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
temp_matrix3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_matrix3_address0),
    .ce0(temp_matrix3_ce0),
    .q0(temp_matrix3_q0)
);

matrix_mul grp_matrix_mul_fu_957(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrix_mul_fu_957_ap_start),
    .ap_done(grp_matrix_mul_fu_957_ap_done),
    .ap_idle(grp_matrix_mul_fu_957_ap_idle),
    .ap_ready(grp_matrix_mul_fu_957_ap_ready),
    .output_r_address0(grp_matrix_mul_fu_957_output_r_address0),
    .output_r_ce0(grp_matrix_mul_fu_957_output_r_ce0),
    .output_r_we0(grp_matrix_mul_fu_957_output_r_we0),
    .output_r_d0(grp_matrix_mul_fu_957_output_r_d0),
    .output_offset(grp_matrix_mul_fu_957_output_offset),
    .state_address0(grp_matrix_mul_fu_957_state_address0),
    .state_ce0(grp_matrix_mul_fu_957_state_ce0),
    .state_q0(views_inputShare_q0),
    .state_offset(views_inputShare_offset),
    .state_offset1(grp_matrix_mul_fu_957_state_offset1),
    .matrix_offset(grp_matrix_mul_fu_957_matrix_offset)
);

matrix_mul_1 grp_matrix_mul_1_fu_978(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrix_mul_1_fu_978_ap_start),
    .ap_done(grp_matrix_mul_1_fu_978_ap_done),
    .ap_idle(grp_matrix_mul_1_fu_978_ap_idle),
    .ap_ready(grp_matrix_mul_1_fu_978_ap_ready),
    .output_r_address0(grp_matrix_mul_1_fu_978_output_r_address0),
    .output_r_ce0(grp_matrix_mul_1_fu_978_output_r_ce0),
    .output_r_we0(grp_matrix_mul_1_fu_978_output_r_we0),
    .output_r_d0(grp_matrix_mul_1_fu_978_output_r_d0),
    .output_r_q0(slab_q0),
    .state_offset(grp_matrix_mul_1_fu_978_state_offset),
    .matrix_offset(add_ln1503_reg_3238)
);

mpc_AND_2 grp_mpc_AND_2_fu_991(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mpc_AND_2_fu_991_ap_start),
    .ap_done(grp_mpc_AND_2_fu_991_ap_done),
    .ap_idle(grp_mpc_AND_2_fu_991_ap_idle),
    .ap_ready(grp_mpc_AND_2_fu_991_ap_ready),
    .in1_0_read(grp_mpc_AND_2_fu_991_in1_0_read),
    .in1_1_read(grp_mpc_AND_2_fu_991_in1_1_read),
    .in1_2_read(grp_mpc_AND_2_fu_991_in1_2_read),
    .in2_0_read(grp_mpc_AND_2_fu_991_in2_0_read),
    .in2_1_read(grp_mpc_AND_2_fu_991_in2_1_read),
    .in2_2_read(grp_mpc_AND_2_fu_991_in2_2_read),
    .out_0_read(grp_mpc_AND_2_fu_991_out_0_read),
    .out_1_read(grp_mpc_AND_2_fu_991_out_1_read),
    .out_2_read(grp_mpc_AND_2_fu_991_out_2_read),
    .rand_tape_address0(grp_mpc_AND_2_fu_991_rand_tape_address0),
    .rand_tape_ce0(grp_mpc_AND_2_fu_991_rand_tape_ce0),
    .rand_tape_q0(tapes_tape_q0),
    .rand_tape_address1(grp_mpc_AND_2_fu_991_rand_tape_address1),
    .rand_tape_ce1(grp_mpc_AND_2_fu_991_rand_tape_ce1),
    .rand_tape_q1(tapes_tape_q1),
    .rand_pos_read(grp_mpc_AND_2_fu_991_rand_pos_read),
    .views_communicatedBi_address0(grp_mpc_AND_2_fu_991_views_communicatedBi_address0),
    .views_communicatedBi_ce0(grp_mpc_AND_2_fu_991_views_communicatedBi_ce0),
    .views_communicatedBi_we0(grp_mpc_AND_2_fu_991_views_communicatedBi_we0),
    .views_communicatedBi_d0(grp_mpc_AND_2_fu_991_views_communicatedBi_d0),
    .views_communicatedBi_q0(views_communicatedBi_q0),
    .views_communicatedBits_offset(views_inputShare_offset),
    .ap_return_0(grp_mpc_AND_2_fu_991_ap_return_0),
    .ap_return_1(grp_mpc_AND_2_fu_991_ap_return_1),
    .ap_return_2(grp_mpc_AND_2_fu_991_ap_return_2),
    .ap_return_3(grp_mpc_AND_2_fu_991_ap_return_3)
);

crypto_sign_mux_4Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 20 ))
crypto_sign_mux_4Zio_U120(
    .din0(20'd735345),
    .din1(20'd735349),
    .din2(20'd735353),
    .din3(20'd735353),
    .din4(i_0_i_reg_393),
    .dout(mem_index_phi_fu_1192_p6)
);

crypto_sign_mux_3VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_3VhK_U121(
    .din0(a_0_1_i_reg_662),
    .din1(a_1_1_i_reg_650),
    .din2(a_2_1_i_reg_638),
    .din3(j_1_i_reg_838),
    .dout(tmp_5_i_fu_1904_p5)
);

crypto_sign_mux_3VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_3VhK_U122(
    .din0(bc_0_reg_3353),
    .din1(bc_1_reg_3358),
    .din2(bc_2_reg_3363),
    .din3(j_1_i_reg_838),
    .dout(tmp_6_i_fu_1916_p5)
);

crypto_sign_mux_3VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_3VhK_U123(
    .din0(a_0_1_i_reg_662),
    .din1(a_1_1_i_reg_650),
    .din2(a_2_1_i_reg_638),
    .din3(j_1_i_reg_838),
    .dout(tmp_7_i_fu_1930_p5)
);

crypto_sign_mux_3VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_3VhK_U124(
    .din0(b_0_1_i_reg_626),
    .din1(b_1_1_i_reg_614),
    .din2(b_2_1_i_reg_602),
    .din3(j_1_i_reg_838),
    .dout(tmp_8_i_fu_1942_p5)
);

crypto_sign_mux_3VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_3VhK_U125(
    .din0(ca_0_reg_3383),
    .din1(ca_1_reg_3388),
    .din2(ca_2_reg_3393),
    .din3(j_1_i_reg_838),
    .dout(tmp_10_i_fu_1954_p5)
);

crypto_sign_mux_3VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_3VhK_U126(
    .din0(a_0_1_i_reg_662),
    .din1(a_1_1_i_reg_650),
    .din2(a_2_1_i_reg_638),
    .din3(j_1_i_reg_838),
    .dout(tmp_i_68_fu_1980_p5)
);

crypto_sign_mux_3VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_3VhK_U127(
    .din0(b_0_1_i_reg_626),
    .din1(b_1_1_i_reg_614),
    .din2(b_2_1_i_reg_602),
    .din3(j_1_i_reg_838),
    .dout(tmp_11_i_fu_1992_p5)
);

crypto_sign_mux_3VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_3VhK_U128(
    .din0(c_0_1_i_reg_590),
    .din1(c_1_1_i_reg_578),
    .din2(c_2_1_i_reg_566),
    .din3(j_1_i_reg_838),
    .dout(tmp_12_i_fu_2004_p5)
);

crypto_sign_mux_3VhK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_3VhK_U129(
    .din0(ab_0_reg_3323),
    .din1(ab_1_reg_3328),
    .din2(ab_2_reg_3333),
    .din3(j_1_i_reg_838),
    .dout(tmp_13_i_fu_2016_p5)
);

crypto_sign_mux_4Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 20 ))
crypto_sign_mux_4Zio_U130(
    .din0(20'd735357),
    .din1(20'd735361),
    .din2(20'd735365),
    .din3(20'd735365),
    .din4(j_1_i_reg_838),
    .dout(mem_index_phi1_fu_2306_p6)
);

crypto_sign_mux_4Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 20 ))
crypto_sign_mux_4Zio_U131(
    .din0(20'd735357),
    .din1(20'd735361),
    .din2(20'd735365),
    .din3(20'd735365),
    .din4(j_1_i_reg_838),
    .dout(mem_index_phi2_fu_2572_p6)
);

crypto_sign_mux_4Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 20 ),
    .din3_WIDTH( 20 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 20 ))
crypto_sign_mux_4Zio_U132(
    .din0(20'd735345),
    .din1(20'd735349),
    .din2(20'd735353),
    .din3(20'd735353),
    .din4(i_0_i11_reg_875),
    .dout(mem_index_phi3_fu_2918_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrix_mul_1_fu_978_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | ((1'b1 == ap_CS_fsm_state20) & (icmp_ln1398_fu_1282_p2 == 1'd0)))) begin
            grp_matrix_mul_1_fu_978_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_mul_1_fu_978_ap_ready == 1'b1)) begin
            grp_matrix_mul_1_fu_978_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrix_mul_fu_957_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln1494_fu_1263_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_1136_p2 == 1'd1)))) begin
            grp_matrix_mul_fu_957_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_mul_fu_957_ap_ready == 1'b1)) begin
            grp_matrix_mul_fu_957_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mpc_AND_2_fu_991_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | ((icmp_ln1400_fu_1336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)))) begin
            grp_mpc_AND_2_fu_991_ap_start_reg <= 1'b1;
        end else if ((grp_mpc_AND_2_fu_991_ap_ready == 1'b1)) begin
            grp_mpc_AND_2_fu_991_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        a_0_1_i_reg_662 <= a_0_2_i_reg_733;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        a_0_1_i_reg_662 <= a_0_030_i_reg_542;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        a_0_2_i_reg_733 <= zext_ln54_10_fu_1494_p1;
    end else if ((((j_0_i_reg_674 == 2'd1) & (1'b1 == ap_CS_fsm_state24)) | (~(j_0_i_reg_674 == 2'd1) & ~(j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        a_0_2_i_reg_733 <= a_0_1_i_reg_662;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        a_1_1_i_reg_650 <= a_1_2_i_reg_718;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        a_1_1_i_reg_650 <= a_1_031_i_reg_530;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_674 == 2'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        a_1_2_i_reg_718 <= zext_ln54_10_fu_1494_p1;
    end else if (((~(j_0_i_reg_674 == 2'd1) & ~(j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state24)) | ((j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        a_1_2_i_reg_718 <= a_1_1_i_reg_650;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        a_2_1_i_reg_638 <= a_2_2_i_reg_703;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        a_2_1_i_reg_638 <= a_2_032_i_reg_518;
    end
end

always @ (posedge ap_clk) begin
    if ((((j_0_i_reg_674 == 2'd1) & (1'b1 == ap_CS_fsm_state24)) | ((j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        a_2_2_i_reg_703 <= a_2_1_i_reg_638;
    end else if ((~(j_0_i_reg_674 == 2'd1) & ~(j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        a_2_2_i_reg_703 <= zext_ln54_10_fu_1494_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        b_0_1_i_reg_626 <= b_0_2_i_reg_778;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        b_0_1_i_reg_626 <= b_0_033_i_reg_506;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        b_0_2_i_reg_778 <= zext_ln54_11_fu_1661_p1;
    end else if ((((j_0_i_reg_674 == 2'd1) & (1'b1 == ap_CS_fsm_state26)) | (~(j_0_i_reg_674 == 2'd1) & ~(j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        b_0_2_i_reg_778 <= b_0_1_i_reg_626;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        b_1_1_i_reg_614 <= b_1_2_i_reg_763;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        b_1_1_i_reg_614 <= b_1_034_i_reg_494;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_674 == 2'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        b_1_2_i_reg_763 <= zext_ln54_11_fu_1661_p1;
    end else if (((~(j_0_i_reg_674 == 2'd1) & ~(j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state26)) | ((j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        b_1_2_i_reg_763 <= b_1_1_i_reg_614;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        b_2_1_i_reg_602 <= b_2_2_i_reg_748;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        b_2_1_i_reg_602 <= b_2_035_i_reg_482;
    end
end

always @ (posedge ap_clk) begin
    if ((((j_0_i_reg_674 == 2'd1) & (1'b1 == ap_CS_fsm_state26)) | ((j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        b_2_2_i_reg_748 <= b_2_1_i_reg_602;
    end else if ((~(j_0_i_reg_674 == 2'd1) & ~(j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        b_2_2_i_reg_748 <= zext_ln54_11_fu_1661_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1410_fu_1892_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        bitNumber_assign_2_i_reg_554 <= add_ln1398_fu_2048_p2;
    end else if (((grp_matrix_mul_fu_957_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        bitNumber_assign_2_i_reg_554 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        c_0_1_i_be_reg_823 <= zext_ln54_12_fu_1787_p1;
    end else if ((((j_0_i_reg_674 == 2'd1) & (1'b1 == ap_CS_fsm_state27)) | (~(j_0_i_reg_674 == 2'd1) & ~(j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state27)))) begin
        c_0_1_i_be_reg_823 <= c_0_1_i_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        c_0_1_i_reg_590 <= c_0_1_i_be_reg_823;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        c_0_1_i_reg_590 <= c_0_036_i_reg_470;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_674 == 2'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        c_1_1_i_be_reg_808 <= zext_ln54_12_fu_1787_p1;
    end else if (((~(j_0_i_reg_674 == 2'd1) & ~(j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state27)) | ((j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state27)))) begin
        c_1_1_i_be_reg_808 <= c_1_1_i_reg_578;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        c_1_1_i_reg_578 <= c_1_1_i_be_reg_808;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        c_1_1_i_reg_578 <= c_1_037_i_reg_458;
    end
end

always @ (posedge ap_clk) begin
    if ((((j_0_i_reg_674 == 2'd1) & (1'b1 == ap_CS_fsm_state27)) | ((j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state27)))) begin
        c_2_1_i_be_reg_793 <= c_2_1_i_reg_566;
    end else if ((~(j_0_i_reg_674 == 2'd1) & ~(j_0_i_reg_674 == 2'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        c_2_1_i_be_reg_793 <= zext_ln54_12_fu_1787_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        c_2_1_i_reg_566 <= c_2_1_i_be_reg_793;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        c_2_1_i_reg_566 <= c_2_038_i_reg_446;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_1_fu_2852_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        i_0_i11_reg_875 <= 2'd0;
    end else if (((icmp_ln108_3_fu_2932_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        i_0_i11_reg_875 <= i_9_reg_3560;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        i_0_i_i15_reg_905 <= i_10_reg_3578;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        i_0_i_i15_reg_905 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        i_0_i_i2_reg_864 <= i_8_reg_3541;
    end else if (((grp_matrix_mul_1_fu_978_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        i_0_i_i2_reg_864 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_0_i_i3_reg_423 <= i_5_reg_3125;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_0_i_i3_reg_423 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1477_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_i_i_reg_382 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_i_i_reg_382 <= i_2_reg_3087;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_2_fu_1206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_0_i_reg_393 <= i_4_reg_3105;
    end else if (((grp_matrix_mul_fu_957_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_0_i_reg_393 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1494_fu_1263_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        i_1_reg_916 <= 2'd0;
    end else if (((icmp_ln1513_fu_3018_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        i_1_reg_916 <= i_reg_3596;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        j_0_i_reg_674 <= j_7_reg_3246;
    end else if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        j_0_i_reg_674 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        j_1_i_reg_838 <= j_reg_3416;
    end else if (((1'b1 == ap_CS_fsm_state33) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1))) begin
        j_1_i_reg_838 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1477_fu_1119_p2 == 1'd0))) begin
        loop_0_reg_371 <= loop_fu_1125_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        loop_0_reg_371 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) & (icmp_ln1511_fu_2989_p2 == 1'd0))) begin
        loop_1_reg_928 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        loop_1_reg_928 <= loop_21_reg_3609;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln252_1_fu_2900_p2 == 1'd0))) begin
        if ((ap_phi_mux_i_0_i11_phi_fu_879_p4 == 2'd0)) begin
                        phi_ln109_1_reg_887[2] <= 1'b1;
            phi_ln109_1_reg_887[3] <= 1'b1;
            phi_ln109_1_reg_887[4] <= 1'b1;
        end else if ((~(ap_phi_mux_i_0_i11_phi_fu_879_p4 == 2'd0) & ~(ap_phi_mux_i_0_i11_phi_fu_879_p4 == 2'd1))) begin
                        phi_ln109_1_reg_887[2] <= 1'b1;
            phi_ln109_1_reg_887[3] <= 1'b0;
            phi_ln109_1_reg_887[4] <= 1'b0;
        end else if ((ap_phi_mux_i_0_i11_phi_fu_879_p4 == 2'd1)) begin
                        phi_ln109_1_reg_887[2] <= 1'b0;
            phi_ln109_1_reg_887[3] <= 1'b0;
            phi_ln109_1_reg_887[4] <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln252_fu_1175_p2 == 1'd0))) begin
        if ((ap_phi_mux_i_0_i_phi_fu_397_p4 == 2'd0)) begin
                        phi_ln109_reg_405[2] <= 1'b1;
            phi_ln109_reg_405[3] <= 1'b1;
            phi_ln109_reg_405[4] <= 1'b1;
        end else if ((~(ap_phi_mux_i_0_i_phi_fu_397_p4 == 2'd0) & ~(ap_phi_mux_i_0_i_phi_fu_397_p4 == 2'd1))) begin
                        phi_ln109_reg_405[2] <= 1'b1;
            phi_ln109_reg_405[3] <= 1'b0;
            phi_ln109_reg_405[4] <= 1'b0;
        end else if ((ap_phi_mux_i_0_i_phi_fu_397_p4 == 2'd1)) begin
                        phi_ln109_reg_405[2] <= 1'b0;
            phi_ln109_reg_405[3] <= 1'b0;
            phi_ln109_reg_405[4] <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) & (icmp_ln1513_fu_3018_p2 == 1'd0))) begin
        if ((i_1_reg_916 == 2'd0)) begin
                        phi_ln1514_reg_940[2] <= 1'b1;
            phi_ln1514_reg_940[3] <= 1'b1;
            phi_ln1514_reg_940[4] <= 1'b1;
        end else if ((~(i_1_reg_916 == 2'd0) & ~(i_1_reg_916 == 2'd1))) begin
                        phi_ln1514_reg_940[2] <= 1'b1;
            phi_ln1514_reg_940[3] <= 1'b0;
            phi_ln1514_reg_940[4] <= 1'b0;
        end else if ((i_1_reg_916 == 2'd1)) begin
                        phi_ln1514_reg_940[2] <= 1'b0;
            phi_ln1514_reg_940[3] <= 1'b0;
            phi_ln1514_reg_940[4] <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln1400_fu_1336_p2 == 1'd0))) begin
        if ((ap_phi_mux_j_0_i_phi_fu_678_p4 == 2'd0)) begin
                        phi_ln54_reg_686[2] <= 1'b1;
            phi_ln54_reg_686[3] <= 1'b1;
            phi_ln54_reg_686[4] <= 1'b0;
        end else if ((~(ap_phi_mux_j_0_i_phi_fu_678_p4 == 2'd0) & ~(ap_phi_mux_j_0_i_phi_fu_678_p4 == 2'd1))) begin
                        phi_ln54_reg_686[2] <= 1'b1;
            phi_ln54_reg_686[3] <= 1'b0;
            phi_ln54_reg_686[4] <= 1'b1;
        end else if ((ap_phi_mux_j_0_i_phi_fu_678_p4 == 2'd1)) begin
                        phi_ln54_reg_686[2] <= 1'b0;
            phi_ln54_reg_686[3] <= 1'b0;
            phi_ln54_reg_686[4] <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_1175_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        r_0_reg_434 <= 5'd1;
    end else if (((icmp_ln252_1_fu_2900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        r_0_reg_434 <= r_fu_2912_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1410_fu_1892_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        tapes_pos_0_fu_174 <= reg_1092;
    end else if (((icmp_ln252_fu_1175_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        tapes_pos_0_fu_174 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1410_fu_1892_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        a_0_030_i_reg_542 <= a_0_1_i_reg_662;
        a_1_031_i_reg_530 <= a_1_1_i_reg_650;
        a_2_032_i_reg_518 <= a_2_1_i_reg_638;
        b_0_033_i_reg_506 <= b_0_1_i_reg_626;
        b_1_034_i_reg_494 <= b_1_1_i_reg_614;
        b_2_035_i_reg_482 <= b_2_1_i_reg_602;
        c_0_036_i_reg_470 <= c_0_1_i_reg_590;
        c_1_037_i_reg_458 <= c_1_1_i_reg_578;
        c_2_038_i_reg_446 <= c_2_1_i_reg_566;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        a_0_reg_3276 <= a_0_fu_1490_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1))) begin
        ab_0_1_fu_178 <= grp_mpc_AND_2_fu_991_ap_return_1;
        ab_0_reg_3323 <= grp_mpc_AND_2_fu_991_ap_return_1;
        ab_1_1_fu_182 <= grp_mpc_AND_2_fu_991_ap_return_2;
        ab_1_reg_3328 <= grp_mpc_AND_2_fu_991_ap_return_2;
        ab_2_1_fu_186 <= grp_mpc_AND_2_fu_991_ap_return_3;
        ab_2_reg_3333 <= grp_mpc_AND_2_fu_991_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        add_ln1401_reg_3207 <= add_ln1401_fu_1288_p2;
        add_ln1402_reg_3212 <= add_ln1402_fu_1294_p2;
        zext_ln54_5_reg_3224[2 : 0] <= zext_ln54_5_fu_1316_p1[2 : 0];
        zext_ln54_6_reg_3231[2 : 0] <= zext_ln54_6_fu_1326_p1[2 : 0];
        zext_ln54_reg_3217[2 : 0] <= zext_ln54_fu_1306_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln1398_fu_1282_p2 == 1'd0))) begin
        add_ln1503_reg_3238[13 : 9] <= add_ln1503_fu_1330_p2[13 : 9];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_matrix_mul_1_fu_978_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        add_ln1507_reg_3533[6 : 2] <= add_ln1507_fu_2846_p2[6 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        b_0_reg_3299 <= b_0_fu_1657_p1;
        slab_load_9_reg_3293 <= slab_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1))) begin
        bc_0_1_fu_190 <= grp_mpc_AND_2_fu_991_ap_return_1;
        bc_0_reg_3353 <= grp_mpc_AND_2_fu_991_ap_return_1;
        bc_1_1_fu_194 <= grp_mpc_AND_2_fu_991_ap_return_2;
        bc_1_reg_3358 <= grp_mpc_AND_2_fu_991_ap_return_2;
        bc_2_1_fu_198 <= grp_mpc_AND_2_fu_991_ap_return_3;
        bc_2_reg_3363 <= grp_mpc_AND_2_fu_991_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        c_0_reg_3311 <= c_0_fu_1783_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1))) begin
        ca_0_1_fu_202 <= grp_mpc_AND_2_fu_991_ap_return_1;
        ca_0_reg_3383 <= grp_mpc_AND_2_fu_991_ap_return_1;
        ca_1_1_fu_206 <= grp_mpc_AND_2_fu_991_ap_return_2;
        ca_1_reg_3388 <= grp_mpc_AND_2_fu_991_ap_return_2;
        ca_2_1_fu_210 <= grp_mpc_AND_2_fu_991_ap_return_3;
        ca_2_reg_3393 <= grp_mpc_AND_2_fu_991_ap_return_3;
        xor_ln66_1_reg_3403 <= xor_ln66_1_fu_1860_p2;
        xor_ln66_2_reg_3408 <= xor_ln66_2_fu_1871_p2;
        xor_ln66_reg_3398 <= xor_ln66_fu_1849_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        cast_offset1_reg_3470[4 : 3] <= cast_offset1_fu_2063_p3[4 : 3];
        or_ln66_3_reg_3476[4 : 3] <= or_ln66_3_fu_2071_p2[4 : 3];
        or_ln66_reg_3482 <= or_ln66_fu_2184_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        cast_offset2_reg_3493[4 : 3] <= cast_offset2_fu_2335_p3[4 : 3];
        or_ln66_1_reg_3505 <= or_ln66_1_fu_2451_p2;
        or_ln66_4_reg_3499[4 : 3] <= or_ln66_4_fu_2343_p2[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        cast_offset3_reg_3516[4 : 3] <= cast_offset3_fu_2601_p3[4 : 3];
        or_ln66_2_reg_3528 <= or_ln66_2_fu_2717_p2;
        or_ln66_5_reg_3522[4 : 3] <= or_ln66_5_fu_2609_p2[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_10_reg_3578 <= i_10_fu_2938_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_2_reg_3087 <= i_2_fu_1142_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_4_reg_3105 <= i_4_fu_1181_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_5_reg_3125 <= i_5_fu_1212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        i_8_reg_3541 <= i_8_fu_2858_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        i_9_reg_3560 <= i_9_fu_2906_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        i_reg_3596 <= i_fu_2995_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j_7_reg_3246 <= j_7_fu_1342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        j_reg_3416 <= j_fu_1898_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        loop_21_reg_3609 <= loop_21_fu_3024_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        mem_index_phi3_reg_3570 <= mem_index_phi3_fu_2918_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mem_index_phi_reg_3117 <= mem_index_phi_fu_1192_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state33) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state31) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state29) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1)))) begin
        reg_1092 <= grp_mpc_AND_2_fu_991_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln1410_fu_1892_p2 == 1'd0))) begin
        shl_ln66_4_reg_3449 <= shl_ln66_4_fu_1975_p2;
        shl_ln66_5_reg_3460 <= shl_ln66_5_fu_2043_p2;
        slab_addr_7_reg_3437 <= zext_ln66_fu_1925_p1;
        tmp_21_reg_3431 <= {{add_ln1401_reg_3207[4:3]}};
        tmp_24_reg_3443 <= {{add_ln1402_reg_3212[4:3]}};
        tmp_27_reg_3454 <= {{bitNumber_assign_2_i_reg_554[4:3]}};
        tmp_5_i_reg_3421 <= tmp_5_i_fu_1904_p5;
        tmp_6_i_reg_3426 <= tmp_6_i_fu_1916_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln1494_fu_1263_p2 == 1'd0))) begin
        shl_ln_reg_3198[13 : 9] <= shl_ln_fu_1269_p3[13 : 9];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (icmp_ln108_3_fu_2932_p2 == 1'd0))) begin
        slab_addr_11_reg_3583[4 : 0] <= zext_ln109_10_fu_2960_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_1136_p2 == 1'd0))) begin
        slab_addr_1_reg_3092[3 : 0] <= zext_ln109_1_fu_1163_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln108_2_fu_1206_p2 == 1'd0))) begin
        slab_addr_2_reg_3130[4 : 0] <= zext_ln109_5_fu_1234_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (icmp_ln108_1_fu_2852_p2 == 1'd0))) begin
        slab_addr_4_reg_3546[3 : 0] <= zext_ln109_8_fu_2878_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        slab_addr_8_reg_3487 <= zext_ln66_12_fu_2330_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        slab_addr_9_reg_3510 <= zext_ln66_24_fu_2596_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sub_ln1514_reg_3071 <= sub_ln1514_fu_1113_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) & (icmp_ln1511_fu_2989_p2 == 1'd0))) begin
        tmp_38_cast_reg_3601[12 : 2] <= tmp_38_cast_fu_3010_p3[12 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) & (icmp_ln1513_fu_3018_p2 == 1'd0))) begin
        views_outputShare_ad_reg_3614 <= zext_ln1514_4_fu_3039_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln1511_fu_2989_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln1410_fu_1892_p2 == 1'd0))) begin
        if ((ap_phi_mux_j_1_i_phi_fu_842_p4 == 2'd0)) begin
            ap_phi_mux_phi_ln66_phi_fu_853_p6 = 7'd12;
        end else if ((~(ap_phi_mux_j_1_i_phi_fu_842_p4 == 2'd0) & ~(ap_phi_mux_j_1_i_phi_fu_842_p4 == 2'd1))) begin
            ap_phi_mux_phi_ln66_phi_fu_853_p6 = 7'd20;
        end else if ((ap_phi_mux_j_1_i_phi_fu_842_p4 == 2'd1)) begin
            ap_phi_mux_phi_ln66_phi_fu_853_p6 = 7'd16;
        end else begin
            ap_phi_mux_phi_ln66_phi_fu_853_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_phi_ln66_phi_fu_853_p6 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1511_fu_2989_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1080_p0 = cast_offset1_reg_3470;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_1080_p0 = cast_offset1_fu_2063_p3;
    end else begin
        grp_fu_1080_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1080_p1 = or_ln66_3_reg_3476;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_1080_p1 = or_ln66_3_fu_2071_p2;
    end else begin
        grp_fu_1080_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_1084_p0 = cast_offset2_reg_3493;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1084_p0 = cast_offset2_fu_2335_p3;
    end else begin
        grp_fu_1084_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_1084_p1 = or_ln66_4_reg_3499;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1084_p1 = or_ln66_4_fu_2343_p2;
    end else begin
        grp_fu_1084_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1088_p0 = cast_offset3_reg_3516;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_1088_p0 = cast_offset3_fu_2601_p3;
    end else begin
        grp_fu_1088_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1088_p1 = or_ln66_5_reg_3522;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_1088_p1 = or_ln66_5_fu_2609_p2;
    end else begin
        grp_fu_1088_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_matrix_mul_1_fu_978_state_offset = 6'd20;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_matrix_mul_1_fu_978_state_offset = 6'd16;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_matrix_mul_1_fu_978_state_offset = 6'd12;
    end else begin
        grp_matrix_mul_1_fu_978_state_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_matrix_mul_fu_957_matrix_offset = shl_ln_reg_3198;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_matrix_mul_fu_957_matrix_offset = 14'd0;
    end else begin
        grp_matrix_mul_fu_957_matrix_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_matrix_mul_fu_957_output_offset = 5'd8;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_matrix_mul_fu_957_output_offset = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_matrix_mul_fu_957_output_offset = 5'd0;
    end else begin
        grp_matrix_mul_fu_957_output_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_matrix_mul_fu_957_state_offset1 = 4'd2;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_matrix_mul_fu_957_state_offset1 = 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_matrix_mul_fu_957_state_offset1 = 4'd0;
    end else begin
        grp_matrix_mul_fu_957_state_offset1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_mpc_AND_2_fu_991_in1_0_read = c_0_1_i_reg_590;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_mpc_AND_2_fu_991_in1_0_read = b_0_1_i_reg_626;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_in1_0_read = a_0_1_i_reg_662;
    end else begin
        grp_mpc_AND_2_fu_991_in1_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_mpc_AND_2_fu_991_in1_1_read = c_1_1_i_reg_578;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_mpc_AND_2_fu_991_in1_1_read = b_1_1_i_reg_614;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_in1_1_read = a_1_1_i_reg_650;
    end else begin
        grp_mpc_AND_2_fu_991_in1_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_mpc_AND_2_fu_991_in1_2_read = c_2_1_i_reg_566;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_mpc_AND_2_fu_991_in1_2_read = b_2_1_i_reg_602;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_in1_2_read = a_2_1_i_reg_638;
    end else begin
        grp_mpc_AND_2_fu_991_in1_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_mpc_AND_2_fu_991_in2_0_read = a_0_1_i_reg_662;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_mpc_AND_2_fu_991_in2_0_read = c_0_1_i_reg_590;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_in2_0_read = b_0_1_i_reg_626;
    end else begin
        grp_mpc_AND_2_fu_991_in2_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_mpc_AND_2_fu_991_in2_1_read = a_1_1_i_reg_650;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_mpc_AND_2_fu_991_in2_1_read = c_1_1_i_reg_578;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_in2_1_read = b_1_1_i_reg_614;
    end else begin
        grp_mpc_AND_2_fu_991_in2_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_mpc_AND_2_fu_991_in2_2_read = a_2_1_i_reg_638;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_mpc_AND_2_fu_991_in2_2_read = c_2_1_i_reg_566;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_in2_2_read = b_2_1_i_reg_602;
    end else begin
        grp_mpc_AND_2_fu_991_in2_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_mpc_AND_2_fu_991_out_0_read = ca_0_1_fu_202;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_mpc_AND_2_fu_991_out_0_read = bc_0_1_fu_190;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_out_0_read = ab_0_1_fu_178;
    end else begin
        grp_mpc_AND_2_fu_991_out_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_mpc_AND_2_fu_991_out_1_read = ca_1_1_fu_206;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_mpc_AND_2_fu_991_out_1_read = bc_1_1_fu_194;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_out_1_read = ab_1_1_fu_182;
    end else begin
        grp_mpc_AND_2_fu_991_out_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_mpc_AND_2_fu_991_out_2_read = ca_2_1_fu_210;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_mpc_AND_2_fu_991_out_2_read = bc_2_1_fu_198;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_out_2_read = ab_2_1_fu_186;
    end else begin
        grp_mpc_AND_2_fu_991_out_2_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_mpc_AND_2_fu_991_rand_pos_read = reg_1092;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_mpc_AND_2_fu_991_rand_pos_read = tapes_pos_0_fu_174;
    end else begin
        grp_mpc_AND_2_fu_991_rand_pos_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        plaintext_ce0 = 1'b1;
    end else begin
        plaintext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        slab_address0 = slab_addr_11_reg_3583;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        slab_address0 = zext_ln109_10_fu_2960_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        slab_address0 = zext_ln109_8_fu_2878_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        slab_address0 = zext_ln66_24_fu_2596_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        slab_address0 = zext_ln66_12_fu_2330_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        slab_address0 = zext_ln66_fu_1925_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        slab_address0 = zext_ln109_5_fu_1234_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        slab_address0 = slab_addr_1_reg_3092;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_1136_p2 == 1'd0))) begin
        slab_address0 = zext_ln109_1_fu_1163_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        slab_address0 = zext_ln1478_fu_1131_p1;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state47))) begin
        slab_address0 = grp_matrix_mul_1_fu_978_output_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        slab_address0 = grp_matrix_mul_fu_957_output_r_address0;
    end else begin
        slab_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        slab_address1 = zext_ln1514_6_fu_3060_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        slab_address1 = zext_ln109_12_fu_2984_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        slab_address1 = slab_addr_4_reg_3546;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        slab_address1 = slab_addr_9_reg_3510;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        slab_address1 = slab_addr_8_reg_3487;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        slab_address1 = slab_addr_7_reg_3437;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        slab_address1 = zext_ln54_15_fu_1531_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        slab_address1 = zext_ln54_7_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        slab_address1 = slab_addr_2_reg_3130;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        slab_address1 = zext_ln109_7_fu_1258_p1;
    end else begin
        slab_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_1136_p2 == 1'd0)))) begin
        slab_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state47))) begin
        slab_ce0 = grp_matrix_mul_1_fu_978_output_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        slab_ce0 = grp_matrix_mul_fu_957_output_r_ce0;
    end else begin
        slab_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state39))) begin
        slab_ce1 = 1'b1;
    end else begin
        slab_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        slab_d0 = grp_fu_1028_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        slab_d0 = xor_ln109_fu_1168_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        slab_d0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state47))) begin
        slab_d0 = grp_matrix_mul_1_fu_978_output_r_d0;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        slab_d0 = grp_matrix_mul_fu_957_output_r_d0;
    end else begin
        slab_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        slab_d1 = xor_ln109_1_fu_2893_p2;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        slab_d1 = and_ln66_11_fu_2821_p2;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        slab_d1 = and_ln66_8_fu_2555_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        slab_d1 = and_ln66_5_fu_2289_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        slab_d1 = grp_fu_1028_p2;
    end else begin
        slab_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln1477_fu_1119_p2 == 1'd0)))) begin
        slab_we0 = 4'd15;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state47))) begin
        slab_we0 = grp_matrix_mul_1_fu_978_output_r_we0;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        slab_we0 = grp_matrix_mul_fu_957_output_r_we0;
    end else begin
        slab_we0 = 4'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        slab_we1 = shl_ln66_14_fu_2831_p2;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        slab_we1 = shl_ln66_11_fu_2565_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        slab_we1 = shl_ln66_8_fu_2299_p2;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13))) begin
        slab_we1 = 4'd15;
    end else begin
        slab_we1 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29))) begin
        tapes_tape_ce0 = grp_mpc_AND_2_fu_991_rand_tape_ce0;
    end else begin
        tapes_tape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29))) begin
        tapes_tape_ce1 = grp_mpc_AND_2_fu_991_rand_tape_ce1;
    end else begin
        tapes_tape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        temp_matrix3_ce0 = 1'b1;
    end else begin
        temp_matrix3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29))) begin
        views_communicatedBi_ce0 = grp_mpc_AND_2_fu_991_views_communicatedBi_ce0;
    end else begin
        views_communicatedBi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29))) begin
        views_communicatedBi_we0 = grp_mpc_AND_2_fu_991_views_communicatedBi_we0;
    end else begin
        views_communicatedBi_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        views_inputShare_ce0 = grp_matrix_mul_fu_957_state_ce0;
    end else begin
        views_inputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        views_outputShare_ce0 = 1'b1;
    end else begin
        views_outputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        views_outputShare_we0 = 1'b1;
    end else begin
        views_outputShare_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1477_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_1136_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_matrix_mul_fu_957_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_matrix_mul_fu_957_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_matrix_mul_fu_957_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln252_fu_1175_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln108_2_fu_1206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln1494_fu_1263_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((grp_matrix_mul_fu_957_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_matrix_mul_fu_957_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_matrix_mul_fu_957_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln1398_fu_1282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln1400_fu_1336_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (grp_mpc_AND_2_fu_991_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln1410_fu_1892_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state43 : begin
            if (((grp_matrix_mul_1_fu_978_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((grp_matrix_mul_1_fu_978_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((grp_matrix_mul_1_fu_978_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((icmp_ln108_1_fu_2852_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln252_1_fu_2900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((icmp_ln108_3_fu_2932_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln1511_fu_2989_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((icmp_ln1513_fu_3018_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_fu_1490_p1 = lshr_ln54_fu_1485_p2[0:0];

assign add_ln109_1_fu_1222_p2 = (phi_ln109_reg_405 + zext_ln109_2_fu_1218_p1);

assign add_ln109_2_fu_1228_p2 = (5'd15 + add_ln109_1_fu_1222_p2);

assign add_ln109_3_fu_1246_p2 = (trunc_ln109_fu_1243_p1 + zext_ln109_6_fu_1239_p1);

assign add_ln109_4_fu_1252_p2 = ($signed(4'd15) + $signed(add_ln109_3_fu_1246_p2));

assign add_ln109_5_fu_2948_p2 = (phi_ln109_1_reg_887 + zext_ln109_9_fu_2944_p1);

assign add_ln109_6_fu_2954_p2 = (5'd15 + add_ln109_5_fu_2948_p2);

assign add_ln109_7_fu_2972_p2 = (trunc_ln109_1_fu_2969_p1 + zext_ln109_11_fu_2965_p1);

assign add_ln109_8_fu_2978_p2 = ($signed(4'd15) + $signed(add_ln109_7_fu_2972_p2));

assign add_ln109_fu_2883_p2 = (zext_ln109_3_fu_2864_p1 + add_ln1507_reg_3533);

assign add_ln1398_fu_2048_p2 = (bitNumber_assign_2_i_reg_554 + 5'd3);

assign add_ln1401_fu_1288_p2 = (bitNumber_assign_2_i_reg_554 + 5'd2);

assign add_ln1402_fu_1294_p2 = (bitNumber_assign_2_i_reg_554 + 5'd1);

assign add_ln1503_fu_1330_p2 = ($signed(shl_ln_reg_3198) + $signed(14'd15872));

assign add_ln1507_fu_2846_p2 = ($signed(shl_ln1_fu_2838_p3) + $signed(7'd124));

assign add_ln1514_1_fu_3034_p2 = (tmp_38_cast_reg_3601 + zext_ln1514_3_fu_3030_p1);

assign add_ln1514_2_fu_3048_p2 = (zext_ln1514_5_fu_3044_p1 + phi_ln1514_reg_940);

assign add_ln1514_3_fu_3054_p2 = (add_ln1514_2_fu_3048_p2 + 5'd15);

assign add_ln1514_fu_3005_p2 = (zext_ln1514_2_fu_3001_p1 + sub_ln1514_reg_3071);

assign add_ln66_1_fu_2590_p2 = (7'd15 + trunc_ln66_3_fu_2586_p1);

assign add_ln66_fu_2324_p2 = (7'd15 + trunc_ln66_1_fu_2320_p1);

assign and_ln54_1_fu_1642_p2 = (lshr_ln54_8_fu_1636_p2 & lshr_ln54_7_fu_1630_p2);

assign and_ln54_2_fu_1768_p2 = (lshr_ln54_9_fu_1756_p2 & lshr_ln54_10_fu_1762_p2);

assign and_ln54_fu_1475_p2 = (lshr_ln54_6_fu_1469_p2 & lshr_ln54_5_fu_1463_p2);

assign and_ln66_10_fu_2815_p2 = (shl_ln66_13_fu_2803_p2 & lshr_ln66_8_fu_2809_p2);

assign and_ln66_11_fu_2821_p2 = (select_ln66_20_fu_2795_p3 & and_ln66_10_fu_2815_p2);

assign and_ln66_1_fu_2446_p2 = (xor_ln66_1_reg_3403 & trunc_ln66_2_fu_2442_p1);

assign and_ln66_2_fu_2712_p2 = (xor_ln66_2_reg_3408 & trunc_ln66_4_fu_2708_p1);

assign and_ln66_3_fu_2164_p2 = (lshr_ln66_fu_2152_p2 & lshr_ln66_1_fu_2158_p2);

assign and_ln66_4_fu_2283_p2 = (shl_ln66_7_fu_2271_p2 & lshr_ln66_2_fu_2277_p2);

assign and_ln66_5_fu_2289_p2 = (select_ln66_6_fu_2263_p3 & and_ln66_4_fu_2283_p2);

assign and_ln66_6_fu_2436_p2 = (lshr_ln66_4_fu_2430_p2 & lshr_ln66_3_fu_2424_p2);

assign and_ln66_7_fu_2549_p2 = (shl_ln66_10_fu_2537_p2 & lshr_ln66_5_fu_2543_p2);

assign and_ln66_8_fu_2555_p2 = (select_ln66_13_fu_2529_p3 & and_ln66_7_fu_2549_p2);

assign and_ln66_9_fu_2702_p2 = (lshr_ln66_7_fu_2696_p2 & lshr_ln66_6_fu_2690_p2);

assign and_ln66_fu_2179_p2 = (xor_ln66_reg_3398 & trunc_ln66_fu_2170_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_i_0_i11_phi_fu_879_p4 = i_0_i11_reg_875;

assign ap_phi_mux_i_0_i_phi_fu_397_p4 = i_0_i_reg_393;

assign ap_phi_mux_j_0_i_phi_fu_678_p4 = j_0_i_reg_674;

assign ap_phi_mux_j_1_i_phi_fu_842_p4 = j_1_i_reg_838;

assign b_0_fu_1657_p1 = lshr_ln54_3_fu_1652_p2[0:0];

assign c_0_fu_1783_p1 = lshr_ln54_4_fu_1778_p2[0:0];

assign cast_offset1_fu_2063_p3 = {{tmp_21_reg_3431}, {3'd0}};

assign cast_offset2_fu_2335_p3 = {{tmp_24_reg_3443}, {3'd0}};

assign cast_offset3_fu_2601_p3 = {{tmp_27_reg_3454}, {3'd0}};

assign cast_offset4_fu_1536_p3 = {{grp_fu_1045_p4}, {3'd0}};

assign cast_offset5_fu_1664_p3 = {{grp_fu_1054_p4}, {3'd0}};

assign cast_offset_fu_1369_p3 = {{grp_fu_1036_p4}, {3'd0}};

assign grp_fu_1028_p2 = (slab_q1 ^ slab_q0);

assign grp_fu_1036_p4 = {{add_ln1401_reg_3207[4:3]}};

assign grp_fu_1045_p4 = {{add_ln1402_reg_3212[4:3]}};

assign grp_fu_1054_p4 = {{bitNumber_assign_2_i_reg_554[4:3]}};

assign grp_fu_1080_p2 = ((grp_fu_1080_p0 > grp_fu_1080_p1) ? 1'b1 : 1'b0);

assign grp_fu_1084_p2 = ((grp_fu_1084_p0 > grp_fu_1084_p1) ? 1'b1 : 1'b0);

assign grp_fu_1088_p2 = ((grp_fu_1088_p0 > grp_fu_1088_p1) ? 1'b1 : 1'b0);

assign grp_matrix_mul_1_fu_978_ap_start = grp_matrix_mul_1_fu_978_ap_start_reg;

assign grp_matrix_mul_fu_957_ap_start = grp_matrix_mul_fu_957_ap_start_reg;

assign grp_mpc_AND_2_fu_991_ap_start = grp_mpc_AND_2_fu_991_ap_start_reg;

assign i_10_fu_2938_p2 = (i_0_i_i15_reg_905 + 3'd1);

assign i_2_fu_1142_p2 = (i_0_i_i_reg_382 + 3'd1);

assign i_4_fu_1181_p2 = (i_0_i_reg_393 + 2'd1);

assign i_5_fu_1212_p2 = (i_0_i_i3_reg_423 + 3'd1);

assign i_8_fu_2858_p2 = (i_0_i_i2_reg_864 + 3'd1);

assign i_9_fu_2906_p2 = (i_0_i11_reg_875 + 2'd1);

assign i_fu_2995_p2 = (i_1_reg_916 + 2'd1);

assign icmp_ln108_1_fu_2852_p2 = ((i_0_i_i2_reg_864 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_2_fu_1206_p2 = ((i_0_i_i3_reg_423 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_3_fu_2932_p2 = ((i_0_i_i15_reg_905 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_1136_p2 = ((i_0_i_i_reg_382 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln1398_fu_1282_p2 = ((bitNumber_assign_2_i_reg_554 < 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln1400_fu_1336_p2 = ((j_0_i_reg_674 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1402_1_fu_1503_p2 = ((j_0_i_reg_674 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln1402_fu_1497_p2 = ((j_0_i_reg_674 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln1410_fu_1892_p2 = ((j_1_i_reg_838 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1477_fu_1119_p2 = ((loop_0_reg_371 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_1263_p2 = ((r_0_reg_434 == 5'd21) ? 1'b1 : 1'b0);

assign icmp_ln1511_fu_2989_p2 = ((i_1_reg_916 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1513_fu_3018_p2 = ((loop_1_reg_928 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln252_1_fu_2900_p2 = ((i_0_i11_reg_875 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_1175_p2 = ((i_0_i_reg_393 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln54_1_fu_1550_p2 = ((cast_offset4_fu_1536_p3 > or_ln54_1_fu_1544_p2) ? 1'b1 : 1'b0);

assign icmp_ln54_2_fu_1678_p2 = ((cast_offset5_fu_1664_p3 > or_ln54_2_fu_1672_p2) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_1383_p2 = ((cast_offset_fu_1369_p3 > or_ln54_fu_1377_p2) ? 1'b1 : 1'b0);

assign j_7_fu_1342_p2 = (j_0_i_reg_674 + 2'd1);

assign j_fu_1898_p2 = (j_1_i_reg_838 + 2'd1);

assign loop_21_fu_3024_p2 = (loop_1_reg_928 + 3'd1);

assign loop_fu_1125_p2 = (loop_0_reg_371 + 5'd1);

assign lshr_ln54_10_fu_1762_p2 = 32'd4294967295 >> zext_ln54_23_fu_1752_p1;

assign lshr_ln54_3_fu_1652_p2 = trunc_ln54_2_fu_1648_p1 >> zext_ln54_5_reg_3224;

assign lshr_ln54_4_fu_1778_p2 = trunc_ln54_4_fu_1774_p1 >> zext_ln54_6_reg_3231;

assign lshr_ln54_5_fu_1463_p2 = select_ln54_1_fu_1433_p3 >> zext_ln54_13_fu_1455_p1;

assign lshr_ln54_6_fu_1469_p2 = 32'd4294967295 >> zext_ln54_14_fu_1459_p1;

assign lshr_ln54_7_fu_1630_p2 = select_ln54_6_fu_1600_p3 >> zext_ln54_18_fu_1622_p1;

assign lshr_ln54_8_fu_1636_p2 = 32'd4294967295 >> zext_ln54_19_fu_1626_p1;

assign lshr_ln54_9_fu_1756_p2 = select_ln54_9_fu_1727_p3 >> zext_ln54_22_fu_1748_p1;

assign lshr_ln54_fu_1485_p2 = trunc_ln54_fu_1481_p1 >> zext_ln54_reg_3217;

assign lshr_ln66_1_fu_2158_p2 = 32'd4294967295 >> zext_ln66_4_fu_2148_p1;

assign lshr_ln66_2_fu_2277_p2 = 32'd4294967295 >> zext_ln66_10_fu_2243_p1;

assign lshr_ln66_3_fu_2424_p2 = select_ln66_8_fu_2394_p3 >> zext_ln66_15_fu_2416_p1;

assign lshr_ln66_4_fu_2430_p2 = 32'd4294967295 >> zext_ln66_16_fu_2420_p1;

assign lshr_ln66_5_fu_2543_p2 = 32'd4294967295 >> zext_ln66_22_fu_2509_p1;

assign lshr_ln66_6_fu_2690_p2 = select_ln66_15_fu_2660_p3 >> zext_ln66_27_fu_2682_p1;

assign lshr_ln66_7_fu_2696_p2 = 32'd4294967295 >> zext_ln66_28_fu_2686_p1;

assign lshr_ln66_8_fu_2809_p2 = 32'd4294967295 >> zext_ln66_34_fu_2775_p1;

assign lshr_ln66_fu_2152_p2 = select_ln66_1_fu_2122_p3 >> zext_ln66_3_fu_2144_p1;

assign or_ln1402_fu_1509_p2 = (icmp_ln1402_fu_1497_p2 | icmp_ln1402_1_fu_1503_p2);

assign or_ln54_1_fu_1544_p2 = (cast_offset4_fu_1536_p3 | 5'd7);

assign or_ln54_2_fu_1672_p2 = (cast_offset5_fu_1664_p3 | 5'd7);

assign or_ln54_fu_1377_p2 = (cast_offset_fu_1369_p3 | 5'd7);

assign or_ln66_1_fu_2451_p2 = (shl_ln66_4_reg_3449 | and_ln66_1_fu_2446_p2);

assign or_ln66_2_fu_2717_p2 = (shl_ln66_5_reg_3460 | and_ln66_2_fu_2712_p2);

assign or_ln66_3_fu_2071_p2 = (cast_offset1_fu_2063_p3 | 5'd7);

assign or_ln66_4_fu_2343_p2 = (cast_offset2_fu_2335_p3 | 5'd7);

assign or_ln66_5_fu_2609_p2 = (cast_offset3_fu_2601_p3 | 5'd7);

assign or_ln66_fu_2184_p2 = (shl_ln66_3_fu_2174_p2 | and_ln66_fu_2179_p2);

assign plaintext_address0 = zext_ln109_fu_1148_p1;

assign r_fu_2912_p2 = (r_0_reg_434 + 5'd1);

assign select_ln54_10_fu_1734_p3 = ((icmp_ln54_2_fu_1678_p2[0:0] === 1'b1) ? xor_ln54_5_fu_1707_p2 : zext_ln54_20_fu_1684_p1);

assign select_ln54_1_fu_1433_p3 = ((icmp_ln54_fu_1383_p2[0:0] === 1'b1) ? tmp_20_fu_1397_p4 : slab_q1);

assign select_ln54_2_fu_1441_p3 = ((icmp_ln54_fu_1383_p2[0:0] === 1'b1) ? xor_ln54_3_fu_1413_p2 : zext_ln54_8_fu_1389_p1);

assign select_ln54_3_fu_1515_p3 = ((icmp_ln1402_1_fu_1503_p2[0:0] === 1'b1) ? 7'd16 : 7'd12);

assign select_ln54_4_fu_1523_p3 = ((or_ln1402_fu_1509_p2[0:0] === 1'b1) ? select_ln54_3_fu_1515_p3 : 7'd20);

assign select_ln54_5_fu_1592_p3 = ((icmp_ln54_1_fu_1550_p2[0:0] === 1'b1) ? sub_ln54_5_fu_1574_p2 : sub_ln54_6_fu_1586_p2);

assign select_ln54_6_fu_1600_p3 = ((icmp_ln54_1_fu_1550_p2[0:0] === 1'b1) ? tmp_31_fu_1564_p4 : slab_q1);

assign select_ln54_7_fu_1608_p3 = ((icmp_ln54_1_fu_1550_p2[0:0] === 1'b1) ? xor_ln54_4_fu_1580_p2 : zext_ln54_16_fu_1556_p1);

assign select_ln54_8_fu_1719_p3 = ((icmp_ln54_2_fu_1678_p2[0:0] === 1'b1) ? sub_ln54_8_fu_1701_p2 : sub_ln54_9_fu_1713_p2);

assign select_ln54_9_fu_1727_p3 = ((icmp_ln54_2_fu_1678_p2[0:0] === 1'b1) ? tmp_33_fu_1692_p4 : slab_load_9_reg_3293);

assign select_ln54_fu_1425_p3 = ((icmp_ln54_fu_1383_p2[0:0] === 1'b1) ? sub_ln54_2_fu_1407_p2 : sub_ln54_3_fu_1419_p2);

assign select_ln66_10_fu_2471_p3 = ((grp_fu_1084_p2[0:0] === 1'b1) ? zext_ln66_17_fu_2456_p1 : zext_ln66_18_fu_2459_p1);

assign select_ln66_11_fu_2479_p3 = ((grp_fu_1084_p2[0:0] === 1'b1) ? zext_ln66_18_fu_2459_p1 : zext_ln66_17_fu_2456_p1);

assign select_ln66_12_fu_2487_p3 = ((grp_fu_1084_p2[0:0] === 1'b1) ? xor_ln66_7_fu_2465_p2 : zext_ln66_17_fu_2456_p1);

assign select_ln66_13_fu_2529_p3 = ((grp_fu_1084_p2[0:0] === 1'b1) ? tmp_26_fu_2519_p4 : shl_ln66_9_fu_2513_p2);

assign select_ln66_14_fu_2652_p3 = ((grp_fu_1088_p2[0:0] === 1'b1) ? sub_ln66_6_fu_2634_p2 : sub_ln66_7_fu_2646_p2);

assign select_ln66_15_fu_2660_p3 = ((grp_fu_1088_p2[0:0] === 1'b1) ? tmp_28_fu_2624_p4 : slab_q0);

assign select_ln66_16_fu_2668_p3 = ((grp_fu_1088_p2[0:0] === 1'b1) ? xor_ln66_9_fu_2640_p2 : zext_ln66_25_fu_2616_p1);

assign select_ln66_17_fu_2737_p3 = ((grp_fu_1088_p2[0:0] === 1'b1) ? zext_ln66_29_fu_2722_p1 : zext_ln66_30_fu_2725_p1);

assign select_ln66_18_fu_2745_p3 = ((grp_fu_1088_p2[0:0] === 1'b1) ? zext_ln66_30_fu_2725_p1 : zext_ln66_29_fu_2722_p1);

assign select_ln66_19_fu_2753_p3 = ((grp_fu_1088_p2[0:0] === 1'b1) ? xor_ln66_10_fu_2731_p2 : zext_ln66_29_fu_2722_p1);

assign select_ln66_1_fu_2122_p3 = ((grp_fu_1080_p2[0:0] === 1'b1) ? tmp_22_fu_2086_p4 : slab_q0);

assign select_ln66_20_fu_2795_p3 = ((grp_fu_1088_p2[0:0] === 1'b1) ? tmp_29_fu_2785_p4 : shl_ln66_12_fu_2779_p2);

assign select_ln66_2_fu_2130_p3 = ((grp_fu_1080_p2[0:0] === 1'b1) ? xor_ln66_3_fu_2102_p2 : zext_ln66_1_fu_2078_p1);

assign select_ln66_3_fu_2205_p3 = ((grp_fu_1080_p2[0:0] === 1'b1) ? zext_ln66_5_fu_2190_p1 : zext_ln66_6_fu_2193_p1);

assign select_ln66_4_fu_2213_p3 = ((grp_fu_1080_p2[0:0] === 1'b1) ? zext_ln66_6_fu_2193_p1 : zext_ln66_5_fu_2190_p1);

assign select_ln66_5_fu_2221_p3 = ((grp_fu_1080_p2[0:0] === 1'b1) ? xor_ln66_4_fu_2199_p2 : zext_ln66_5_fu_2190_p1);

assign select_ln66_6_fu_2263_p3 = ((grp_fu_1080_p2[0:0] === 1'b1) ? tmp_23_fu_2253_p4 : shl_ln66_6_fu_2247_p2);

assign select_ln66_7_fu_2386_p3 = ((grp_fu_1084_p2[0:0] === 1'b1) ? sub_ln66_3_fu_2368_p2 : sub_ln66_4_fu_2380_p2);

assign select_ln66_8_fu_2394_p3 = ((grp_fu_1084_p2[0:0] === 1'b1) ? tmp_25_fu_2358_p4 : slab_q0);

assign select_ln66_9_fu_2402_p3 = ((grp_fu_1084_p2[0:0] === 1'b1) ? xor_ln66_6_fu_2374_p2 : zext_ln66_13_fu_2350_p1);

assign select_ln66_fu_2114_p3 = ((grp_fu_1080_p2[0:0] === 1'b1) ? sub_ln66_fu_2096_p2 : sub_ln66_1_fu_2108_p2);

assign sext_ln109_1_fu_2874_p1 = $signed(xor_ln109_5_fu_2868_p2);

assign sext_ln109_fu_1159_p1 = $signed(xor_ln109_2_fu_1153_p2);

assign shl_ln1_fu_2838_p3 = {{r_0_reg_434}, {2'd0}};

assign shl_ln66_10_fu_2537_p2 = 32'd4294967295 << zext_ln66_21_fu_2505_p1;

assign shl_ln66_11_fu_2565_p2 = 4'd1 << zext_ln66_23_fu_2562_p1;

assign shl_ln66_12_fu_2779_p2 = zext_ln66_31_fu_2728_p1 << zext_ln66_32_fu_2767_p1;

assign shl_ln66_13_fu_2803_p2 = 32'd4294967295 << zext_ln66_33_fu_2771_p1;

assign shl_ln66_14_fu_2831_p2 = 4'd1 << zext_ln66_35_fu_2828_p1;

assign shl_ln66_1_fu_1855_p2 = 8'd1 << zext_ln54_5_reg_3224;

assign shl_ln66_2_fu_1866_p2 = 8'd1 << zext_ln54_6_reg_3231;

assign shl_ln66_3_fu_2174_p2 = xor_ln1411_fu_2059_p2 << zext_ln54_reg_3217;

assign shl_ln66_4_fu_1975_p2 = xor_ln1412_1_fu_1969_p2 << zext_ln54_5_reg_3224;

assign shl_ln66_5_fu_2043_p2 = xor_ln1413_2_fu_2037_p2 << zext_ln54_6_reg_3231;

assign shl_ln66_6_fu_2247_p2 = zext_ln66_7_fu_2196_p1 << zext_ln66_8_fu_2235_p1;

assign shl_ln66_7_fu_2271_p2 = 32'd4294967295 << zext_ln66_9_fu_2239_p1;

assign shl_ln66_8_fu_2299_p2 = 4'd1 << zext_ln66_11_fu_2296_p1;

assign shl_ln66_9_fu_2513_p2 = zext_ln66_19_fu_2462_p1 << zext_ln66_20_fu_2501_p1;

assign shl_ln66_fu_1844_p2 = 8'd1 << zext_ln54_reg_3217;

assign shl_ln_fu_1269_p3 = {{r_0_reg_434}, {9'd0}};

assign sub_ln1514_fu_1113_p2 = (zext_ln1514_1_fu_1109_p1 - zext_ln1514_fu_1097_p1);

assign sub_ln54_10_fu_1742_p2 = (6'd31 - select_ln54_8_fu_1719_p3);

assign sub_ln54_1_fu_1310_p2 = ($signed(3'd6) - $signed(trunc_ln1398_fu_1278_p1));

assign sub_ln54_2_fu_1407_p2 = (zext_ln54_8_fu_1389_p1 - zext_ln54_9_fu_1393_p1);

assign sub_ln54_3_fu_1419_p2 = (zext_ln54_9_fu_1393_p1 - zext_ln54_8_fu_1389_p1);

assign sub_ln54_4_fu_1449_p2 = (6'd31 - select_ln54_fu_1425_p3);

assign sub_ln54_5_fu_1574_p2 = (zext_ln54_16_fu_1556_p1 - zext_ln54_17_fu_1560_p1);

assign sub_ln54_6_fu_1586_p2 = (zext_ln54_17_fu_1560_p1 - zext_ln54_16_fu_1556_p1);

assign sub_ln54_7_fu_1616_p2 = (6'd31 - select_ln54_5_fu_1592_p3);

assign sub_ln54_8_fu_1701_p2 = (zext_ln54_20_fu_1684_p1 - zext_ln54_21_fu_1688_p1);

assign sub_ln54_9_fu_1713_p2 = (zext_ln54_21_fu_1688_p1 - zext_ln54_20_fu_1684_p1);

assign sub_ln54_fu_1300_p2 = ($signed(3'd5) - $signed(trunc_ln1398_fu_1278_p1));

assign sub_ln66_1_fu_2108_p2 = (zext_ln66_2_fu_2082_p1 - zext_ln66_1_fu_2078_p1);

assign sub_ln66_2_fu_2138_p2 = (6'd31 - select_ln66_fu_2114_p3);

assign sub_ln66_3_fu_2368_p2 = (zext_ln66_13_fu_2350_p1 - zext_ln66_14_fu_2354_p1);

assign sub_ln66_4_fu_2380_p2 = (zext_ln66_14_fu_2354_p1 - zext_ln66_13_fu_2350_p1);

assign sub_ln66_5_fu_2410_p2 = (6'd31 - select_ln66_7_fu_2386_p3);

assign sub_ln66_6_fu_2634_p2 = (zext_ln66_25_fu_2616_p1 - zext_ln66_26_fu_2620_p1);

assign sub_ln66_7_fu_2646_p2 = (zext_ln66_26_fu_2620_p1 - zext_ln66_25_fu_2616_p1);

assign sub_ln66_8_fu_2676_p2 = (6'd31 - select_ln66_14_fu_2652_p3);

assign sub_ln66_fu_2096_p2 = (zext_ln66_1_fu_2078_p1 - zext_ln66_2_fu_2082_p1);

assign tapes_tape_address0 = grp_mpc_AND_2_fu_991_rand_tape_address0;

assign tapes_tape_address1 = grp_mpc_AND_2_fu_991_rand_tape_address1;

assign temp_matrix3_address0 = zext_ln109_4_fu_2888_p1;

integer ap_tvar_int_0;

always @ (slab_q1) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            tmp_20_fu_1397_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_20_fu_1397_p4[ap_tvar_int_0] = slab_q1[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (slab_q0) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            tmp_22_fu_2086_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_22_fu_2086_p4[ap_tvar_int_1] = slab_q0[31 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (shl_ln66_6_fu_2247_p2) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            tmp_23_fu_2253_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_23_fu_2253_p4[ap_tvar_int_2] = shl_ln66_6_fu_2247_p2[31 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (slab_q0) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            tmp_25_fu_2358_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_25_fu_2358_p4[ap_tvar_int_3] = slab_q0[31 - ap_tvar_int_3];
        end
    end
end

integer ap_tvar_int_4;

always @ (shl_ln66_9_fu_2513_p2) begin
    for (ap_tvar_int_4 = 32 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 31 - 0) begin
            tmp_26_fu_2519_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_26_fu_2519_p4[ap_tvar_int_4] = shl_ln66_9_fu_2513_p2[31 - ap_tvar_int_4];
        end
    end
end

integer ap_tvar_int_5;

always @ (slab_q0) begin
    for (ap_tvar_int_5 = 32 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 31 - 0) begin
            tmp_28_fu_2624_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_28_fu_2624_p4[ap_tvar_int_5] = slab_q0[31 - ap_tvar_int_5];
        end
    end
end

integer ap_tvar_int_6;

always @ (shl_ln66_12_fu_2779_p2) begin
    for (ap_tvar_int_6 = 32 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 31 - 0) begin
            tmp_29_fu_2785_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            tmp_29_fu_2785_p4[ap_tvar_int_6] = shl_ln66_12_fu_2779_p2[31 - ap_tvar_int_6];
        end
    end
end

integer ap_tvar_int_7;

always @ (slab_q1) begin
    for (ap_tvar_int_7 = 32 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 31 - 0) begin
            tmp_31_fu_1564_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            tmp_31_fu_1564_p4[ap_tvar_int_7] = slab_q1[31 - ap_tvar_int_7];
        end
    end
end

integer ap_tvar_int_8;

always @ (slab_load_9_reg_3293) begin
    for (ap_tvar_int_8 = 32 - 1; ap_tvar_int_8 >= 0; ap_tvar_int_8 = ap_tvar_int_8 - 1) begin
        if (ap_tvar_int_8 > 31 - 0) begin
            tmp_33_fu_1692_p4[ap_tvar_int_8] = 1'b0;
        end else begin
            tmp_33_fu_1692_p4[ap_tvar_int_8] = slab_load_9_reg_3293[31 - ap_tvar_int_8];
        end
    end
end

assign tmp_38_cast_fu_3010_p3 = {{add_ln1514_fu_3005_p2}, {2'd0}};

assign tmp_fu_1101_p3 = {{views_inputShare_offset}, {2'd0}};

assign trunc_ln109_1_fu_2969_p1 = mem_index_phi3_reg_3570[3:0];

assign trunc_ln109_fu_1243_p1 = mem_index_phi_reg_3117[3:0];

assign trunc_ln1398_fu_1278_p1 = bitNumber_assign_2_i_reg_554[2:0];

assign trunc_ln54_2_fu_1648_p1 = and_ln54_1_fu_1642_p2[7:0];

assign trunc_ln54_4_fu_1774_p1 = and_ln54_2_fu_1768_p2[7:0];

assign trunc_ln54_fu_1481_p1 = and_ln54_fu_1475_p2[7:0];

assign trunc_ln66_1_fu_2320_p1 = mem_index_phi1_fu_2306_p6[6:0];

assign trunc_ln66_2_fu_2442_p1 = and_ln66_6_fu_2436_p2[7:0];

assign trunc_ln66_3_fu_2586_p1 = mem_index_phi2_fu_2572_p6[6:0];

assign trunc_ln66_4_fu_2708_p1 = and_ln66_9_fu_2702_p2[7:0];

assign trunc_ln66_fu_2170_p1 = and_ln66_3_fu_2164_p2[7:0];

assign views_communicatedBi_address0 = grp_mpc_AND_2_fu_991_views_communicatedBi_address0;

assign views_communicatedBi_d0 = grp_mpc_AND_2_fu_991_views_communicatedBi_d0;

assign views_inputShare_address0 = grp_matrix_mul_fu_957_state_address0;

assign views_outputShare_address0 = views_outputShare_ad_reg_3614;

assign views_outputShare_d0 = slab_q1;

assign xor_ln109_1_fu_2893_p2 = (temp_matrix3_q0 ^ slab_q0);

assign xor_ln109_2_fu_1153_p2 = (i_0_i_i_reg_382 ^ 3'd4);

assign xor_ln109_5_fu_2868_p2 = (i_0_i_i2_reg_864 ^ 3'd4);

assign xor_ln109_fu_1168_p2 = (slab_q0 ^ plaintext_q0);

assign xor_ln1411_fu_2059_p2 = (tmp_6_i_reg_3426 ^ tmp_5_i_reg_3421);

assign xor_ln1412_1_fu_1969_p2 = (xor_ln1412_fu_1963_p2 ^ tmp_8_i_fu_1942_p5);

assign xor_ln1412_fu_1963_p2 = (tmp_7_i_fu_1930_p5 ^ tmp_10_i_fu_1954_p5);

assign xor_ln1413_1_fu_2031_p2 = (tmp_13_i_fu_2016_p5 ^ tmp_12_i_fu_2004_p5);

assign xor_ln1413_2_fu_2037_p2 = (xor_ln1413_fu_2025_p2 ^ xor_ln1413_1_fu_2031_p2);

assign xor_ln1413_fu_2025_p2 = (tmp_i_68_fu_1980_p5 ^ tmp_11_i_fu_1992_p5);

assign xor_ln54_3_fu_1413_p2 = (zext_ln54_8_fu_1389_p1 ^ 6'd31);

assign xor_ln54_4_fu_1580_p2 = (zext_ln54_16_fu_1556_p1 ^ 6'd31);

assign xor_ln54_5_fu_1707_p2 = (zext_ln54_20_fu_1684_p1 ^ 6'd31);

assign xor_ln54_fu_1320_p2 = (trunc_ln1398_fu_1278_p1 ^ 3'd7);

assign xor_ln66_10_fu_2731_p2 = (zext_ln66_29_fu_2722_p1 ^ 6'd31);

assign xor_ln66_11_fu_2761_p2 = (select_ln66_17_fu_2737_p3 ^ 6'd31);

assign xor_ln66_1_fu_1860_p2 = (shl_ln66_1_fu_1855_p2 ^ 8'd255);

assign xor_ln66_2_fu_1871_p2 = (shl_ln66_2_fu_1866_p2 ^ 8'd255);

assign xor_ln66_3_fu_2102_p2 = (zext_ln66_1_fu_2078_p1 ^ 6'd31);

assign xor_ln66_4_fu_2199_p2 = (zext_ln66_5_fu_2190_p1 ^ 6'd31);

assign xor_ln66_5_fu_2229_p2 = (select_ln66_3_fu_2205_p3 ^ 6'd31);

assign xor_ln66_6_fu_2374_p2 = (zext_ln66_13_fu_2350_p1 ^ 6'd31);

assign xor_ln66_7_fu_2465_p2 = (zext_ln66_17_fu_2456_p1 ^ 6'd31);

assign xor_ln66_8_fu_2495_p2 = (select_ln66_10_fu_2471_p3 ^ 6'd31);

assign xor_ln66_9_fu_2640_p2 = (zext_ln66_25_fu_2616_p1 ^ 6'd31);

assign xor_ln66_fu_1849_p2 = (shl_ln66_fu_1844_p2 ^ 8'd255);

assign zext_ln109_10_fu_2960_p1 = add_ln109_6_fu_2954_p2;

assign zext_ln109_11_fu_2965_p1 = i_0_i_i15_reg_905;

assign zext_ln109_12_fu_2984_p1 = add_ln109_8_fu_2978_p2;

assign zext_ln109_1_fu_1163_p1 = $unsigned(sext_ln109_fu_1159_p1);

assign zext_ln109_2_fu_1218_p1 = i_0_i_i3_reg_423;

assign zext_ln109_3_fu_2864_p1 = i_0_i_i2_reg_864;

assign zext_ln109_4_fu_2888_p1 = add_ln109_fu_2883_p2;

assign zext_ln109_5_fu_1234_p1 = add_ln109_2_fu_1228_p2;

assign zext_ln109_6_fu_1239_p1 = i_0_i_i3_reg_423;

assign zext_ln109_7_fu_1258_p1 = add_ln109_4_fu_1252_p2;

assign zext_ln109_8_fu_2878_p1 = $unsigned(sext_ln109_1_fu_2874_p1);

assign zext_ln109_9_fu_2944_p1 = i_0_i_i15_reg_905;

assign zext_ln109_fu_1148_p1 = i_0_i_i_reg_382;

assign zext_ln1478_fu_1131_p1 = loop_0_reg_371;

assign zext_ln1514_1_fu_1109_p1 = tmp_fu_1101_p3;

assign zext_ln1514_2_fu_3001_p1 = i_1_reg_916;

assign zext_ln1514_3_fu_3030_p1 = loop_1_reg_928;

assign zext_ln1514_4_fu_3039_p1 = add_ln1514_1_fu_3034_p2;

assign zext_ln1514_5_fu_3044_p1 = loop_1_reg_928;

assign zext_ln1514_6_fu_3060_p1 = add_ln1514_3_fu_3054_p2;

assign zext_ln1514_fu_1097_p1 = views_inputShare_offset;

assign zext_ln54_10_fu_1494_p1 = a_0_reg_3276;

assign zext_ln54_11_fu_1661_p1 = b_0_reg_3299;

assign zext_ln54_12_fu_1787_p1 = c_0_reg_3311;

assign zext_ln54_13_fu_1455_p1 = select_ln54_2_fu_1441_p3;

assign zext_ln54_14_fu_1459_p1 = sub_ln54_4_fu_1449_p2;

assign zext_ln54_15_fu_1531_p1 = select_ln54_4_fu_1523_p3;

assign zext_ln54_16_fu_1556_p1 = cast_offset4_fu_1536_p3;

assign zext_ln54_17_fu_1560_p1 = or_ln54_1_fu_1544_p2;

assign zext_ln54_18_fu_1622_p1 = select_ln54_7_fu_1608_p3;

assign zext_ln54_19_fu_1626_p1 = sub_ln54_7_fu_1616_p2;

assign zext_ln54_20_fu_1684_p1 = cast_offset5_fu_1664_p3;

assign zext_ln54_21_fu_1688_p1 = or_ln54_2_fu_1672_p2;

assign zext_ln54_22_fu_1748_p1 = select_ln54_10_fu_1734_p3;

assign zext_ln54_23_fu_1752_p1 = sub_ln54_10_fu_1742_p2;

assign zext_ln54_5_fu_1316_p1 = sub_ln54_1_fu_1310_p2;

assign zext_ln54_6_fu_1326_p1 = xor_ln54_fu_1320_p2;

assign zext_ln54_7_fu_1364_p1 = phi_ln54_reg_686;

assign zext_ln54_8_fu_1389_p1 = cast_offset_fu_1369_p3;

assign zext_ln54_9_fu_1393_p1 = or_ln54_fu_1377_p2;

assign zext_ln54_fu_1306_p1 = sub_ln54_fu_1300_p2;

assign zext_ln66_10_fu_2243_p1 = xor_ln66_5_fu_2229_p2;

assign zext_ln66_11_fu_2296_p1 = tmp_21_reg_3431;

assign zext_ln66_12_fu_2330_p1 = add_ln66_fu_2324_p2;

assign zext_ln66_13_fu_2350_p1 = cast_offset2_fu_2335_p3;

assign zext_ln66_14_fu_2354_p1 = or_ln66_4_fu_2343_p2;

assign zext_ln66_15_fu_2416_p1 = select_ln66_9_fu_2402_p3;

assign zext_ln66_16_fu_2420_p1 = sub_ln66_5_fu_2410_p2;

assign zext_ln66_17_fu_2456_p1 = cast_offset2_reg_3493;

assign zext_ln66_18_fu_2459_p1 = or_ln66_4_reg_3499;

assign zext_ln66_19_fu_2462_p1 = or_ln66_1_reg_3505;

assign zext_ln66_1_fu_2078_p1 = cast_offset1_fu_2063_p3;

assign zext_ln66_20_fu_2501_p1 = select_ln66_12_fu_2487_p3;

assign zext_ln66_21_fu_2505_p1 = select_ln66_11_fu_2479_p3;

assign zext_ln66_22_fu_2509_p1 = xor_ln66_8_fu_2495_p2;

assign zext_ln66_23_fu_2562_p1 = tmp_24_reg_3443;

assign zext_ln66_24_fu_2596_p1 = add_ln66_1_fu_2590_p2;

assign zext_ln66_25_fu_2616_p1 = cast_offset3_fu_2601_p3;

assign zext_ln66_26_fu_2620_p1 = or_ln66_5_fu_2609_p2;

assign zext_ln66_27_fu_2682_p1 = select_ln66_16_fu_2668_p3;

assign zext_ln66_28_fu_2686_p1 = sub_ln66_8_fu_2676_p2;

assign zext_ln66_29_fu_2722_p1 = cast_offset3_reg_3516;

assign zext_ln66_2_fu_2082_p1 = or_ln66_3_fu_2071_p2;

assign zext_ln66_30_fu_2725_p1 = or_ln66_5_reg_3522;

assign zext_ln66_31_fu_2728_p1 = or_ln66_2_reg_3528;

assign zext_ln66_32_fu_2767_p1 = select_ln66_19_fu_2753_p3;

assign zext_ln66_33_fu_2771_p1 = select_ln66_18_fu_2745_p3;

assign zext_ln66_34_fu_2775_p1 = xor_ln66_11_fu_2761_p2;

assign zext_ln66_35_fu_2828_p1 = tmp_27_reg_3454;

assign zext_ln66_3_fu_2144_p1 = select_ln66_2_fu_2130_p3;

assign zext_ln66_4_fu_2148_p1 = sub_ln66_2_fu_2138_p2;

assign zext_ln66_5_fu_2190_p1 = cast_offset1_reg_3470;

assign zext_ln66_6_fu_2193_p1 = or_ln66_3_reg_3476;

assign zext_ln66_7_fu_2196_p1 = or_ln66_reg_3482;

assign zext_ln66_8_fu_2235_p1 = select_ln66_5_fu_2221_p3;

assign zext_ln66_9_fu_2239_p1 = select_ln66_4_fu_2213_p3;

assign zext_ln66_fu_1925_p1 = ap_phi_mux_phi_ln66_phi_fu_853_p6;

always @ (posedge ap_clk) begin
    slab_addr_1_reg_3092[5:4] <= 2'b00;
    slab_addr_2_reg_3130[5] <= 1'b0;
    shl_ln_reg_3198[8:0] <= 9'b000000000;
    zext_ln54_reg_3217[7:3] <= 5'b00000;
    zext_ln54_5_reg_3224[7:3] <= 5'b00000;
    zext_ln54_6_reg_3231[7:3] <= 5'b00000;
    add_ln1503_reg_3238[8:0] <= 9'b000000000;
    cast_offset1_reg_3470[2:0] <= 3'b000;
    or_ln66_3_reg_3476[2:0] <= 3'b111;
    cast_offset2_reg_3493[2:0] <= 3'b000;
    or_ln66_4_reg_3499[2:0] <= 3'b111;
    cast_offset3_reg_3516[2:0] <= 3'b000;
    or_ln66_5_reg_3522[2:0] <= 3'b111;
    add_ln1507_reg_3533[1:0] <= 2'b00;
    slab_addr_4_reg_3546[5:4] <= 2'b00;
    slab_addr_11_reg_3583[5] <= 1'b0;
    tmp_38_cast_reg_3601[1:0] <= 2'b00;
    phi_ln109_reg_405[1:0] <= 2'b01;
    phi_ln54_reg_686[1:0] <= 2'b00;
    phi_ln54_reg_686[6:5] <= 2'b00;
    phi_ln109_1_reg_887[1:0] <= 2'b01;
    phi_ln1514_reg_940[1:0] <= 2'b01;
end

endmodule //mpc_LowMC_2
