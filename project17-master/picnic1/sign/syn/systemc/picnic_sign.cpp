// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "picnic_sign.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic picnic_sign::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic picnic_sign::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> picnic_sign::ap_ST_fsm_state1 = "1";
const sc_lv<10> picnic_sign::ap_ST_fsm_state2 = "10";
const sc_lv<10> picnic_sign::ap_ST_fsm_state3 = "100";
const sc_lv<10> picnic_sign::ap_ST_fsm_state4 = "1000";
const sc_lv<10> picnic_sign::ap_ST_fsm_state5 = "10000";
const sc_lv<10> picnic_sign::ap_ST_fsm_state6 = "100000";
const sc_lv<10> picnic_sign::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> picnic_sign::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> picnic_sign::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> picnic_sign::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> picnic_sign::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> picnic_sign::ap_const_lv32_1 = "1";
const sc_lv<32> picnic_sign::ap_const_lv32_2 = "10";
const sc_lv<32> picnic_sign::ap_const_lv32_3 = "11";
const sc_lv<32> picnic_sign::ap_const_lv32_4 = "100";
const sc_lv<1> picnic_sign::ap_const_lv1_0 = "0";
const sc_lv<32> picnic_sign::ap_const_lv32_5 = "101";
const sc_lv<32> picnic_sign::ap_const_lv32_7 = "111";
const sc_lv<3> picnic_sign::ap_const_lv3_0 = "000";
const sc_lv<1> picnic_sign::ap_const_lv1_1 = "1";
const sc_lv<32> picnic_sign::ap_const_lv32_6 = "110";
const sc_lv<6> picnic_sign::ap_const_lv6_0 = "000000";
const sc_lv<16> picnic_sign::ap_const_lv16_84F4 = "1000010011110100";
const sc_lv<32> picnic_sign::ap_const_lv32_9 = "1001";
const bool picnic_sign::ap_const_boolean_0 = false;
const sc_lv<32> picnic_sign::ap_const_lv32_8 = "1000";
const sc_lv<3> picnic_sign::ap_const_lv3_1 = "1";
const sc_lv<3> picnic_sign::ap_const_lv3_7 = "111";
const sc_lv<5> picnic_sign::ap_const_lv5_1 = "1";
const sc_lv<6> picnic_sign::ap_const_lv6_4 = "100";
const sc_lv<5> picnic_sign::ap_const_lv5_2 = "10";
const sc_lv<5> picnic_sign::ap_const_lv5_3 = "11";
const sc_lv<32> picnic_sign::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<64> picnic_sign::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const bool picnic_sign::ap_const_boolean_1 = true;

picnic_sign::picnic_sign(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sig_0_proofs_seed1_U = new picnic_sign_sig_0bCo("sig_0_proofs_seed1_U");
    sig_0_proofs_seed1_U->clk(ap_clk);
    sig_0_proofs_seed1_U->reset(ap_rst);
    sig_0_proofs_seed1_U->address0(sig_0_proofs_seed1_address0);
    sig_0_proofs_seed1_U->ce0(sig_0_proofs_seed1_ce0);
    sig_0_proofs_seed1_U->we0(sig_0_proofs_seed1_we0);
    sig_0_proofs_seed1_U->d0(grp_sign_picnic1_fu_390_sig_0_proofs_seed1_d0);
    sig_0_proofs_seed1_U->q0(sig_0_proofs_seed1_q0);
    sig_0_proofs_seed2_U = new picnic_sign_sig_0bCo("sig_0_proofs_seed2_U");
    sig_0_proofs_seed2_U->clk(ap_clk);
    sig_0_proofs_seed2_U->reset(ap_rst);
    sig_0_proofs_seed2_U->address0(sig_0_proofs_seed2_address0);
    sig_0_proofs_seed2_U->ce0(sig_0_proofs_seed2_ce0);
    sig_0_proofs_seed2_U->we0(sig_0_proofs_seed2_we0);
    sig_0_proofs_seed2_U->d0(grp_sign_picnic1_fu_390_sig_0_proofs_seed2_d0);
    sig_0_proofs_seed2_U->q0(sig_0_proofs_seed2_q0);
    sig_0_proofs_inputS_U = new picnic_sign_sig_0bEo("sig_0_proofs_inputS_U");
    sig_0_proofs_inputS_U->clk(ap_clk);
    sig_0_proofs_inputS_U->reset(ap_rst);
    sig_0_proofs_inputS_U->address0(sig_0_proofs_inputS_address0);
    sig_0_proofs_inputS_U->ce0(sig_0_proofs_inputS_ce0);
    sig_0_proofs_inputS_U->we0(sig_0_proofs_inputS_we0);
    sig_0_proofs_inputS_U->d0(grp_sign_picnic1_fu_390_sig_0_proofs_inputS_d0);
    sig_0_proofs_inputS_U->q0(sig_0_proofs_inputS_q0);
    sig_0_proofs_commun_U = new picnic_sign_sig_0bFp("sig_0_proofs_commun_U");
    sig_0_proofs_commun_U->clk(ap_clk);
    sig_0_proofs_commun_U->reset(ap_rst);
    sig_0_proofs_commun_U->address0(sig_0_proofs_commun_address0);
    sig_0_proofs_commun_U->ce0(sig_0_proofs_commun_ce0);
    sig_0_proofs_commun_U->we0(sig_0_proofs_commun_we0);
    sig_0_proofs_commun_U->d0(grp_sign_picnic1_fu_390_sig_0_proofs_commun_d0);
    sig_0_proofs_commun_U->q0(sig_0_proofs_commun_q0);
    sig_0_proofs_view3C_U = new picnic_sign_sig_0bGp("sig_0_proofs_view3C_U");
    sig_0_proofs_view3C_U->clk(ap_clk);
    sig_0_proofs_view3C_U->reset(ap_rst);
    sig_0_proofs_view3C_U->address0(sig_0_proofs_view3C_address0);
    sig_0_proofs_view3C_U->ce0(sig_0_proofs_view3C_ce0);
    sig_0_proofs_view3C_U->we0(sig_0_proofs_view3C_we0);
    sig_0_proofs_view3C_U->d0(grp_sign_picnic1_fu_390_sig_0_proofs_view3C_d0);
    sig_0_proofs_view3C_U->q0(sig_0_proofs_view3C_q0);
    sig_0_challengeBits_U = new picnic_sign_sig_0bHp("sig_0_challengeBits_U");
    sig_0_challengeBits_U->clk(ap_clk);
    sig_0_challengeBits_U->reset(ap_rst);
    sig_0_challengeBits_U->address0(sig_0_challengeBits_address0);
    sig_0_challengeBits_U->ce0(sig_0_challengeBits_ce0);
    sig_0_challengeBits_U->we0(sig_0_challengeBits_we0);
    sig_0_challengeBits_U->d0(grp_sign_picnic1_fu_390_sig_0_challengeBits_d0);
    sig_0_challengeBits_U->q0(sig_0_challengeBits_q0);
    sig_0_salt_U = new H3_2_hash("sig_0_salt_U");
    sig_0_salt_U->clk(ap_clk);
    sig_0_salt_U->reset(ap_rst);
    sig_0_salt_U->address0(sig_0_salt_address0);
    sig_0_salt_U->ce0(sig_0_salt_ce0);
    sig_0_salt_U->we0(sig_0_salt_we0);
    sig_0_salt_U->d0(grp_sign_picnic1_fu_390_sig_0_salt_d0);
    sig_0_salt_U->q0(sig_0_salt_q0);
    temp_U = new picnic_sign_temp("temp_U");
    temp_U->clk(ap_clk);
    temp_U->reset(ap_rst);
    temp_U->address0(temp_address0);
    temp_U->ce0(temp_ce0);
    temp_U->we0(temp_we0);
    temp_U->d0(temp_d0);
    temp_U->q0(temp_q0);
    temp2_U = new picnic_sign_temp("temp2_U");
    temp2_U->clk(ap_clk);
    temp2_U->reset(ap_rst);
    temp2_U->address0(temp2_address0);
    temp2_U->ce0(temp2_ce0);
    temp2_U->we0(temp2_we0);
    temp2_U->d0(temp2_d0);
    temp2_U->q0(temp2_q0);
    temp3_U = new picnic_sign_temp("temp3_U");
    temp3_U->clk(ap_clk);
    temp3_U->reset(ap_rst);
    temp3_U->address0(temp3_address0);
    temp3_U->ce0(temp3_ce0);
    temp3_U->we0(temp3_we0);
    temp3_U->d0(temp3_d0);
    temp3_U->q0(temp3_q0);
    grp_sign_picnic1_fu_390 = new sign_picnic1("grp_sign_picnic1_fu_390");
    grp_sign_picnic1_fu_390->ap_clk(ap_clk);
    grp_sign_picnic1_fu_390->ap_rst(ap_rst);
    grp_sign_picnic1_fu_390->ap_start(grp_sign_picnic1_fu_390_ap_start);
    grp_sign_picnic1_fu_390->ap_done(grp_sign_picnic1_fu_390_ap_done);
    grp_sign_picnic1_fu_390->ap_idle(grp_sign_picnic1_fu_390_ap_idle);
    grp_sign_picnic1_fu_390->ap_ready(grp_sign_picnic1_fu_390_ap_ready);
    grp_sign_picnic1_fu_390->privateKey_address0(grp_sign_picnic1_fu_390_privateKey_address0);
    grp_sign_picnic1_fu_390->privateKey_ce0(grp_sign_picnic1_fu_390_privateKey_ce0);
    grp_sign_picnic1_fu_390->privateKey_q0(temp3_q0);
    grp_sign_picnic1_fu_390->pubKey_address0(grp_sign_picnic1_fu_390_pubKey_address0);
    grp_sign_picnic1_fu_390->pubKey_ce0(grp_sign_picnic1_fu_390_pubKey_ce0);
    grp_sign_picnic1_fu_390->pubKey_q0(temp_q0);
    grp_sign_picnic1_fu_390->plaintext_address0(grp_sign_picnic1_fu_390_plaintext_address0);
    grp_sign_picnic1_fu_390->plaintext_ce0(grp_sign_picnic1_fu_390_plaintext_ce0);
    grp_sign_picnic1_fu_390->plaintext_q0(temp2_q0);
    grp_sign_picnic1_fu_390->message_address0(grp_sign_picnic1_fu_390_message_address0);
    grp_sign_picnic1_fu_390->message_ce0(grp_sign_picnic1_fu_390_message_ce0);
    grp_sign_picnic1_fu_390->message_q0(message_q0);
    grp_sign_picnic1_fu_390->messageByteLength(message_len);
    grp_sign_picnic1_fu_390->sig_0_proofs_seed1_address0(grp_sign_picnic1_fu_390_sig_0_proofs_seed1_address0);
    grp_sign_picnic1_fu_390->sig_0_proofs_seed1_ce0(grp_sign_picnic1_fu_390_sig_0_proofs_seed1_ce0);
    grp_sign_picnic1_fu_390->sig_0_proofs_seed1_we0(grp_sign_picnic1_fu_390_sig_0_proofs_seed1_we0);
    grp_sign_picnic1_fu_390->sig_0_proofs_seed1_d0(grp_sign_picnic1_fu_390_sig_0_proofs_seed1_d0);
    grp_sign_picnic1_fu_390->sig_0_proofs_seed2_address0(grp_sign_picnic1_fu_390_sig_0_proofs_seed2_address0);
    grp_sign_picnic1_fu_390->sig_0_proofs_seed2_ce0(grp_sign_picnic1_fu_390_sig_0_proofs_seed2_ce0);
    grp_sign_picnic1_fu_390->sig_0_proofs_seed2_we0(grp_sign_picnic1_fu_390_sig_0_proofs_seed2_we0);
    grp_sign_picnic1_fu_390->sig_0_proofs_seed2_d0(grp_sign_picnic1_fu_390_sig_0_proofs_seed2_d0);
    grp_sign_picnic1_fu_390->sig_0_proofs_inputS_address0(grp_sign_picnic1_fu_390_sig_0_proofs_inputS_address0);
    grp_sign_picnic1_fu_390->sig_0_proofs_inputS_ce0(grp_sign_picnic1_fu_390_sig_0_proofs_inputS_ce0);
    grp_sign_picnic1_fu_390->sig_0_proofs_inputS_we0(grp_sign_picnic1_fu_390_sig_0_proofs_inputS_we0);
    grp_sign_picnic1_fu_390->sig_0_proofs_inputS_d0(grp_sign_picnic1_fu_390_sig_0_proofs_inputS_d0);
    grp_sign_picnic1_fu_390->sig_0_proofs_commun_address0(grp_sign_picnic1_fu_390_sig_0_proofs_commun_address0);
    grp_sign_picnic1_fu_390->sig_0_proofs_commun_ce0(grp_sign_picnic1_fu_390_sig_0_proofs_commun_ce0);
    grp_sign_picnic1_fu_390->sig_0_proofs_commun_we0(grp_sign_picnic1_fu_390_sig_0_proofs_commun_we0);
    grp_sign_picnic1_fu_390->sig_0_proofs_commun_d0(grp_sign_picnic1_fu_390_sig_0_proofs_commun_d0);
    grp_sign_picnic1_fu_390->sig_0_proofs_view3C_address0(grp_sign_picnic1_fu_390_sig_0_proofs_view3C_address0);
    grp_sign_picnic1_fu_390->sig_0_proofs_view3C_ce0(grp_sign_picnic1_fu_390_sig_0_proofs_view3C_ce0);
    grp_sign_picnic1_fu_390->sig_0_proofs_view3C_we0(grp_sign_picnic1_fu_390_sig_0_proofs_view3C_we0);
    grp_sign_picnic1_fu_390->sig_0_proofs_view3C_d0(grp_sign_picnic1_fu_390_sig_0_proofs_view3C_d0);
    grp_sign_picnic1_fu_390->sig_0_challengeBits_address0(grp_sign_picnic1_fu_390_sig_0_challengeBits_address0);
    grp_sign_picnic1_fu_390->sig_0_challengeBits_ce0(grp_sign_picnic1_fu_390_sig_0_challengeBits_ce0);
    grp_sign_picnic1_fu_390->sig_0_challengeBits_we0(grp_sign_picnic1_fu_390_sig_0_challengeBits_we0);
    grp_sign_picnic1_fu_390->sig_0_challengeBits_d0(grp_sign_picnic1_fu_390_sig_0_challengeBits_d0);
    grp_sign_picnic1_fu_390->sig_0_challengeBits_q0(sig_0_challengeBits_q0);
    grp_sign_picnic1_fu_390->sig_0_salt_address0(grp_sign_picnic1_fu_390_sig_0_salt_address0);
    grp_sign_picnic1_fu_390->sig_0_salt_ce0(grp_sign_picnic1_fu_390_sig_0_salt_ce0);
    grp_sign_picnic1_fu_390->sig_0_salt_we0(grp_sign_picnic1_fu_390_sig_0_salt_we0);
    grp_sign_picnic1_fu_390->sig_0_salt_d0(grp_sign_picnic1_fu_390_sig_0_salt_d0);
    grp_sign_picnic1_fu_390->sig_0_salt_q0(sig_0_salt_q0);
    grp_sign_picnic1_fu_390->viewOutputs_address0(grp_sign_picnic1_fu_390_viewOutputs_address0);
    grp_sign_picnic1_fu_390->viewOutputs_ce0(grp_sign_picnic1_fu_390_viewOutputs_ce0);
    grp_sign_picnic1_fu_390->viewOutputs_we0(grp_sign_picnic1_fu_390_viewOutputs_we0);
    grp_sign_picnic1_fu_390->viewOutputs_d0(grp_sign_picnic1_fu_390_viewOutputs_d0);
    grp_sign_picnic1_fu_390->viewOutputs_q0(viewOutputs_q0);
    grp_sign_picnic1_fu_390->viewOutputs_address1(grp_sign_picnic1_fu_390_viewOutputs_address1);
    grp_sign_picnic1_fu_390->viewOutputs_ce1(grp_sign_picnic1_fu_390_viewOutputs_ce1);
    grp_sign_picnic1_fu_390->viewOutputs_q1(viewOutputs_q1);
    grp_sign_picnic1_fu_390->ap_return(grp_sign_picnic1_fu_390_ap_return);
    grp_serializeSignature_fu_419 = new serializeSignature("grp_serializeSignature_fu_419");
    grp_serializeSignature_fu_419->ap_clk(ap_clk);
    grp_serializeSignature_fu_419->ap_rst(ap_rst);
    grp_serializeSignature_fu_419->ap_start(grp_serializeSignature_fu_419_ap_start);
    grp_serializeSignature_fu_419->ap_done(grp_serializeSignature_fu_419_ap_done);
    grp_serializeSignature_fu_419->ap_idle(grp_serializeSignature_fu_419_ap_idle);
    grp_serializeSignature_fu_419->ap_ready(grp_serializeSignature_fu_419_ap_ready);
    grp_serializeSignature_fu_419->sig_0_proofs_seed1_address0(grp_serializeSignature_fu_419_sig_0_proofs_seed1_address0);
    grp_serializeSignature_fu_419->sig_0_proofs_seed1_ce0(grp_serializeSignature_fu_419_sig_0_proofs_seed1_ce0);
    grp_serializeSignature_fu_419->sig_0_proofs_seed1_q0(sig_0_proofs_seed1_q0);
    grp_serializeSignature_fu_419->sig_0_proofs_seed2_address0(grp_serializeSignature_fu_419_sig_0_proofs_seed2_address0);
    grp_serializeSignature_fu_419->sig_0_proofs_seed2_ce0(grp_serializeSignature_fu_419_sig_0_proofs_seed2_ce0);
    grp_serializeSignature_fu_419->sig_0_proofs_seed2_q0(sig_0_proofs_seed2_q0);
    grp_serializeSignature_fu_419->sig_0_proofs_inputS_address0(grp_serializeSignature_fu_419_sig_0_proofs_inputS_address0);
    grp_serializeSignature_fu_419->sig_0_proofs_inputS_ce0(grp_serializeSignature_fu_419_sig_0_proofs_inputS_ce0);
    grp_serializeSignature_fu_419->sig_0_proofs_inputS_q0(sig_0_proofs_inputS_q0);
    grp_serializeSignature_fu_419->sig_0_proofs_commun_address0(grp_serializeSignature_fu_419_sig_0_proofs_commun_address0);
    grp_serializeSignature_fu_419->sig_0_proofs_commun_ce0(grp_serializeSignature_fu_419_sig_0_proofs_commun_ce0);
    grp_serializeSignature_fu_419->sig_0_proofs_commun_q0(sig_0_proofs_commun_q0);
    grp_serializeSignature_fu_419->sig_0_proofs_view3C_address0(grp_serializeSignature_fu_419_sig_0_proofs_view3C_address0);
    grp_serializeSignature_fu_419->sig_0_proofs_view3C_ce0(grp_serializeSignature_fu_419_sig_0_proofs_view3C_ce0);
    grp_serializeSignature_fu_419->sig_0_proofs_view3C_q0(sig_0_proofs_view3C_q0);
    grp_serializeSignature_fu_419->sig_0_challengeBits_address0(grp_serializeSignature_fu_419_sig_0_challengeBits_address0);
    grp_serializeSignature_fu_419->sig_0_challengeBits_ce0(grp_serializeSignature_fu_419_sig_0_challengeBits_ce0);
    grp_serializeSignature_fu_419->sig_0_challengeBits_q0(sig_0_challengeBits_q0);
    grp_serializeSignature_fu_419->sig_0_salt_address0(grp_serializeSignature_fu_419_sig_0_salt_address0);
    grp_serializeSignature_fu_419->sig_0_salt_ce0(grp_serializeSignature_fu_419_sig_0_salt_ce0);
    grp_serializeSignature_fu_419->sig_0_salt_q0(sig_0_salt_q0);
    grp_serializeSignature_fu_419->sigBytes_address0(grp_serializeSignature_fu_419_sigBytes_address0);
    grp_serializeSignature_fu_419->sigBytes_ce0(grp_serializeSignature_fu_419_sigBytes_ce0);
    grp_serializeSignature_fu_419->sigBytes_we0(grp_serializeSignature_fu_419_sigBytes_we0);
    grp_serializeSignature_fu_419->sigBytes_d0(grp_serializeSignature_fu_419_sigBytes_d0);
    grp_serializeSignature_fu_419->sigBytes_offset(signature_offset);
    grp_serializeSignature_fu_419->ap_return(grp_serializeSignature_fu_419_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln269_1_fu_451_p2);
    sensitive << ( phi_ln269_1_reg_334 );

    SC_METHOD(thread_add_ln269_2_fu_468_p2);
    sensitive << ( phi_ln269_2_reg_345 );

    SC_METHOD(thread_add_ln269_fu_434_p2);
    sensitive << ( phi_ln269_reg_323 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state10_on_subcall_done);
    sensitive << ( ret2_reg_763 );
    sensitive << ( grp_serializeSignature_fu_419_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_block_state10_on_subcall_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_p_0_phi_fu_382_p4);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( p_0_reg_378 );

    SC_METHOD(thread_ap_phi_mux_signature_len_write_s_phi_fu_371_p4);
    sensitive << ( ret2_reg_763 );
    sensitive << ( grp_serializeSignature_fu_419_ap_return );
    sensitive << ( signature_len_write_s_reg_367 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_block_state10_on_subcall_done );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_block_state10_on_subcall_done );
    sensitive << ( select_ln249_fu_600_p3 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_block_state10_on_subcall_done );
    sensitive << ( zext_ln249_fu_596_p1 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_grp_serializeSignature_fu_419_ap_start);
    sensitive << ( grp_serializeSignature_fu_419_ap_start_reg );

    SC_METHOD(thread_grp_sign_picnic1_fu_390_ap_start);
    sensitive << ( grp_sign_picnic1_fu_390_ap_start_reg );

    SC_METHOD(thread_icmp_ln269_1_fu_462_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( phi_ln269_1_reg_334 );

    SC_METHOD(thread_icmp_ln269_2_fu_479_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( phi_ln269_2_reg_345 );

    SC_METHOD(thread_icmp_ln269_fu_445_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln269_reg_323 );

    SC_METHOD(thread_loop_fu_527_p2);
    sensitive << ( loop_0_reg_356 );

    SC_METHOD(thread_message_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_message_address0 );

    SC_METHOD(thread_message_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_message_ce0 );

    SC_METHOD(thread_or_ln271_1_fu_533_p2);
    sensitive << ( trunc_ln270_reg_662 );

    SC_METHOD(thread_or_ln271_2_fu_545_p2);
    sensitive << ( trunc_ln270_reg_662 );

    SC_METHOD(thread_or_ln271_5_fu_557_p5);
    sensitive << ( sk_pk_ciphertext_q0 );
    sensitive << ( sk_pk_ciphertext_q1 );
    sensitive << ( sk_pk_ciphertext_loa_reg_703 );
    sensitive << ( sk_pk_ciphertext_loa_1_reg_708 );

    SC_METHOD(thread_or_ln271_fu_504_p2);
    sensitive << ( trunc_ln270_fu_500_p1 );

    SC_METHOD(thread_or_ln272_2_fu_574_p5);
    sensitive << ( sk_pk_plaintext_q0 );
    sensitive << ( sk_pk_plaintext_q1 );
    sensitive << ( sk_pk_plaintext_load_reg_723 );
    sensitive << ( sk_pk_plaintext_load_1_reg_728 );

    SC_METHOD(thread_or_ln273_2_fu_585_p5);
    sensitive << ( sk_data_q0 );
    sensitive << ( sk_data_q1 );
    sensitive << ( sk_data_load_reg_743 );
    sensitive << ( sk_data_load_1_reg_748 );

    SC_METHOD(thread_select_ln249_fu_600_p3);
    sensitive << ( ap_phi_mux_p_0_phi_fu_382_p4 );

    SC_METHOD(thread_sig_0_challengeBits_address0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_challengeBits_address0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_challengeBits_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_challengeBits_ce0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_challengeBits_ce0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_challengeBits_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_challengeBits_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_challengeBits_we0 );

    SC_METHOD(thread_sig_0_proofs_commun_address0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_commun_address0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_commun_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_commun_ce0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_commun_ce0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_commun_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_commun_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_commun_we0 );

    SC_METHOD(thread_sig_0_proofs_inputS_address0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_inputS_address0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_inputS_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_inputS_ce0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_inputS_ce0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_inputS_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_inputS_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_inputS_we0 );

    SC_METHOD(thread_sig_0_proofs_seed1_address0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_seed1_address0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_seed1_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_seed1_ce0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_seed1_ce0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_seed1_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_seed1_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_seed1_we0 );

    SC_METHOD(thread_sig_0_proofs_seed2_address0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_seed2_address0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_seed2_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_seed2_ce0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_seed2_ce0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_seed2_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_seed2_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_seed2_we0 );

    SC_METHOD(thread_sig_0_proofs_view3C_address0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_view3C_address0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_view3C_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_view3C_ce0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_view3C_ce0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_proofs_view3C_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_proofs_view3C_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_proofs_view3C_we0 );

    SC_METHOD(thread_sig_0_salt_address0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_salt_address0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_salt_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_salt_ce0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_salt_ce0 );
    sensitive << ( grp_serializeSignature_fu_419_sig_0_salt_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sig_0_salt_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_sig_0_salt_we0 );

    SC_METHOD(thread_signature_address0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( grp_serializeSignature_fu_419_sigBytes_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_signature_ce0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( grp_serializeSignature_fu_419_sigBytes_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_signature_d0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( grp_serializeSignature_fu_419_sigBytes_d0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_signature_we0);
    sensitive << ( ret2_reg_763 );
    sensitive << ( grp_serializeSignature_fu_419_sigBytes_we0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sk_data_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln271_fu_493_p1 );
    sensitive << ( zext_ln271_2_fu_538_p1 );

    SC_METHOD(thread_sk_data_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln271_1_fu_510_p1 );
    sensitive << ( zext_ln271_3_fu_550_p1 );

    SC_METHOD(thread_sk_data_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sk_data_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sk_pk_ciphertext_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln271_fu_493_p1 );
    sensitive << ( zext_ln271_2_fu_538_p1 );

    SC_METHOD(thread_sk_pk_ciphertext_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln271_1_fu_510_p1 );
    sensitive << ( zext_ln271_3_fu_550_p1 );

    SC_METHOD(thread_sk_pk_ciphertext_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sk_pk_ciphertext_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sk_pk_plaintext_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln271_fu_493_p1 );
    sensitive << ( zext_ln271_2_fu_538_p1 );

    SC_METHOD(thread_sk_pk_plaintext_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln271_1_fu_510_p1 );
    sensitive << ( zext_ln271_3_fu_550_p1 );

    SC_METHOD(thread_sk_pk_plaintext_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sk_pk_plaintext_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_temp2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_plaintext_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln269_1_fu_457_p1 );
    sensitive << ( zext_ln271_4_fu_568_p1 );

    SC_METHOD(thread_temp2_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_plaintext_ce0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_temp2_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( or_ln272_2_fu_574_p5 );

    SC_METHOD(thread_temp2_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_temp3_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_privateKey_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln269_2_fu_474_p1 );
    sensitive << ( zext_ln271_4_fu_568_p1 );

    SC_METHOD(thread_temp3_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_privateKey_ce0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_temp3_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( or_ln273_2_fu_585_p5 );

    SC_METHOD(thread_temp3_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_temp_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_pubKey_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln269_fu_440_p1 );
    sensitive << ( zext_ln271_4_fu_568_p1 );

    SC_METHOD(thread_temp_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_pubKey_ce0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_temp_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( or_ln271_5_fu_557_p5 );

    SC_METHOD(thread_temp_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_fu_485_p3);
    sensitive << ( loop_0_reg_356 );

    SC_METHOD(thread_trunc_ln270_fu_500_p1);
    sensitive << ( loop_0_reg_356 );

    SC_METHOD(thread_viewOutputs_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_viewOutputs_address0 );

    SC_METHOD(thread_viewOutputs_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_viewOutputs_address1 );

    SC_METHOD(thread_viewOutputs_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_viewOutputs_ce0 );

    SC_METHOD(thread_viewOutputs_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_viewOutputs_ce1 );

    SC_METHOD(thread_viewOutputs_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_viewOutputs_d0 );

    SC_METHOD(thread_viewOutputs_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_viewOutputs_we0 );

    SC_METHOD(thread_zext_ln249_fu_596_p1);
    sensitive << ( ap_phi_mux_signature_len_write_s_phi_fu_371_p4 );

    SC_METHOD(thread_zext_ln269_1_fu_457_p1);
    sensitive << ( phi_ln269_1_reg_334 );

    SC_METHOD(thread_zext_ln269_2_fu_474_p1);
    sensitive << ( phi_ln269_2_reg_345 );

    SC_METHOD(thread_zext_ln269_fu_440_p1);
    sensitive << ( phi_ln269_reg_323 );

    SC_METHOD(thread_zext_ln271_1_fu_510_p1);
    sensitive << ( or_ln271_fu_504_p2 );

    SC_METHOD(thread_zext_ln271_2_fu_538_p1);
    sensitive << ( or_ln271_1_fu_533_p2 );

    SC_METHOD(thread_zext_ln271_3_fu_550_p1);
    sensitive << ( or_ln271_2_fu_545_p2 );

    SC_METHOD(thread_zext_ln271_4_fu_568_p1);
    sensitive << ( trunc_ln271_1_reg_673 );

    SC_METHOD(thread_zext_ln271_fu_493_p1);
    sensitive << ( loop_0_reg_356 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_fu_485_p3 );
    sensitive << ( grp_sign_picnic1_fu_390_ap_return );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_sign_picnic1_fu_390_ap_done );
    sensitive << ( icmp_ln269_fu_445_p2 );
    sensitive << ( icmp_ln269_1_fu_462_p2 );
    sensitive << ( icmp_ln269_2_fu_479_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_block_state10_on_subcall_done );

    ap_CS_fsm = "0000000001";
    grp_sign_picnic1_fu_390_ap_start_reg = SC_LOGIC_0;
    grp_serializeSignature_fu_419_ap_start_reg = SC_LOGIC_0;
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "picnic_sign_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, sk_data_address0, "(port)sk_data_address0");
    sc_trace(mVcdFile, sk_data_ce0, "(port)sk_data_ce0");
    sc_trace(mVcdFile, sk_data_q0, "(port)sk_data_q0");
    sc_trace(mVcdFile, sk_data_address1, "(port)sk_data_address1");
    sc_trace(mVcdFile, sk_data_ce1, "(port)sk_data_ce1");
    sc_trace(mVcdFile, sk_data_q1, "(port)sk_data_q1");
    sc_trace(mVcdFile, sk_pk_plaintext_address0, "(port)sk_pk_plaintext_address0");
    sc_trace(mVcdFile, sk_pk_plaintext_ce0, "(port)sk_pk_plaintext_ce0");
    sc_trace(mVcdFile, sk_pk_plaintext_q0, "(port)sk_pk_plaintext_q0");
    sc_trace(mVcdFile, sk_pk_plaintext_address1, "(port)sk_pk_plaintext_address1");
    sc_trace(mVcdFile, sk_pk_plaintext_ce1, "(port)sk_pk_plaintext_ce1");
    sc_trace(mVcdFile, sk_pk_plaintext_q1, "(port)sk_pk_plaintext_q1");
    sc_trace(mVcdFile, sk_pk_ciphertext_address0, "(port)sk_pk_ciphertext_address0");
    sc_trace(mVcdFile, sk_pk_ciphertext_ce0, "(port)sk_pk_ciphertext_ce0");
    sc_trace(mVcdFile, sk_pk_ciphertext_q0, "(port)sk_pk_ciphertext_q0");
    sc_trace(mVcdFile, sk_pk_ciphertext_address1, "(port)sk_pk_ciphertext_address1");
    sc_trace(mVcdFile, sk_pk_ciphertext_ce1, "(port)sk_pk_ciphertext_ce1");
    sc_trace(mVcdFile, sk_pk_ciphertext_q1, "(port)sk_pk_ciphertext_q1");
    sc_trace(mVcdFile, message_address0, "(port)message_address0");
    sc_trace(mVcdFile, message_ce0, "(port)message_ce0");
    sc_trace(mVcdFile, message_q0, "(port)message_q0");
    sc_trace(mVcdFile, message_len, "(port)message_len");
    sc_trace(mVcdFile, signature_address0, "(port)signature_address0");
    sc_trace(mVcdFile, signature_ce0, "(port)signature_ce0");
    sc_trace(mVcdFile, signature_we0, "(port)signature_we0");
    sc_trace(mVcdFile, signature_d0, "(port)signature_d0");
    sc_trace(mVcdFile, signature_offset, "(port)signature_offset");
    sc_trace(mVcdFile, viewOutputs_address0, "(port)viewOutputs_address0");
    sc_trace(mVcdFile, viewOutputs_ce0, "(port)viewOutputs_ce0");
    sc_trace(mVcdFile, viewOutputs_we0, "(port)viewOutputs_we0");
    sc_trace(mVcdFile, viewOutputs_d0, "(port)viewOutputs_d0");
    sc_trace(mVcdFile, viewOutputs_q0, "(port)viewOutputs_q0");
    sc_trace(mVcdFile, viewOutputs_address1, "(port)viewOutputs_address1");
    sc_trace(mVcdFile, viewOutputs_ce1, "(port)viewOutputs_ce1");
    sc_trace(mVcdFile, viewOutputs_q1, "(port)viewOutputs_q1");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln269_fu_434_p2, "add_ln269_fu_434_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln269_1_fu_451_p2, "add_ln269_1_fu_451_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln269_2_fu_468_p2, "add_ln269_2_fu_468_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_fu_485_p3, "tmp_fu_485_p3");
    sc_trace(mVcdFile, trunc_ln270_fu_500_p1, "trunc_ln270_fu_500_p1");
    sc_trace(mVcdFile, trunc_ln270_reg_662, "trunc_ln270_reg_662");
    sc_trace(mVcdFile, trunc_ln271_1_reg_673, "trunc_ln271_1_reg_673");
    sc_trace(mVcdFile, loop_fu_527_p2, "loop_fu_527_p2");
    sc_trace(mVcdFile, loop_reg_698, "loop_reg_698");
    sc_trace(mVcdFile, sk_pk_ciphertext_loa_reg_703, "sk_pk_ciphertext_loa_reg_703");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, sk_pk_ciphertext_loa_1_reg_708, "sk_pk_ciphertext_loa_1_reg_708");
    sc_trace(mVcdFile, sk_pk_plaintext_load_reg_723, "sk_pk_plaintext_load_reg_723");
    sc_trace(mVcdFile, sk_pk_plaintext_load_1_reg_728, "sk_pk_plaintext_load_1_reg_728");
    sc_trace(mVcdFile, sk_data_load_reg_743, "sk_data_load_reg_743");
    sc_trace(mVcdFile, sk_data_load_1_reg_748, "sk_data_load_1_reg_748");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_ap_return, "grp_sign_picnic1_fu_390_ap_return");
    sc_trace(mVcdFile, ret2_reg_763, "ret2_reg_763");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_ap_ready, "grp_sign_picnic1_fu_390_ap_ready");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_ap_done, "grp_sign_picnic1_fu_390_ap_done");
    sc_trace(mVcdFile, sig_0_proofs_seed1_address0, "sig_0_proofs_seed1_address0");
    sc_trace(mVcdFile, sig_0_proofs_seed1_ce0, "sig_0_proofs_seed1_ce0");
    sc_trace(mVcdFile, sig_0_proofs_seed1_we0, "sig_0_proofs_seed1_we0");
    sc_trace(mVcdFile, sig_0_proofs_seed1_q0, "sig_0_proofs_seed1_q0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_address0, "sig_0_proofs_seed2_address0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_ce0, "sig_0_proofs_seed2_ce0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_we0, "sig_0_proofs_seed2_we0");
    sc_trace(mVcdFile, sig_0_proofs_seed2_q0, "sig_0_proofs_seed2_q0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_address0, "sig_0_proofs_inputS_address0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_ce0, "sig_0_proofs_inputS_ce0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_we0, "sig_0_proofs_inputS_we0");
    sc_trace(mVcdFile, sig_0_proofs_inputS_q0, "sig_0_proofs_inputS_q0");
    sc_trace(mVcdFile, sig_0_proofs_commun_address0, "sig_0_proofs_commun_address0");
    sc_trace(mVcdFile, sig_0_proofs_commun_ce0, "sig_0_proofs_commun_ce0");
    sc_trace(mVcdFile, sig_0_proofs_commun_we0, "sig_0_proofs_commun_we0");
    sc_trace(mVcdFile, sig_0_proofs_commun_q0, "sig_0_proofs_commun_q0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_address0, "sig_0_proofs_view3C_address0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_ce0, "sig_0_proofs_view3C_ce0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_we0, "sig_0_proofs_view3C_we0");
    sc_trace(mVcdFile, sig_0_proofs_view3C_q0, "sig_0_proofs_view3C_q0");
    sc_trace(mVcdFile, sig_0_challengeBits_address0, "sig_0_challengeBits_address0");
    sc_trace(mVcdFile, sig_0_challengeBits_ce0, "sig_0_challengeBits_ce0");
    sc_trace(mVcdFile, sig_0_challengeBits_we0, "sig_0_challengeBits_we0");
    sc_trace(mVcdFile, sig_0_challengeBits_q0, "sig_0_challengeBits_q0");
    sc_trace(mVcdFile, sig_0_salt_address0, "sig_0_salt_address0");
    sc_trace(mVcdFile, sig_0_salt_ce0, "sig_0_salt_ce0");
    sc_trace(mVcdFile, sig_0_salt_we0, "sig_0_salt_we0");
    sc_trace(mVcdFile, sig_0_salt_q0, "sig_0_salt_q0");
    sc_trace(mVcdFile, temp_address0, "temp_address0");
    sc_trace(mVcdFile, temp_ce0, "temp_ce0");
    sc_trace(mVcdFile, temp_we0, "temp_we0");
    sc_trace(mVcdFile, temp_d0, "temp_d0");
    sc_trace(mVcdFile, temp_q0, "temp_q0");
    sc_trace(mVcdFile, temp2_address0, "temp2_address0");
    sc_trace(mVcdFile, temp2_ce0, "temp2_ce0");
    sc_trace(mVcdFile, temp2_we0, "temp2_we0");
    sc_trace(mVcdFile, temp2_d0, "temp2_d0");
    sc_trace(mVcdFile, temp2_q0, "temp2_q0");
    sc_trace(mVcdFile, temp3_address0, "temp3_address0");
    sc_trace(mVcdFile, temp3_ce0, "temp3_ce0");
    sc_trace(mVcdFile, temp3_we0, "temp3_we0");
    sc_trace(mVcdFile, temp3_d0, "temp3_d0");
    sc_trace(mVcdFile, temp3_q0, "temp3_q0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_ap_start, "grp_sign_picnic1_fu_390_ap_start");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_ap_idle, "grp_sign_picnic1_fu_390_ap_idle");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_privateKey_address0, "grp_sign_picnic1_fu_390_privateKey_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_privateKey_ce0, "grp_sign_picnic1_fu_390_privateKey_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_pubKey_address0, "grp_sign_picnic1_fu_390_pubKey_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_pubKey_ce0, "grp_sign_picnic1_fu_390_pubKey_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_plaintext_address0, "grp_sign_picnic1_fu_390_plaintext_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_plaintext_ce0, "grp_sign_picnic1_fu_390_plaintext_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_message_address0, "grp_sign_picnic1_fu_390_message_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_message_ce0, "grp_sign_picnic1_fu_390_message_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_seed1_address0, "grp_sign_picnic1_fu_390_sig_0_proofs_seed1_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_seed1_ce0, "grp_sign_picnic1_fu_390_sig_0_proofs_seed1_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_seed1_we0, "grp_sign_picnic1_fu_390_sig_0_proofs_seed1_we0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_seed1_d0, "grp_sign_picnic1_fu_390_sig_0_proofs_seed1_d0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_seed2_address0, "grp_sign_picnic1_fu_390_sig_0_proofs_seed2_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_seed2_ce0, "grp_sign_picnic1_fu_390_sig_0_proofs_seed2_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_seed2_we0, "grp_sign_picnic1_fu_390_sig_0_proofs_seed2_we0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_seed2_d0, "grp_sign_picnic1_fu_390_sig_0_proofs_seed2_d0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_inputS_address0, "grp_sign_picnic1_fu_390_sig_0_proofs_inputS_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_inputS_ce0, "grp_sign_picnic1_fu_390_sig_0_proofs_inputS_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_inputS_we0, "grp_sign_picnic1_fu_390_sig_0_proofs_inputS_we0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_inputS_d0, "grp_sign_picnic1_fu_390_sig_0_proofs_inputS_d0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_commun_address0, "grp_sign_picnic1_fu_390_sig_0_proofs_commun_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_commun_ce0, "grp_sign_picnic1_fu_390_sig_0_proofs_commun_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_commun_we0, "grp_sign_picnic1_fu_390_sig_0_proofs_commun_we0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_commun_d0, "grp_sign_picnic1_fu_390_sig_0_proofs_commun_d0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_view3C_address0, "grp_sign_picnic1_fu_390_sig_0_proofs_view3C_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_view3C_ce0, "grp_sign_picnic1_fu_390_sig_0_proofs_view3C_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_view3C_we0, "grp_sign_picnic1_fu_390_sig_0_proofs_view3C_we0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_proofs_view3C_d0, "grp_sign_picnic1_fu_390_sig_0_proofs_view3C_d0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_challengeBits_address0, "grp_sign_picnic1_fu_390_sig_0_challengeBits_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_challengeBits_ce0, "grp_sign_picnic1_fu_390_sig_0_challengeBits_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_challengeBits_we0, "grp_sign_picnic1_fu_390_sig_0_challengeBits_we0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_challengeBits_d0, "grp_sign_picnic1_fu_390_sig_0_challengeBits_d0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_salt_address0, "grp_sign_picnic1_fu_390_sig_0_salt_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_salt_ce0, "grp_sign_picnic1_fu_390_sig_0_salt_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_salt_we0, "grp_sign_picnic1_fu_390_sig_0_salt_we0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_sig_0_salt_d0, "grp_sign_picnic1_fu_390_sig_0_salt_d0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_viewOutputs_address0, "grp_sign_picnic1_fu_390_viewOutputs_address0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_viewOutputs_ce0, "grp_sign_picnic1_fu_390_viewOutputs_ce0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_viewOutputs_we0, "grp_sign_picnic1_fu_390_viewOutputs_we0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_viewOutputs_d0, "grp_sign_picnic1_fu_390_viewOutputs_d0");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_viewOutputs_address1, "grp_sign_picnic1_fu_390_viewOutputs_address1");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_viewOutputs_ce1, "grp_sign_picnic1_fu_390_viewOutputs_ce1");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_ap_start, "grp_serializeSignature_fu_419_ap_start");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_ap_done, "grp_serializeSignature_fu_419_ap_done");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_ap_idle, "grp_serializeSignature_fu_419_ap_idle");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_ap_ready, "grp_serializeSignature_fu_419_ap_ready");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_seed1_address0, "grp_serializeSignature_fu_419_sig_0_proofs_seed1_address0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_seed1_ce0, "grp_serializeSignature_fu_419_sig_0_proofs_seed1_ce0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_seed2_address0, "grp_serializeSignature_fu_419_sig_0_proofs_seed2_address0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_seed2_ce0, "grp_serializeSignature_fu_419_sig_0_proofs_seed2_ce0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_inputS_address0, "grp_serializeSignature_fu_419_sig_0_proofs_inputS_address0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_inputS_ce0, "grp_serializeSignature_fu_419_sig_0_proofs_inputS_ce0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_commun_address0, "grp_serializeSignature_fu_419_sig_0_proofs_commun_address0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_commun_ce0, "grp_serializeSignature_fu_419_sig_0_proofs_commun_ce0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_view3C_address0, "grp_serializeSignature_fu_419_sig_0_proofs_view3C_address0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_proofs_view3C_ce0, "grp_serializeSignature_fu_419_sig_0_proofs_view3C_ce0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_challengeBits_address0, "grp_serializeSignature_fu_419_sig_0_challengeBits_address0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_challengeBits_ce0, "grp_serializeSignature_fu_419_sig_0_challengeBits_ce0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_salt_address0, "grp_serializeSignature_fu_419_sig_0_salt_address0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sig_0_salt_ce0, "grp_serializeSignature_fu_419_sig_0_salt_ce0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sigBytes_address0, "grp_serializeSignature_fu_419_sigBytes_address0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sigBytes_ce0, "grp_serializeSignature_fu_419_sigBytes_ce0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sigBytes_we0, "grp_serializeSignature_fu_419_sigBytes_we0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_sigBytes_d0, "grp_serializeSignature_fu_419_sigBytes_d0");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_ap_return, "grp_serializeSignature_fu_419_ap_return");
    sc_trace(mVcdFile, phi_ln269_reg_323, "phi_ln269_reg_323");
    sc_trace(mVcdFile, icmp_ln269_fu_445_p2, "icmp_ln269_fu_445_p2");
    sc_trace(mVcdFile, phi_ln269_1_reg_334, "phi_ln269_1_reg_334");
    sc_trace(mVcdFile, icmp_ln269_1_fu_462_p2, "icmp_ln269_1_fu_462_p2");
    sc_trace(mVcdFile, phi_ln269_2_reg_345, "phi_ln269_2_reg_345");
    sc_trace(mVcdFile, icmp_ln269_2_fu_479_p2, "icmp_ln269_2_fu_479_p2");
    sc_trace(mVcdFile, loop_0_reg_356, "loop_0_reg_356");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_phi_mux_signature_len_write_s_phi_fu_371_p4, "ap_phi_mux_signature_len_write_s_phi_fu_371_p4");
    sc_trace(mVcdFile, signature_len_write_s_reg_367, "signature_len_write_s_reg_367");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_block_state10_on_subcall_done, "ap_block_state10_on_subcall_done");
    sc_trace(mVcdFile, ap_phi_mux_p_0_phi_fu_382_p4, "ap_phi_mux_p_0_phi_fu_382_p4");
    sc_trace(mVcdFile, p_0_reg_378, "p_0_reg_378");
    sc_trace(mVcdFile, grp_sign_picnic1_fu_390_ap_start_reg, "grp_sign_picnic1_fu_390_ap_start_reg");
    sc_trace(mVcdFile, grp_serializeSignature_fu_419_ap_start_reg, "grp_serializeSignature_fu_419_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, zext_ln269_fu_440_p1, "zext_ln269_fu_440_p1");
    sc_trace(mVcdFile, zext_ln269_1_fu_457_p1, "zext_ln269_1_fu_457_p1");
    sc_trace(mVcdFile, zext_ln269_2_fu_474_p1, "zext_ln269_2_fu_474_p1");
    sc_trace(mVcdFile, zext_ln271_fu_493_p1, "zext_ln271_fu_493_p1");
    sc_trace(mVcdFile, zext_ln271_1_fu_510_p1, "zext_ln271_1_fu_510_p1");
    sc_trace(mVcdFile, zext_ln271_2_fu_538_p1, "zext_ln271_2_fu_538_p1");
    sc_trace(mVcdFile, zext_ln271_3_fu_550_p1, "zext_ln271_3_fu_550_p1");
    sc_trace(mVcdFile, zext_ln271_4_fu_568_p1, "zext_ln271_4_fu_568_p1");
    sc_trace(mVcdFile, or_ln271_5_fu_557_p5, "or_ln271_5_fu_557_p5");
    sc_trace(mVcdFile, or_ln272_2_fu_574_p5, "or_ln272_2_fu_574_p5");
    sc_trace(mVcdFile, or_ln273_2_fu_585_p5, "or_ln273_2_fu_585_p5");
    sc_trace(mVcdFile, or_ln271_fu_504_p2, "or_ln271_fu_504_p2");
    sc_trace(mVcdFile, or_ln271_1_fu_533_p2, "or_ln271_1_fu_533_p2");
    sc_trace(mVcdFile, or_ln271_2_fu_545_p2, "or_ln271_2_fu_545_p2");
    sc_trace(mVcdFile, select_ln249_fu_600_p3, "select_ln249_fu_600_p3");
    sc_trace(mVcdFile, zext_ln249_fu_596_p1, "zext_ln249_fu_596_p1");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

picnic_sign::~picnic_sign() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete sig_0_proofs_seed1_U;
    delete sig_0_proofs_seed2_U;
    delete sig_0_proofs_inputS_U;
    delete sig_0_proofs_commun_U;
    delete sig_0_proofs_view3C_U;
    delete sig_0_challengeBits_U;
    delete sig_0_salt_U;
    delete temp_U;
    delete temp2_U;
    delete temp3_U;
    delete grp_sign_picnic1_fu_390;
    delete grp_serializeSignature_fu_419;
}

void picnic_sign::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
             esl_seteq<1,1,1>(ap_block_state10_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_0_preg = select_ln249_fu_600_p3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv64_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
             esl_seteq<1,1,1>(ap_block_state10_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_1_preg = zext_ln249_fu_596_p1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_serializeSignature_fu_419_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            grp_serializeSignature_fu_419_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_serializeSignature_fu_419_ap_ready.read())) {
            grp_serializeSignature_fu_419_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sign_picnic1_fu_390_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(tmp_fu_485_p3.read(), ap_const_lv1_1))) {
            grp_sign_picnic1_fu_390_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sign_picnic1_fu_390_ap_ready.read())) {
            grp_sign_picnic1_fu_390_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln269_2_fu_479_p2.read()))) {
        loop_0_reg_356 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        loop_0_reg_356 = loop_reg_698.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_on_subcall_done.read(), ap_const_boolean_0))) {
        p_0_reg_378 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_sign_picnic1_fu_390_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(grp_sign_picnic1_fu_390_ap_return.read(), ap_const_lv1_1))) {
        p_0_reg_378 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln269_fu_445_p2.read(), ap_const_lv1_1))) {
        phi_ln269_1_reg_334 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln269_1_fu_462_p2.read()))) {
        phi_ln269_1_reg_334 = add_ln269_1_fu_451_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln269_1_fu_462_p2.read(), ap_const_lv1_1))) {
        phi_ln269_2_reg_345 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln269_2_fu_479_p2.read()))) {
        phi_ln269_2_reg_345 = add_ln269_2_fu_468_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln269_fu_445_p2.read()))) {
        phi_ln269_reg_323 = add_ln269_fu_434_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln269_reg_323 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_on_subcall_done.read(), ap_const_boolean_0))) {
        signature_len_write_s_reg_367 = grp_serializeSignature_fu_419_ap_return.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_sign_picnic1_fu_390_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(grp_sign_picnic1_fu_390_ap_return.read(), ap_const_lv1_1))) {
        signature_len_write_s_reg_367 = ap_const_lv16_84F4;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_fu_485_p3.read(), ap_const_lv1_0))) {
        loop_reg_698 = loop_fu_527_p2.read();
        trunc_ln270_reg_662 = trunc_ln270_fu_500_p1.read();
        trunc_ln271_1_reg_673 = loop_0_reg_356.read().range(4, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_sign_picnic1_fu_390_ap_done.read(), ap_const_logic_1))) {
        ret2_reg_763 = grp_sign_picnic1_fu_390_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sk_data_load_1_reg_748 = sk_data_q1.read();
        sk_data_load_reg_743 = sk_data_q0.read();
        sk_pk_ciphertext_loa_1_reg_708 = sk_pk_ciphertext_q1.read();
        sk_pk_ciphertext_loa_reg_703 = sk_pk_ciphertext_q0.read();
        sk_pk_plaintext_load_1_reg_728 = sk_pk_plaintext_q1.read();
        sk_pk_plaintext_load_reg_723 = sk_pk_plaintext_q0.read();
    }
}

void picnic_sign::thread_add_ln269_1_fu_451_p2() {
    add_ln269_1_fu_451_p2 = (!phi_ln269_1_reg_334.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln269_1_reg_334.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void picnic_sign::thread_add_ln269_2_fu_468_p2() {
    add_ln269_2_fu_468_p2 = (!phi_ln269_2_reg_345.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln269_2_reg_345.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void picnic_sign::thread_add_ln269_fu_434_p2() {
    add_ln269_fu_434_p2 = (!phi_ln269_reg_323.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln269_reg_323.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void picnic_sign::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void picnic_sign::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void picnic_sign::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void picnic_sign::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void picnic_sign::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void picnic_sign::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void picnic_sign::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void picnic_sign::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void picnic_sign::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void picnic_sign::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void picnic_sign::thread_ap_block_state10_on_subcall_done() {
    ap_block_state10_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_serializeSignature_fu_419_ap_done.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()));
}

void picnic_sign::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_block_state10_on_subcall_done.read(), ap_const_boolean_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void picnic_sign::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void picnic_sign::thread_ap_phi_mux_p_0_phi_fu_382_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        ap_phi_mux_p_0_phi_fu_382_p4 = ap_const_lv1_0;
    } else {
        ap_phi_mux_p_0_phi_fu_382_p4 = p_0_reg_378.read();
    }
}

void picnic_sign::thread_ap_phi_mux_signature_len_write_s_phi_fu_371_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        ap_phi_mux_signature_len_write_s_phi_fu_371_p4 = grp_serializeSignature_fu_419_ap_return.read();
    } else {
        ap_phi_mux_signature_len_write_s_phi_fu_371_p4 = signature_len_write_s_reg_367.read();
    }
}

void picnic_sign::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void picnic_sign::thread_ap_return_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_0 = select_ln249_fu_600_p3.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void picnic_sign::thread_ap_return_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_1 = zext_ln249_fu_596_p1.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void picnic_sign::thread_grp_serializeSignature_fu_419_ap_start() {
    grp_serializeSignature_fu_419_ap_start = grp_serializeSignature_fu_419_ap_start_reg.read();
}

void picnic_sign::thread_grp_sign_picnic1_fu_390_ap_start() {
    grp_sign_picnic1_fu_390_ap_start = grp_sign_picnic1_fu_390_ap_start_reg.read();
}

void picnic_sign::thread_icmp_ln269_1_fu_462_p2() {
    icmp_ln269_1_fu_462_p2 = (!phi_ln269_1_reg_334.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln269_1_reg_334.read() == ap_const_lv3_7);
}

void picnic_sign::thread_icmp_ln269_2_fu_479_p2() {
    icmp_ln269_2_fu_479_p2 = (!phi_ln269_2_reg_345.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln269_2_reg_345.read() == ap_const_lv3_7);
}

void picnic_sign::thread_icmp_ln269_fu_445_p2() {
    icmp_ln269_fu_445_p2 = (!phi_ln269_reg_323.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln269_reg_323.read() == ap_const_lv3_7);
}

void picnic_sign::thread_loop_fu_527_p2() {
    loop_fu_527_p2 = (!ap_const_lv6_4.is_01() || !loop_0_reg_356.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_4) + sc_biguint<6>(loop_0_reg_356.read()));
}

void picnic_sign::thread_message_address0() {
    message_address0 = grp_sign_picnic1_fu_390_message_address0.read();
}

void picnic_sign::thread_message_ce0() {
    message_ce0 = grp_sign_picnic1_fu_390_message_ce0.read();
}

void picnic_sign::thread_or_ln271_1_fu_533_p2() {
    or_ln271_1_fu_533_p2 = (trunc_ln270_reg_662.read() | ap_const_lv5_2);
}

void picnic_sign::thread_or_ln271_2_fu_545_p2() {
    or_ln271_2_fu_545_p2 = (trunc_ln270_reg_662.read() | ap_const_lv5_3);
}

void picnic_sign::thread_or_ln271_5_fu_557_p5() {
    or_ln271_5_fu_557_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(sk_pk_ciphertext_q1.read(), sk_pk_ciphertext_q0.read()), sk_pk_ciphertext_loa_1_reg_708.read()), sk_pk_ciphertext_loa_reg_703.read());
}

void picnic_sign::thread_or_ln271_fu_504_p2() {
    or_ln271_fu_504_p2 = (trunc_ln270_fu_500_p1.read() | ap_const_lv5_1);
}

void picnic_sign::thread_or_ln272_2_fu_574_p5() {
    or_ln272_2_fu_574_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(sk_pk_plaintext_q1.read(), sk_pk_plaintext_q0.read()), sk_pk_plaintext_load_1_reg_728.read()), sk_pk_plaintext_load_reg_723.read());
}

void picnic_sign::thread_or_ln273_2_fu_585_p5() {
    or_ln273_2_fu_585_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(sk_data_q1.read(), sk_data_q0.read()), sk_data_load_1_reg_748.read()), sk_data_load_reg_743.read());
}

void picnic_sign::thread_select_ln249_fu_600_p3() {
    select_ln249_fu_600_p3 = (!ap_phi_mux_p_0_phi_fu_382_p4.read()[0].is_01())? sc_lv<32>(): ((ap_phi_mux_p_0_phi_fu_382_p4.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void picnic_sign::thread_sig_0_challengeBits_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_challengeBits_address0 = grp_serializeSignature_fu_419_sig_0_challengeBits_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_challengeBits_address0 = grp_sign_picnic1_fu_390_sig_0_challengeBits_address0.read();
    } else {
        sig_0_challengeBits_address0 = "XXXXXX";
    }
}

void picnic_sign::thread_sig_0_challengeBits_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_challengeBits_ce0 = grp_serializeSignature_fu_419_sig_0_challengeBits_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_challengeBits_ce0 = grp_sign_picnic1_fu_390_sig_0_challengeBits_ce0.read();
    } else {
        sig_0_challengeBits_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_challengeBits_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_challengeBits_we0 = grp_sign_picnic1_fu_390_sig_0_challengeBits_we0.read();
    } else {
        sig_0_challengeBits_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_commun_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_commun_address0 = grp_serializeSignature_fu_419_sig_0_proofs_commun_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_commun_address0 = grp_sign_picnic1_fu_390_sig_0_proofs_commun_address0.read();
    } else {
        sig_0_proofs_commun_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void picnic_sign::thread_sig_0_proofs_commun_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_commun_ce0 = grp_serializeSignature_fu_419_sig_0_proofs_commun_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_commun_ce0 = grp_sign_picnic1_fu_390_sig_0_proofs_commun_ce0.read();
    } else {
        sig_0_proofs_commun_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_commun_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_commun_we0 = grp_sign_picnic1_fu_390_sig_0_proofs_commun_we0.read();
    } else {
        sig_0_proofs_commun_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_inputS_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_inputS_address0 = grp_serializeSignature_fu_419_sig_0_proofs_inputS_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_inputS_address0 = grp_sign_picnic1_fu_390_sig_0_proofs_inputS_address0.read();
    } else {
        sig_0_proofs_inputS_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void picnic_sign::thread_sig_0_proofs_inputS_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_inputS_ce0 = grp_serializeSignature_fu_419_sig_0_proofs_inputS_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_inputS_ce0 = grp_sign_picnic1_fu_390_sig_0_proofs_inputS_ce0.read();
    } else {
        sig_0_proofs_inputS_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_inputS_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_inputS_we0 = grp_sign_picnic1_fu_390_sig_0_proofs_inputS_we0.read();
    } else {
        sig_0_proofs_inputS_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_seed1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_seed1_address0 = grp_serializeSignature_fu_419_sig_0_proofs_seed1_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed1_address0 = grp_sign_picnic1_fu_390_sig_0_proofs_seed1_address0.read();
    } else {
        sig_0_proofs_seed1_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void picnic_sign::thread_sig_0_proofs_seed1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_seed1_ce0 = grp_serializeSignature_fu_419_sig_0_proofs_seed1_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed1_ce0 = grp_sign_picnic1_fu_390_sig_0_proofs_seed1_ce0.read();
    } else {
        sig_0_proofs_seed1_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_seed1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed1_we0 = grp_sign_picnic1_fu_390_sig_0_proofs_seed1_we0.read();
    } else {
        sig_0_proofs_seed1_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_seed2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_seed2_address0 = grp_serializeSignature_fu_419_sig_0_proofs_seed2_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed2_address0 = grp_sign_picnic1_fu_390_sig_0_proofs_seed2_address0.read();
    } else {
        sig_0_proofs_seed2_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void picnic_sign::thread_sig_0_proofs_seed2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_seed2_ce0 = grp_serializeSignature_fu_419_sig_0_proofs_seed2_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed2_ce0 = grp_sign_picnic1_fu_390_sig_0_proofs_seed2_ce0.read();
    } else {
        sig_0_proofs_seed2_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_seed2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_seed2_we0 = grp_sign_picnic1_fu_390_sig_0_proofs_seed2_we0.read();
    } else {
        sig_0_proofs_seed2_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_view3C_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_view3C_address0 = grp_serializeSignature_fu_419_sig_0_proofs_view3C_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_view3C_address0 = grp_sign_picnic1_fu_390_sig_0_proofs_view3C_address0.read();
    } else {
        sig_0_proofs_view3C_address0 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
    }
}

void picnic_sign::thread_sig_0_proofs_view3C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_proofs_view3C_ce0 = grp_serializeSignature_fu_419_sig_0_proofs_view3C_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_view3C_ce0 = grp_sign_picnic1_fu_390_sig_0_proofs_view3C_ce0.read();
    } else {
        sig_0_proofs_view3C_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_proofs_view3C_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_proofs_view3C_we0 = grp_sign_picnic1_fu_390_sig_0_proofs_view3C_we0.read();
    } else {
        sig_0_proofs_view3C_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_salt_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_salt_address0 = grp_serializeSignature_fu_419_sig_0_salt_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_salt_address0 = grp_sign_picnic1_fu_390_sig_0_salt_address0.read();
    } else {
        sig_0_salt_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_sign::thread_sig_0_salt_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ret2_reg_763.read()))) {
        sig_0_salt_ce0 = grp_serializeSignature_fu_419_sig_0_salt_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_salt_ce0 = grp_sign_picnic1_fu_390_sig_0_salt_ce0.read();
    } else {
        sig_0_salt_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sig_0_salt_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sig_0_salt_we0 = grp_sign_picnic1_fu_390_sig_0_salt_we0.read();
    } else {
        sig_0_salt_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_signature_address0() {
    signature_address0 = grp_serializeSignature_fu_419_sigBytes_address0.read();
}

void picnic_sign::thread_signature_ce0() {
    signature_ce0 = grp_serializeSignature_fu_419_sigBytes_ce0.read();
}

void picnic_sign::thread_signature_d0() {
    signature_d0 = grp_serializeSignature_fu_419_sigBytes_d0.read();
}

void picnic_sign::thread_signature_we0() {
    signature_we0 = grp_serializeSignature_fu_419_sigBytes_we0.read();
}

void picnic_sign::thread_sk_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sk_data_address0 =  (sc_lv<5>) (zext_ln271_2_fu_538_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sk_data_address0 =  (sc_lv<5>) (zext_ln271_fu_493_p1.read());
    } else {
        sk_data_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_sign::thread_sk_data_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sk_data_address1 =  (sc_lv<5>) (zext_ln271_3_fu_550_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sk_data_address1 =  (sc_lv<5>) (zext_ln271_1_fu_510_p1.read());
    } else {
        sk_data_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_sign::thread_sk_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sk_data_ce0 = ap_const_logic_1;
    } else {
        sk_data_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sk_data_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sk_data_ce1 = ap_const_logic_1;
    } else {
        sk_data_ce1 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sk_pk_ciphertext_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sk_pk_ciphertext_address0 =  (sc_lv<5>) (zext_ln271_2_fu_538_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sk_pk_ciphertext_address0 =  (sc_lv<5>) (zext_ln271_fu_493_p1.read());
    } else {
        sk_pk_ciphertext_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_sign::thread_sk_pk_ciphertext_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sk_pk_ciphertext_address1 =  (sc_lv<5>) (zext_ln271_3_fu_550_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sk_pk_ciphertext_address1 =  (sc_lv<5>) (zext_ln271_1_fu_510_p1.read());
    } else {
        sk_pk_ciphertext_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_sign::thread_sk_pk_ciphertext_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sk_pk_ciphertext_ce0 = ap_const_logic_1;
    } else {
        sk_pk_ciphertext_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sk_pk_ciphertext_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sk_pk_ciphertext_ce1 = ap_const_logic_1;
    } else {
        sk_pk_ciphertext_ce1 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sk_pk_plaintext_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sk_pk_plaintext_address0 =  (sc_lv<5>) (zext_ln271_2_fu_538_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sk_pk_plaintext_address0 =  (sc_lv<5>) (zext_ln271_fu_493_p1.read());
    } else {
        sk_pk_plaintext_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_sign::thread_sk_pk_plaintext_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sk_pk_plaintext_address1 =  (sc_lv<5>) (zext_ln271_3_fu_550_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sk_pk_plaintext_address1 =  (sc_lv<5>) (zext_ln271_1_fu_510_p1.read());
    } else {
        sk_pk_plaintext_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void picnic_sign::thread_sk_pk_plaintext_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sk_pk_plaintext_ce0 = ap_const_logic_1;
    } else {
        sk_pk_plaintext_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_sk_pk_plaintext_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        sk_pk_plaintext_ce1 = ap_const_logic_1;
    } else {
        sk_pk_plaintext_ce1 = ap_const_logic_0;
    }
}

void picnic_sign::thread_temp2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp2_address0 =  (sc_lv<3>) (zext_ln271_4_fu_568_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        temp2_address0 =  (sc_lv<3>) (zext_ln269_1_fu_457_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp2_address0 = grp_sign_picnic1_fu_390_plaintext_address0.read();
    } else {
        temp2_address0 =  (sc_lv<3>) ("XXX");
    }
}

void picnic_sign::thread_temp2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp2_ce0 = grp_sign_picnic1_fu_390_plaintext_ce0.read();
    } else {
        temp2_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_temp2_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp2_d0 = or_ln272_2_fu_574_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        temp2_d0 = ap_const_lv32_0;
    } else {
        temp2_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void picnic_sign::thread_temp2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp2_we0 = ap_const_logic_1;
    } else {
        temp2_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_temp3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp3_address0 =  (sc_lv<3>) (zext_ln271_4_fu_568_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        temp3_address0 =  (sc_lv<3>) (zext_ln269_2_fu_474_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp3_address0 = grp_sign_picnic1_fu_390_privateKey_address0.read();
    } else {
        temp3_address0 =  (sc_lv<3>) ("XXX");
    }
}

void picnic_sign::thread_temp3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp3_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp3_ce0 = grp_sign_picnic1_fu_390_privateKey_ce0.read();
    } else {
        temp3_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_temp3_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp3_d0 = or_ln273_2_fu_585_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        temp3_d0 = ap_const_lv32_0;
    } else {
        temp3_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void picnic_sign::thread_temp3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp3_we0 = ap_const_logic_1;
    } else {
        temp3_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_temp_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp_address0 =  (sc_lv<3>) (zext_ln271_4_fu_568_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        temp_address0 =  (sc_lv<3>) (zext_ln269_fu_440_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp_address0 = grp_sign_picnic1_fu_390_pubKey_address0.read();
    } else {
        temp_address0 =  (sc_lv<3>) ("XXX");
    }
}

void picnic_sign::thread_temp_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        temp_ce0 = grp_sign_picnic1_fu_390_pubKey_ce0.read();
    } else {
        temp_ce0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_temp_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp_d0 = or_ln271_5_fu_557_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        temp_d0 = ap_const_lv32_0;
    } else {
        temp_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void picnic_sign::thread_temp_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        temp_we0 = ap_const_logic_1;
    } else {
        temp_we0 = ap_const_logic_0;
    }
}

void picnic_sign::thread_tmp_fu_485_p3() {
    tmp_fu_485_p3 = loop_0_reg_356.read().range(5, 5);
}

void picnic_sign::thread_trunc_ln270_fu_500_p1() {
    trunc_ln270_fu_500_p1 = loop_0_reg_356.read().range(5-1, 0);
}

void picnic_sign::thread_viewOutputs_address0() {
    viewOutputs_address0 = grp_sign_picnic1_fu_390_viewOutputs_address0.read();
}

void picnic_sign::thread_viewOutputs_address1() {
    viewOutputs_address1 = grp_sign_picnic1_fu_390_viewOutputs_address1.read();
}

void picnic_sign::thread_viewOutputs_ce0() {
    viewOutputs_ce0 = grp_sign_picnic1_fu_390_viewOutputs_ce0.read();
}

void picnic_sign::thread_viewOutputs_ce1() {
    viewOutputs_ce1 = grp_sign_picnic1_fu_390_viewOutputs_ce1.read();
}

void picnic_sign::thread_viewOutputs_d0() {
    viewOutputs_d0 = grp_sign_picnic1_fu_390_viewOutputs_d0.read();
}

void picnic_sign::thread_viewOutputs_we0() {
    viewOutputs_we0 = grp_sign_picnic1_fu_390_viewOutputs_we0.read();
}

void picnic_sign::thread_zext_ln249_fu_596_p1() {
    zext_ln249_fu_596_p1 = esl_zext<64,16>(ap_phi_mux_signature_len_write_s_phi_fu_371_p4.read());
}

void picnic_sign::thread_zext_ln269_1_fu_457_p1() {
    zext_ln269_1_fu_457_p1 = esl_zext<64,3>(phi_ln269_1_reg_334.read());
}

void picnic_sign::thread_zext_ln269_2_fu_474_p1() {
    zext_ln269_2_fu_474_p1 = esl_zext<64,3>(phi_ln269_2_reg_345.read());
}

void picnic_sign::thread_zext_ln269_fu_440_p1() {
    zext_ln269_fu_440_p1 = esl_zext<64,3>(phi_ln269_reg_323.read());
}

void picnic_sign::thread_zext_ln271_1_fu_510_p1() {
    zext_ln271_1_fu_510_p1 = esl_zext<64,5>(or_ln271_fu_504_p2.read());
}

void picnic_sign::thread_zext_ln271_2_fu_538_p1() {
    zext_ln271_2_fu_538_p1 = esl_zext<64,5>(or_ln271_1_fu_533_p2.read());
}

void picnic_sign::thread_zext_ln271_3_fu_550_p1() {
    zext_ln271_3_fu_550_p1 = esl_zext<64,5>(or_ln271_2_fu_545_p2.read());
}

void picnic_sign::thread_zext_ln271_4_fu_568_p1() {
    zext_ln271_4_fu_568_p1 = esl_zext<64,3>(trunc_ln271_1_reg_673.read());
}

void picnic_sign::thread_zext_ln271_fu_493_p1() {
    zext_ln271_fu_493_p1 = esl_zext<64,6>(loop_0_reg_356.read());
}

void picnic_sign::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln269_fu_445_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln269_1_fu_462_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln269_2_fu_479_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_fu_485_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_sign_picnic1_fu_390_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(grp_sign_picnic1_fu_390_ap_return.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_sign_picnic1_fu_390_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_sign_picnic1_fu_390_ap_return.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_block_state10_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

