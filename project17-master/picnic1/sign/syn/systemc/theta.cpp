// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "theta.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic theta::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic theta::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> theta::ap_ST_fsm_state1 = "1";
const sc_lv<10> theta::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> theta::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> theta::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> theta::ap_ST_fsm_state6 = "10000";
const sc_lv<10> theta::ap_ST_fsm_state7 = "100000";
const sc_lv<10> theta::ap_ST_fsm_state8 = "1000000";
const sc_lv<10> theta::ap_ST_fsm_pp1_stage0 = "10000000";
const sc_lv<10> theta::ap_ST_fsm_pp1_stage1 = "100000000";
const sc_lv<10> theta::ap_ST_fsm_state12 = "1000000000";
const bool theta::ap_const_boolean_1 = true;
const sc_lv<32> theta::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> theta::ap_const_lv32_1 = "1";
const bool theta::ap_const_boolean_0 = false;
const sc_lv<1> theta::ap_const_lv1_0 = "0";
const sc_lv<32> theta::ap_const_lv32_2 = "10";
const sc_lv<32> theta::ap_const_lv32_3 = "11";
const sc_lv<32> theta::ap_const_lv32_5 = "101";
const sc_lv<32> theta::ap_const_lv32_7 = "111";
const sc_lv<32> theta::ap_const_lv32_8 = "1000";
const sc_lv<1> theta::ap_const_lv1_1 = "1";
const sc_lv<3> theta::ap_const_lv3_0 = "000";
const sc_lv<32> theta::ap_const_lv32_6 = "110";
const sc_lv<32> theta::ap_const_lv32_4 = "100";
const sc_lv<5> theta::ap_const_lv5_0 = "00000";
const sc_lv<3> theta::ap_const_lv3_5 = "101";
const sc_lv<3> theta::ap_const_lv3_1 = "1";
const sc_lv<4> theta::ap_const_lv4_5 = "101";
const sc_lv<4> theta::ap_const_lv4_A = "1010";
const sc_lv<5> theta::ap_const_lv5_F = "1111";
const sc_lv<5> theta::ap_const_lv5_14 = "10100";
const sc_lv<3> theta::ap_const_lv3_4 = "100";
const sc_lv<4> theta::ap_const_lv4_4 = "100";
const sc_lv<3> theta::ap_const_lv3_7 = "111";
const sc_lv<32> theta::ap_const_lv32_3F = "111111";
const sc_lv<5> theta::ap_const_lv5_19 = "11001";
const sc_lv<5> theta::ap_const_lv5_1 = "1";
const sc_lv<3> theta::ap_const_lv3_3 = "11";
const sc_lv<2> theta::ap_const_lv2_0 = "00";
const sc_lv<32> theta::ap_const_lv32_9 = "1001";

theta::theta(sc_module_name name) : sc_module(name), mVcdFile(0) {
    C_U = new theta_C("C_U");
    C_U->clk(ap_clk);
    C_U->reset(ap_rst);
    C_U->address0(C_address0);
    C_U->ce0(C_ce0);
    C_U->we0(C_we0);
    C_U->d0(C_d0);
    C_U->q0(C_q0);
    C_U->address1(C_address1);
    C_U->ce1(C_ce1);
    C_U->q1(C_q1);
    D_U = new theta_D("D_U");
    D_U->clk(ap_clk);
    D_U->reset(ap_rst);
    D_U->address0(D_address0);
    D_U->ce0(D_ce0);
    D_U->we0(D_we0);
    D_U->d0(D_d0);
    D_U->q0(D_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln337_fu_254_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln339_2_fu_283_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln339_4_fu_303_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln345_1_fu_548_p1 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( A_addr_5_reg_688 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln339_1_fu_273_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln339_3_fu_293_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_A_d1);
    sensitive << ( A_q0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( D_load_reg_683 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_A_we1);
    sensitive << ( icmp_ln343_reg_653 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln337_reg_573 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln342_fu_365_p1 );

    SC_METHOD(thread_C_address1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln342_1_fu_400_p1 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_C_ce1);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_C_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( xor_ln339_2_fu_317_p2 );
    sensitive << ( xor_ln339_fu_308_p2 );

    SC_METHOD(thread_C_we0);
    sensitive << ( icmp_ln336_reg_564 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_D_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln342_2_fu_432_p1 );
    sensitive << ( zext_ln345_fu_477_p1 );

    SC_METHOD(thread_D_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_D_d0);
    sensitive << ( C_q1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( or_ln_fu_417_p3 );

    SC_METHOD(thread_D_we0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_add_ln339_1_fu_278_p2);
    sensitive << ( zext_ln339_5_reg_584 );

    SC_METHOD(thread_add_ln339_2_fu_288_p2);
    sensitive << ( zext_ln339_reg_578 );

    SC_METHOD(thread_add_ln339_3_fu_298_p2);
    sensitive << ( zext_ln339_reg_578 );

    SC_METHOD(thread_add_ln339_fu_267_p2);
    sensitive << ( zext_ln339_5_fu_263_p1 );

    SC_METHOD(thread_add_ln342_1_fu_370_p2);
    sensitive << ( zext_ln341_fu_329_p1 );

    SC_METHOD(thread_add_ln342_2_fu_382_p2);
    sensitive << ( x_1_reg_197 );

    SC_METHOD(thread_add_ln343_fu_443_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_213_p4 );

    SC_METHOD(thread_add_ln345_1_fu_532_p2);
    sensitive << ( zext_ln345_2_fu_499_p1 );
    sensitive << ( zext_ln345_3_fu_520_p1 );

    SC_METHOD(thread_add_ln345_2_fu_487_p2);
    sensitive << ( select_ln345_1_reg_670 );

    SC_METHOD(thread_add_ln345_3_fu_508_p2);
    sensitive << ( select_ln345_reg_662 );

    SC_METHOD(thread_add_ln345_fu_542_p2);
    sensitive << ( shl_ln_fu_524_p3 );
    sensitive << ( zext_ln345_4_fu_538_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state11_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln336_fu_242_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state9);
    sensitive << ( icmp_ln343_fu_437_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_213_p4);
    sensitive << ( indvar_flatten_reg_209 );
    sensitive << ( icmp_ln343_reg_653 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( add_ln343_reg_657 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_x_0_phi_fu_190_p4);
    sensitive << ( x_0_reg_186 );
    sensitive << ( icmp_ln336_reg_564 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( x_3_reg_568 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_x_2_phi_fu_224_p4);
    sensitive << ( x_2_reg_220 );
    sensitive << ( icmp_ln343_reg_653 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( select_ln345_1_reg_670 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_y_1_phi_fu_235_p4);
    sensitive << ( y_1_reg_231 );
    sensitive << ( icmp_ln343_reg_653 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( y_reg_694 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_icmp_ln336_fu_242_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_x_0_phi_fu_190_p4 );

    SC_METHOD(thread_icmp_ln341_fu_333_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( x_1_reg_197 );

    SC_METHOD(thread_icmp_ln342_1_fu_376_p2);
    sensitive << ( icmp_ln341_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( add_ln342_1_fu_370_p2 );

    SC_METHOD(thread_icmp_ln342_fu_345_p2);
    sensitive << ( icmp_ln341_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( x_fu_339_p2 );

    SC_METHOD(thread_icmp_ln343_fu_437_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_213_p4 );

    SC_METHOD(thread_icmp_ln344_fu_455_p2);
    sensitive << ( icmp_ln343_fu_437_p2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_y_1_phi_fu_235_p4 );

    SC_METHOD(thread_icmp_ln345_1_fu_503_p2);
    sensitive << ( icmp_ln343_reg_653 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( select_ln345_reg_662 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_icmp_ln345_fu_482_p2);
    sensitive << ( icmp_ln343_reg_653 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( select_ln345_1_reg_670 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_or_ln_fu_417_p3);
    sensitive << ( trunc_ln342_fu_405_p1 );
    sensitive << ( tmp_2_fu_409_p3 );

    SC_METHOD(thread_select_ln342_1_fu_392_p3);
    sensitive << ( add_ln342_1_fu_370_p2 );
    sensitive << ( icmp_ln342_1_fu_376_p2 );
    sensitive << ( sext_ln342_fu_388_p1 );

    SC_METHOD(thread_select_ln342_fu_357_p3);
    sensitive << ( x_fu_339_p2 );
    sensitive << ( icmp_ln342_fu_345_p2 );
    sensitive << ( xor_ln342_1_fu_351_p2 );

    SC_METHOD(thread_select_ln345_1_fu_469_p3);
    sensitive << ( ap_phi_mux_x_2_phi_fu_224_p4 );
    sensitive << ( icmp_ln344_fu_455_p2 );
    sensitive << ( x_5_fu_449_p2 );

    SC_METHOD(thread_select_ln345_2_fu_492_p3);
    sensitive << ( select_ln345_1_reg_670 );
    sensitive << ( icmp_ln345_fu_482_p2 );
    sensitive << ( add_ln345_2_fu_487_p2 );

    SC_METHOD(thread_select_ln345_3_fu_513_p3);
    sensitive << ( select_ln345_reg_662 );
    sensitive << ( icmp_ln345_1_fu_503_p2 );
    sensitive << ( add_ln345_3_fu_508_p2 );

    SC_METHOD(thread_select_ln345_fu_461_p3);
    sensitive << ( ap_phi_mux_y_1_phi_fu_235_p4 );
    sensitive << ( icmp_ln344_fu_455_p2 );

    SC_METHOD(thread_sext_ln342_fu_388_p1);
    sensitive << ( add_ln342_2_fu_382_p2 );

    SC_METHOD(thread_shl_ln_fu_524_p3);
    sensitive << ( select_ln345_3_fu_513_p3 );

    SC_METHOD(thread_tmp_2_fu_409_p3);
    sensitive << ( C_q0 );

    SC_METHOD(thread_trunc_ln342_fu_405_p1);
    sensitive << ( C_q0 );

    SC_METHOD(thread_x_3_fu_248_p2);
    sensitive << ( ap_phi_mux_x_0_phi_fu_190_p4 );

    SC_METHOD(thread_x_5_fu_449_p2);
    sensitive << ( ap_phi_mux_x_2_phi_fu_224_p4 );

    SC_METHOD(thread_x_fu_339_p2);
    sensitive << ( x_1_reg_197 );

    SC_METHOD(thread_xor_ln339_1_fu_312_p2);
    sensitive << ( A_q0 );
    sensitive << ( A_load_3_reg_624 );

    SC_METHOD(thread_xor_ln339_2_fu_317_p2);
    sensitive << ( A_load_2_reg_619 );
    sensitive << ( xor_ln339_1_fu_312_p2 );

    SC_METHOD(thread_xor_ln339_fu_308_p2);
    sensitive << ( A_load_reg_599 );
    sensitive << ( A_load_5_reg_604 );

    SC_METHOD(thread_xor_ln342_1_fu_351_p2);
    sensitive << ( x_1_reg_197 );

    SC_METHOD(thread_y_fu_553_p2);
    sensitive << ( select_ln345_reg_662 );

    SC_METHOD(thread_zext_ln337_fu_254_p1);
    sensitive << ( ap_phi_mux_x_0_phi_fu_190_p4 );

    SC_METHOD(thread_zext_ln339_1_fu_273_p1);
    sensitive << ( add_ln339_fu_267_p2 );

    SC_METHOD(thread_zext_ln339_2_fu_283_p1);
    sensitive << ( add_ln339_1_fu_278_p2 );

    SC_METHOD(thread_zext_ln339_3_fu_293_p1);
    sensitive << ( add_ln339_2_fu_288_p2 );

    SC_METHOD(thread_zext_ln339_4_fu_303_p1);
    sensitive << ( add_ln339_3_fu_298_p2 );

    SC_METHOD(thread_zext_ln339_5_fu_263_p1);
    sensitive << ( ap_phi_mux_x_0_phi_fu_190_p4 );

    SC_METHOD(thread_zext_ln339_fu_259_p1);
    sensitive << ( ap_phi_mux_x_0_phi_fu_190_p4 );

    SC_METHOD(thread_zext_ln341_fu_329_p1);
    sensitive << ( x_1_reg_197 );

    SC_METHOD(thread_zext_ln342_1_fu_400_p1);
    sensitive << ( select_ln342_1_fu_392_p3 );

    SC_METHOD(thread_zext_ln342_2_fu_432_p1);
    sensitive << ( x_1_reg_197 );

    SC_METHOD(thread_zext_ln342_fu_365_p1);
    sensitive << ( select_ln342_fu_357_p3 );

    SC_METHOD(thread_zext_ln345_1_fu_548_p1);
    sensitive << ( add_ln345_fu_542_p2 );

    SC_METHOD(thread_zext_ln345_2_fu_499_p1);
    sensitive << ( select_ln345_2_fu_492_p3 );

    SC_METHOD(thread_zext_ln345_3_fu_520_p1);
    sensitive << ( select_ln345_3_fu_513_p3 );

    SC_METHOD(thread_zext_ln345_4_fu_538_p1);
    sensitive << ( add_ln345_1_fu_532_p2 );

    SC_METHOD(thread_zext_ln345_fu_477_p1);
    sensitive << ( select_ln345_1_fu_469_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln336_fu_242_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln341_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln343_fu_437_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "theta_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, x_0_reg_186, "x_0_reg_186");
    sc_trace(mVcdFile, indvar_flatten_reg_209, "indvar_flatten_reg_209");
    sc_trace(mVcdFile, x_2_reg_220, "x_2_reg_220");
    sc_trace(mVcdFile, y_1_reg_231, "y_1_reg_231");
    sc_trace(mVcdFile, icmp_ln336_fu_242_p2, "icmp_ln336_fu_242_p2");
    sc_trace(mVcdFile, icmp_ln336_reg_564, "icmp_ln336_reg_564");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, x_3_fu_248_p2, "x_3_fu_248_p2");
    sc_trace(mVcdFile, x_3_reg_568, "x_3_reg_568");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln337_fu_254_p1, "zext_ln337_fu_254_p1");
    sc_trace(mVcdFile, zext_ln337_reg_573, "zext_ln337_reg_573");
    sc_trace(mVcdFile, zext_ln339_fu_259_p1, "zext_ln339_fu_259_p1");
    sc_trace(mVcdFile, zext_ln339_reg_578, "zext_ln339_reg_578");
    sc_trace(mVcdFile, zext_ln339_5_fu_263_p1, "zext_ln339_5_fu_263_p1");
    sc_trace(mVcdFile, zext_ln339_5_reg_584, "zext_ln339_5_reg_584");
    sc_trace(mVcdFile, A_load_reg_599, "A_load_reg_599");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, A_load_5_reg_604, "A_load_5_reg_604");
    sc_trace(mVcdFile, A_load_2_reg_619, "A_load_2_reg_619");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, A_load_3_reg_624, "A_load_3_reg_624");
    sc_trace(mVcdFile, icmp_ln341_fu_333_p2, "icmp_ln341_fu_333_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, x_fu_339_p2, "x_fu_339_p2");
    sc_trace(mVcdFile, x_reg_638, "x_reg_638");
    sc_trace(mVcdFile, icmp_ln343_fu_437_p2, "icmp_ln343_fu_437_p2");
    sc_trace(mVcdFile, icmp_ln343_reg_653, "icmp_ln343_reg_653");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter0, "ap_block_state9_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage0_iter1, "ap_block_state11_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, add_ln343_fu_443_p2, "add_ln343_fu_443_p2");
    sc_trace(mVcdFile, add_ln343_reg_657, "add_ln343_reg_657");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, select_ln345_fu_461_p3, "select_ln345_fu_461_p3");
    sc_trace(mVcdFile, select_ln345_reg_662, "select_ln345_reg_662");
    sc_trace(mVcdFile, select_ln345_1_fu_469_p3, "select_ln345_1_fu_469_p3");
    sc_trace(mVcdFile, select_ln345_1_reg_670, "select_ln345_1_reg_670");
    sc_trace(mVcdFile, D_q0, "D_q0");
    sc_trace(mVcdFile, D_load_reg_683, "D_load_reg_683");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage1_iter0, "ap_block_state10_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, A_addr_5_reg_688, "A_addr_5_reg_688");
    sc_trace(mVcdFile, y_fu_553_p2, "y_fu_553_p2");
    sc_trace(mVcdFile, y_reg_694, "y_reg_694");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state9, "ap_condition_pp1_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, C_address0, "C_address0");
    sc_trace(mVcdFile, C_ce0, "C_ce0");
    sc_trace(mVcdFile, C_we0, "C_we0");
    sc_trace(mVcdFile, C_d0, "C_d0");
    sc_trace(mVcdFile, C_q0, "C_q0");
    sc_trace(mVcdFile, C_address1, "C_address1");
    sc_trace(mVcdFile, C_ce1, "C_ce1");
    sc_trace(mVcdFile, C_q1, "C_q1");
    sc_trace(mVcdFile, D_address0, "D_address0");
    sc_trace(mVcdFile, D_ce0, "D_ce0");
    sc_trace(mVcdFile, D_we0, "D_we0");
    sc_trace(mVcdFile, D_d0, "D_d0");
    sc_trace(mVcdFile, ap_phi_mux_x_0_phi_fu_190_p4, "ap_phi_mux_x_0_phi_fu_190_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, x_1_reg_197, "x_1_reg_197");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_213_p4, "ap_phi_mux_indvar_flatten_phi_fu_213_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, ap_phi_mux_x_2_phi_fu_224_p4, "ap_phi_mux_x_2_phi_fu_224_p4");
    sc_trace(mVcdFile, ap_phi_mux_y_1_phi_fu_235_p4, "ap_phi_mux_y_1_phi_fu_235_p4");
    sc_trace(mVcdFile, zext_ln339_1_fu_273_p1, "zext_ln339_1_fu_273_p1");
    sc_trace(mVcdFile, zext_ln339_2_fu_283_p1, "zext_ln339_2_fu_283_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, zext_ln339_3_fu_293_p1, "zext_ln339_3_fu_293_p1");
    sc_trace(mVcdFile, zext_ln339_4_fu_303_p1, "zext_ln339_4_fu_303_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, zext_ln342_fu_365_p1, "zext_ln342_fu_365_p1");
    sc_trace(mVcdFile, zext_ln342_1_fu_400_p1, "zext_ln342_1_fu_400_p1");
    sc_trace(mVcdFile, zext_ln342_2_fu_432_p1, "zext_ln342_2_fu_432_p1");
    sc_trace(mVcdFile, zext_ln345_fu_477_p1, "zext_ln345_fu_477_p1");
    sc_trace(mVcdFile, zext_ln345_1_fu_548_p1, "zext_ln345_1_fu_548_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, add_ln339_fu_267_p2, "add_ln339_fu_267_p2");
    sc_trace(mVcdFile, add_ln339_1_fu_278_p2, "add_ln339_1_fu_278_p2");
    sc_trace(mVcdFile, add_ln339_2_fu_288_p2, "add_ln339_2_fu_288_p2");
    sc_trace(mVcdFile, add_ln339_3_fu_298_p2, "add_ln339_3_fu_298_p2");
    sc_trace(mVcdFile, xor_ln339_1_fu_312_p2, "xor_ln339_1_fu_312_p2");
    sc_trace(mVcdFile, xor_ln339_2_fu_317_p2, "xor_ln339_2_fu_317_p2");
    sc_trace(mVcdFile, xor_ln339_fu_308_p2, "xor_ln339_fu_308_p2");
    sc_trace(mVcdFile, icmp_ln342_fu_345_p2, "icmp_ln342_fu_345_p2");
    sc_trace(mVcdFile, xor_ln342_1_fu_351_p2, "xor_ln342_1_fu_351_p2");
    sc_trace(mVcdFile, select_ln342_fu_357_p3, "select_ln342_fu_357_p3");
    sc_trace(mVcdFile, zext_ln341_fu_329_p1, "zext_ln341_fu_329_p1");
    sc_trace(mVcdFile, add_ln342_1_fu_370_p2, "add_ln342_1_fu_370_p2");
    sc_trace(mVcdFile, add_ln342_2_fu_382_p2, "add_ln342_2_fu_382_p2");
    sc_trace(mVcdFile, icmp_ln342_1_fu_376_p2, "icmp_ln342_1_fu_376_p2");
    sc_trace(mVcdFile, sext_ln342_fu_388_p1, "sext_ln342_fu_388_p1");
    sc_trace(mVcdFile, select_ln342_1_fu_392_p3, "select_ln342_1_fu_392_p3");
    sc_trace(mVcdFile, trunc_ln342_fu_405_p1, "trunc_ln342_fu_405_p1");
    sc_trace(mVcdFile, tmp_2_fu_409_p3, "tmp_2_fu_409_p3");
    sc_trace(mVcdFile, or_ln_fu_417_p3, "or_ln_fu_417_p3");
    sc_trace(mVcdFile, icmp_ln344_fu_455_p2, "icmp_ln344_fu_455_p2");
    sc_trace(mVcdFile, x_5_fu_449_p2, "x_5_fu_449_p2");
    sc_trace(mVcdFile, icmp_ln345_fu_482_p2, "icmp_ln345_fu_482_p2");
    sc_trace(mVcdFile, add_ln345_2_fu_487_p2, "add_ln345_2_fu_487_p2");
    sc_trace(mVcdFile, select_ln345_2_fu_492_p3, "select_ln345_2_fu_492_p3");
    sc_trace(mVcdFile, icmp_ln345_1_fu_503_p2, "icmp_ln345_1_fu_503_p2");
    sc_trace(mVcdFile, add_ln345_3_fu_508_p2, "add_ln345_3_fu_508_p2");
    sc_trace(mVcdFile, select_ln345_3_fu_513_p3, "select_ln345_3_fu_513_p3");
    sc_trace(mVcdFile, zext_ln345_2_fu_499_p1, "zext_ln345_2_fu_499_p1");
    sc_trace(mVcdFile, zext_ln345_3_fu_520_p1, "zext_ln345_3_fu_520_p1");
    sc_trace(mVcdFile, add_ln345_1_fu_532_p2, "add_ln345_1_fu_532_p2");
    sc_trace(mVcdFile, shl_ln_fu_524_p3, "shl_ln_fu_524_p3");
    sc_trace(mVcdFile, zext_ln345_4_fu_538_p1, "zext_ln345_4_fu_538_p1");
    sc_trace(mVcdFile, add_ln345_fu_542_p2, "add_ln345_fu_542_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

theta::~theta() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete C_U;
    delete D_U;
}

void theta::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state9.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(icmp_ln341_fu_333_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(icmp_ln341_fu_333_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln341_fu_333_p2.read(), ap_const_lv1_1))) {
        indvar_flatten_reg_209 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_reg_653.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        indvar_flatten_reg_209 = add_ln343_reg_657.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln336_reg_564.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        x_0_reg_186 = x_3_reg_568.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_0_reg_186 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        x_1_reg_197 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        x_1_reg_197 = x_reg_638.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln341_fu_333_p2.read(), ap_const_lv1_1))) {
        x_2_reg_220 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_reg_653.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        x_2_reg_220 = select_ln345_1_reg_670.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln341_fu_333_p2.read(), ap_const_lv1_1))) {
        y_1_reg_231 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_reg_653.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        y_1_reg_231 = y_reg_694.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_reg_653.read()))) {
        A_addr_5_reg_688 =  (sc_lv<5>) (zext_ln345_1_fu_548_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln336_reg_564.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        A_load_2_reg_619 = A_q0.read();
        A_load_3_reg_624 = A_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln336_reg_564.read(), ap_const_lv1_0))) {
        A_load_5_reg_604 = A_q1.read();
        A_load_reg_599 = A_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_reg_653.read()))) {
        D_load_reg_683 = D_q0.read();
        y_reg_694 = y_fu_553_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        add_ln343_reg_657 = add_ln343_fu_443_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln336_reg_564 = icmp_ln336_fu_242_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln343_reg_653 = icmp_ln343_fu_437_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_fu_437_p2.read()))) {
        select_ln345_1_reg_670 = select_ln345_1_fu_469_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_fu_437_p2.read()))) {
        select_ln345_reg_662 = select_ln345_fu_461_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        x_3_reg_568 = x_3_fu_248_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_reg_638 = x_fu_339_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln336_fu_242_p2.read(), ap_const_lv1_0))) {
        zext_ln337_reg_573 = zext_ln337_fu_254_p1.read();
        zext_ln339_5_reg_584 = zext_ln339_5_fu_263_p1.read();
        zext_ln339_reg_578 = zext_ln339_fu_259_p1.read();
    }
}

void theta::thread_A_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<5>) (zext_ln345_1_fu_548_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<5>) (zext_ln339_4_fu_303_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<5>) (zext_ln339_2_fu_283_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<5>) (zext_ln337_fu_254_p1.read());
    } else {
        A_address0 = "XXXXX";
    }
}

void theta::thread_A_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        A_address1 = A_addr_5_reg_688.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        A_address1 =  (sc_lv<5>) (zext_ln339_3_fu_293_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        A_address1 =  (sc_lv<5>) (zext_ln339_1_fu_273_p1.read());
    } else {
        A_address1 = "XXXXX";
    }
}

void theta::thread_A_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void theta::thread_A_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void theta::thread_A_d1() {
    A_d1 = (A_q0.read() ^ D_load_reg_683.read());
}

void theta::thread_A_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_reg_653.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        A_we1 = ap_const_logic_1;
    } else {
        A_we1 = ap_const_logic_0;
    }
}

void theta::thread_C_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        C_address0 =  (sc_lv<3>) (zext_ln342_fu_365_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        C_address0 =  (sc_lv<3>) (zext_ln337_reg_573.read());
    } else {
        C_address0 =  (sc_lv<3>) ("XXX");
    }
}

void theta::thread_C_address1() {
    C_address1 =  (sc_lv<3>) (zext_ln342_1_fu_400_p1.read());
}

void theta::thread_C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void theta::thread_C_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        C_ce1 = ap_const_logic_1;
    } else {
        C_ce1 = ap_const_logic_0;
    }
}

void theta::thread_C_d0() {
    C_d0 = (xor_ln339_2_fu_317_p2.read() ^ xor_ln339_fu_308_p2.read());
}

void theta::thread_C_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln336_reg_564.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void theta::thread_D_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        D_address0 =  (sc_lv<3>) (zext_ln345_fu_477_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        D_address0 =  (sc_lv<3>) (zext_ln342_2_fu_432_p1.read());
    } else {
        D_address0 =  (sc_lv<3>) ("XXX");
    }
}

void theta::thread_D_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        D_ce0 = ap_const_logic_1;
    } else {
        D_ce0 = ap_const_logic_0;
    }
}

void theta::thread_D_d0() {
    D_d0 = (C_q1.read() ^ or_ln_fu_417_p3.read());
}

void theta::thread_D_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        D_we0 = ap_const_logic_1;
    } else {
        D_we0 = ap_const_logic_0;
    }
}

void theta::thread_add_ln339_1_fu_278_p2() {
    add_ln339_1_fu_278_p2 = (!zext_ln339_5_reg_584.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln339_5_reg_584.read()) + sc_bigint<4>(ap_const_lv4_A));
}

void theta::thread_add_ln339_2_fu_288_p2() {
    add_ln339_2_fu_288_p2 = (!zext_ln339_reg_578.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln339_reg_578.read()) + sc_biguint<5>(ap_const_lv5_F));
}

void theta::thread_add_ln339_3_fu_298_p2() {
    add_ln339_3_fu_298_p2 = (!zext_ln339_reg_578.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln339_reg_578.read()) + sc_bigint<5>(ap_const_lv5_14));
}

void theta::thread_add_ln339_fu_267_p2() {
    add_ln339_fu_267_p2 = (!zext_ln339_5_fu_263_p1.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln339_5_fu_263_p1.read()) + sc_biguint<4>(ap_const_lv4_5));
}

void theta::thread_add_ln342_1_fu_370_p2() {
    add_ln342_1_fu_370_p2 = (!ap_const_lv4_4.is_01() || !zext_ln341_fu_329_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_4) + sc_biguint<4>(zext_ln341_fu_329_p1.read()));
}

void theta::thread_add_ln342_2_fu_382_p2() {
    add_ln342_2_fu_382_p2 = (!ap_const_lv3_7.is_01() || !x_1_reg_197.read().is_01())? sc_lv<3>(): (sc_bigint<3>(ap_const_lv3_7) + sc_biguint<3>(x_1_reg_197.read()));
}

void theta::thread_add_ln343_fu_443_p2() {
    add_ln343_fu_443_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_213_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_indvar_flatten_phi_fu_213_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void theta::thread_add_ln345_1_fu_532_p2() {
    add_ln345_1_fu_532_p2 = (!zext_ln345_2_fu_499_p1.read().is_01() || !zext_ln345_3_fu_520_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln345_2_fu_499_p1.read()) + sc_biguint<4>(zext_ln345_3_fu_520_p1.read()));
}

void theta::thread_add_ln345_2_fu_487_p2() {
    add_ln345_2_fu_487_p2 = (!select_ln345_1_reg_670.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<3>(): (sc_biguint<3>(select_ln345_1_reg_670.read()) + sc_biguint<3>(ap_const_lv3_3));
}

void theta::thread_add_ln345_3_fu_508_p2() {
    add_ln345_3_fu_508_p2 = (!select_ln345_reg_662.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<3>(): (sc_biguint<3>(select_ln345_reg_662.read()) + sc_biguint<3>(ap_const_lv3_3));
}

void theta::thread_add_ln345_fu_542_p2() {
    add_ln345_fu_542_p2 = (!shl_ln_fu_524_p3.read().is_01() || !zext_ln345_4_fu_538_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(shl_ln_fu_524_p3.read()) + sc_biguint<5>(zext_ln345_4_fu_538_p1.read()));
}

void theta::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void theta::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void theta::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void theta::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[7];
}

void theta::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[8];
}

void theta::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void theta::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[9];
}

void theta::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[4];
}

void theta::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void theta::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void theta::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_state10_pp1_stage1_iter0() {
    ap_block_state10_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_state11_pp1_stage0_iter1() {
    ap_block_state11_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_block_state9_pp1_stage0_iter0() {
    ap_block_state9_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void theta::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln336_fu_242_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void theta::thread_ap_condition_pp1_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(icmp_ln343_fu_437_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_0;
    }
}

void theta::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void theta::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void theta::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void theta::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void theta::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void theta::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void theta::thread_ap_phi_mux_indvar_flatten_phi_fu_213_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_reg_653.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_213_p4 = add_ln343_reg_657.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_213_p4 = indvar_flatten_reg_209.read();
    }
}

void theta::thread_ap_phi_mux_x_0_phi_fu_190_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln336_reg_564.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_x_0_phi_fu_190_p4 = x_3_reg_568.read();
    } else {
        ap_phi_mux_x_0_phi_fu_190_p4 = x_0_reg_186.read();
    }
}

void theta::thread_ap_phi_mux_x_2_phi_fu_224_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_reg_653.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_x_2_phi_fu_224_p4 = select_ln345_1_reg_670.read();
    } else {
        ap_phi_mux_x_2_phi_fu_224_p4 = x_2_reg_220.read();
    }
}

void theta::thread_ap_phi_mux_y_1_phi_fu_235_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln343_reg_653.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_y_1_phi_fu_235_p4 = y_reg_694.read();
    } else {
        ap_phi_mux_y_1_phi_fu_235_p4 = y_1_reg_231.read();
    }
}

void theta::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void theta::thread_icmp_ln336_fu_242_p2() {
    icmp_ln336_fu_242_p2 = (!ap_phi_mux_x_0_phi_fu_190_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_x_0_phi_fu_190_p4.read() == ap_const_lv3_5);
}

void theta::thread_icmp_ln341_fu_333_p2() {
    icmp_ln341_fu_333_p2 = (!x_1_reg_197.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(x_1_reg_197.read() == ap_const_lv3_5);
}

void theta::thread_icmp_ln342_1_fu_376_p2() {
    icmp_ln342_1_fu_376_p2 = (!add_ln342_1_fu_370_p2.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<1>(): (sc_biguint<4>(add_ln342_1_fu_370_p2.read()) < sc_biguint<4>(ap_const_lv4_5));
}

void theta::thread_icmp_ln342_fu_345_p2() {
    icmp_ln342_fu_345_p2 = (!x_fu_339_p2.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): (sc_biguint<3>(x_fu_339_p2.read()) < sc_biguint<3>(ap_const_lv3_5));
}

void theta::thread_icmp_ln343_fu_437_p2() {
    icmp_ln343_fu_437_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_213_p4.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_213_p4.read() == ap_const_lv5_19);
}

void theta::thread_icmp_ln344_fu_455_p2() {
    icmp_ln344_fu_455_p2 = (!ap_phi_mux_y_1_phi_fu_235_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_y_1_phi_fu_235_p4.read() == ap_const_lv3_5);
}

void theta::thread_icmp_ln345_1_fu_503_p2() {
    icmp_ln345_1_fu_503_p2 = (!select_ln345_reg_662.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): (sc_biguint<3>(select_ln345_reg_662.read()) < sc_biguint<3>(ap_const_lv3_5));
}

void theta::thread_icmp_ln345_fu_482_p2() {
    icmp_ln345_fu_482_p2 = (!select_ln345_1_reg_670.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): (sc_biguint<3>(select_ln345_1_reg_670.read()) < sc_biguint<3>(ap_const_lv3_5));
}

void theta::thread_or_ln_fu_417_p3() {
    or_ln_fu_417_p3 = esl_concat<63,1>(trunc_ln342_fu_405_p1.read(), tmp_2_fu_409_p3.read());
}

void theta::thread_select_ln342_1_fu_392_p3() {
    select_ln342_1_fu_392_p3 = (!icmp_ln342_1_fu_376_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln342_1_fu_376_p2.read()[0].to_bool())? add_ln342_1_fu_370_p2.read(): sext_ln342_fu_388_p1.read());
}

void theta::thread_select_ln342_fu_357_p3() {
    select_ln342_fu_357_p3 = (!icmp_ln342_fu_345_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln342_fu_345_p2.read()[0].to_bool())? x_fu_339_p2.read(): xor_ln342_1_fu_351_p2.read());
}

void theta::thread_select_ln345_1_fu_469_p3() {
    select_ln345_1_fu_469_p3 = (!icmp_ln344_fu_455_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln344_fu_455_p2.read()[0].to_bool())? x_5_fu_449_p2.read(): ap_phi_mux_x_2_phi_fu_224_p4.read());
}

void theta::thread_select_ln345_2_fu_492_p3() {
    select_ln345_2_fu_492_p3 = (!icmp_ln345_fu_482_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln345_fu_482_p2.read()[0].to_bool())? select_ln345_1_reg_670.read(): add_ln345_2_fu_487_p2.read());
}

void theta::thread_select_ln345_3_fu_513_p3() {
    select_ln345_3_fu_513_p3 = (!icmp_ln345_1_fu_503_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln345_1_fu_503_p2.read()[0].to_bool())? select_ln345_reg_662.read(): add_ln345_3_fu_508_p2.read());
}

void theta::thread_select_ln345_fu_461_p3() {
    select_ln345_fu_461_p3 = (!icmp_ln344_fu_455_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln344_fu_455_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_y_1_phi_fu_235_p4.read());
}

void theta::thread_sext_ln342_fu_388_p1() {
    sext_ln342_fu_388_p1 = esl_sext<4,3>(add_ln342_2_fu_382_p2.read());
}

void theta::thread_shl_ln_fu_524_p3() {
    shl_ln_fu_524_p3 = esl_concat<3,2>(select_ln345_3_fu_513_p3.read(), ap_const_lv2_0);
}

void theta::thread_tmp_2_fu_409_p3() {
    tmp_2_fu_409_p3 = C_q0.read().range(63, 63);
}

void theta::thread_trunc_ln342_fu_405_p1() {
    trunc_ln342_fu_405_p1 = C_q0.read().range(63-1, 0);
}

void theta::thread_x_3_fu_248_p2() {
    x_3_fu_248_p2 = (!ap_phi_mux_x_0_phi_fu_190_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_x_0_phi_fu_190_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void theta::thread_x_5_fu_449_p2() {
    x_5_fu_449_p2 = (!ap_phi_mux_x_2_phi_fu_224_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_x_2_phi_fu_224_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void theta::thread_x_fu_339_p2() {
    x_fu_339_p2 = (!x_1_reg_197.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_1_reg_197.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void theta::thread_xor_ln339_1_fu_312_p2() {
    xor_ln339_1_fu_312_p2 = (A_load_3_reg_624.read() ^ A_q0.read());
}

void theta::thread_xor_ln339_2_fu_317_p2() {
    xor_ln339_2_fu_317_p2 = (xor_ln339_1_fu_312_p2.read() ^ A_load_2_reg_619.read());
}

void theta::thread_xor_ln339_fu_308_p2() {
    xor_ln339_fu_308_p2 = (A_load_reg_599.read() ^ A_load_5_reg_604.read());
}

void theta::thread_xor_ln342_1_fu_351_p2() {
    xor_ln342_1_fu_351_p2 = (x_1_reg_197.read() ^ ap_const_lv3_4);
}

void theta::thread_y_fu_553_p2() {
    y_fu_553_p2 = (!select_ln345_reg_662.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(select_ln345_reg_662.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void theta::thread_zext_ln337_fu_254_p1() {
    zext_ln337_fu_254_p1 = esl_zext<64,3>(ap_phi_mux_x_0_phi_fu_190_p4.read());
}

void theta::thread_zext_ln339_1_fu_273_p1() {
    zext_ln339_1_fu_273_p1 = esl_zext<64,4>(add_ln339_fu_267_p2.read());
}

void theta::thread_zext_ln339_2_fu_283_p1() {
    zext_ln339_2_fu_283_p1 = esl_zext<64,4>(add_ln339_1_fu_278_p2.read());
}

void theta::thread_zext_ln339_3_fu_293_p1() {
    zext_ln339_3_fu_293_p1 = esl_zext<64,5>(add_ln339_2_fu_288_p2.read());
}

void theta::thread_zext_ln339_4_fu_303_p1() {
    zext_ln339_4_fu_303_p1 = esl_zext<64,5>(add_ln339_3_fu_298_p2.read());
}

void theta::thread_zext_ln339_5_fu_263_p1() {
    zext_ln339_5_fu_263_p1 = esl_zext<4,3>(ap_phi_mux_x_0_phi_fu_190_p4.read());
}

void theta::thread_zext_ln339_fu_259_p1() {
    zext_ln339_fu_259_p1 = esl_zext<5,3>(ap_phi_mux_x_0_phi_fu_190_p4.read());
}

void theta::thread_zext_ln341_fu_329_p1() {
    zext_ln341_fu_329_p1 = esl_zext<4,3>(x_1_reg_197.read());
}

void theta::thread_zext_ln342_1_fu_400_p1() {
    zext_ln342_1_fu_400_p1 = esl_zext<64,4>(select_ln342_1_fu_392_p3.read());
}

void theta::thread_zext_ln342_2_fu_432_p1() {
    zext_ln342_2_fu_432_p1 = esl_zext<64,3>(x_1_reg_197.read());
}

void theta::thread_zext_ln342_fu_365_p1() {
    zext_ln342_fu_365_p1 = esl_zext<64,3>(select_ln342_fu_357_p3.read());
}

void theta::thread_zext_ln345_1_fu_548_p1() {
    zext_ln345_1_fu_548_p1 = esl_zext<64,5>(add_ln345_fu_542_p2.read());
}

void theta::thread_zext_ln345_2_fu_499_p1() {
    zext_ln345_2_fu_499_p1 = esl_zext<4,3>(select_ln345_2_fu_492_p3.read());
}

void theta::thread_zext_ln345_3_fu_520_p1() {
    zext_ln345_3_fu_520_p1 = esl_zext<4,3>(select_ln345_3_fu_513_p3.read());
}

void theta::thread_zext_ln345_4_fu_538_p1() {
    zext_ln345_4_fu_538_p1 = esl_zext<5,4>(add_ln345_1_fu_532_p2.read());
}

void theta::thread_zext_ln345_fu_477_p1() {
    zext_ln345_fu_477_p1 = esl_zext<64,3>(select_ln345_1_fu_469_p3.read());
}

void theta::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln336_fu_242_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln336_fu_242_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln341_fu_333_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln343_fu_437_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln343_fu_437_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

