// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "chi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic chi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic chi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> chi::ap_ST_fsm_state1 = "1";
const sc_lv<7> chi::ap_ST_fsm_state2 = "10";
const sc_lv<7> chi::ap_ST_fsm_state3 = "100";
const sc_lv<7> chi::ap_ST_fsm_state4 = "1000";
const sc_lv<7> chi::ap_ST_fsm_state5 = "10000";
const sc_lv<7> chi::ap_ST_fsm_state6 = "100000";
const sc_lv<7> chi::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> chi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> chi::ap_const_lv32_1 = "1";
const sc_lv<1> chi::ap_const_lv1_0 = "0";
const sc_lv<32> chi::ap_const_lv32_2 = "10";
const sc_lv<32> chi::ap_const_lv32_3 = "11";
const sc_lv<32> chi::ap_const_lv32_5 = "101";
const sc_lv<3> chi::ap_const_lv3_0 = "000";
const sc_lv<1> chi::ap_const_lv1_1 = "1";
const sc_lv<32> chi::ap_const_lv32_4 = "100";
const sc_lv<32> chi::ap_const_lv32_6 = "110";
const sc_lv<3> chi::ap_const_lv3_5 = "101";
const sc_lv<3> chi::ap_const_lv3_1 = "1";
const sc_lv<2> chi::ap_const_lv2_0 = "00";
const sc_lv<3> chi::ap_const_lv3_4 = "100";
const sc_lv<3> chi::ap_const_lv3_2 = "10";
const sc_lv<64> chi::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const bool chi::ap_const_boolean_1 = true;

chi::chi(sc_module_name name) : sc_module(name), mVcdFile(0) {
    C_U = new theta_D("C_U");
    C_U->clk(ap_clk);
    C_U->reset(ap_rst);
    C_U->address0(C_address0);
    C_U->ce0(C_ce0);
    C_U->we0(C_we0);
    C_U->d0(C_d0);
    C_U->q0(C_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln374_fu_176_p1 );
    sensitive << ( zext_ln374_1_fu_208_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln374_2_fu_248_p1 );
    sensitive << ( zext_ln376_1_fu_302_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_A_d1);
    sensitive << ( C_q0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_A_we1);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln374_3_fu_271_p1 );
    sensitive << ( zext_ln376_fu_288_p1 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_C_d0);
    sensitive << ( A_load_reg_337 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( and_ln374_fu_259_p2 );

    SC_METHOD(thread_C_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_add_ln374_1_fu_149_p2);
    sensitive << ( zext_ln374_4_fu_137_p1 );
    sensitive << ( shl_ln_fu_141_p3 );

    SC_METHOD(thread_add_ln374_2_fu_203_p2);
    sensitive << ( add_ln374_1_reg_314 );
    sensitive << ( zext_ln374_6_fu_199_p1 );

    SC_METHOD(thread_add_ln374_3_fu_213_p2);
    sensitive << ( x_0_reg_102 );

    SC_METHOD(thread_add_ln374_4_fu_243_p2);
    sensitive << ( add_ln374_1_reg_314 );
    sensitive << ( zext_ln374_7_fu_239_p1 );

    SC_METHOD(thread_add_ln374_6_fu_225_p2);
    sensitive << ( x_0_reg_102 );

    SC_METHOD(thread_add_ln374_fu_171_p2);
    sensitive << ( add_ln374_1_reg_314 );
    sensitive << ( zext_ln374_5_fu_167_p1 );

    SC_METHOD(thread_add_ln376_fu_297_p2);
    sensitive << ( add_ln374_1_reg_314 );
    sensitive << ( zext_ln376_2_fu_293_p1 );

    SC_METHOD(thread_and_ln374_fu_259_p2);
    sensitive << ( A_q1 );
    sensitive << ( xor_ln374_fu_253_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln372_fu_125_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln372_fu_125_p2 );

    SC_METHOD(thread_icmp_ln372_fu_125_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( y_0_reg_91 );

    SC_METHOD(thread_icmp_ln373_fu_155_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( x_0_reg_102 );

    SC_METHOD(thread_icmp_ln374_1_fu_219_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( add_ln374_3_fu_213_p2 );

    SC_METHOD(thread_icmp_ln374_fu_181_p2);
    sensitive << ( x_reg_325 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln375_fu_276_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( x_1_reg_114 );

    SC_METHOD(thread_select_ln374_1_fu_231_p3);
    sensitive << ( add_ln374_3_fu_213_p2 );
    sensitive << ( icmp_ln374_1_fu_219_p2 );
    sensitive << ( add_ln374_6_fu_225_p2 );

    SC_METHOD(thread_select_ln374_fu_192_p3);
    sensitive << ( x_reg_325 );
    sensitive << ( icmp_ln374_fu_181_p2 );
    sensitive << ( xor_ln374_2_fu_186_p2 );

    SC_METHOD(thread_shl_ln_fu_141_p3);
    sensitive << ( y_0_reg_91 );

    SC_METHOD(thread_x_9_fu_282_p2);
    sensitive << ( x_1_reg_114 );

    SC_METHOD(thread_x_fu_161_p2);
    sensitive << ( x_0_reg_102 );

    SC_METHOD(thread_xor_ln374_2_fu_186_p2);
    sensitive << ( x_0_reg_102 );

    SC_METHOD(thread_xor_ln374_fu_253_p2);
    sensitive << ( A_q0 );

    SC_METHOD(thread_y_fu_131_p2);
    sensitive << ( y_0_reg_91 );

    SC_METHOD(thread_zext_ln374_1_fu_208_p1);
    sensitive << ( add_ln374_2_fu_203_p2 );

    SC_METHOD(thread_zext_ln374_2_fu_248_p1);
    sensitive << ( add_ln374_4_fu_243_p2 );

    SC_METHOD(thread_zext_ln374_3_fu_271_p1);
    sensitive << ( x_0_reg_102 );

    SC_METHOD(thread_zext_ln374_4_fu_137_p1);
    sensitive << ( y_0_reg_91 );

    SC_METHOD(thread_zext_ln374_5_fu_167_p1);
    sensitive << ( x_0_reg_102 );

    SC_METHOD(thread_zext_ln374_6_fu_199_p1);
    sensitive << ( select_ln374_fu_192_p3 );

    SC_METHOD(thread_zext_ln374_7_fu_239_p1);
    sensitive << ( select_ln374_1_fu_231_p3 );

    SC_METHOD(thread_zext_ln374_fu_176_p1);
    sensitive << ( add_ln374_fu_171_p2 );

    SC_METHOD(thread_zext_ln376_1_fu_302_p1);
    sensitive << ( add_ln376_reg_365 );

    SC_METHOD(thread_zext_ln376_2_fu_293_p1);
    sensitive << ( x_1_reg_114 );

    SC_METHOD(thread_zext_ln376_fu_288_p1);
    sensitive << ( x_1_reg_114 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln372_fu_125_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln373_fu_155_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln375_fu_276_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "chi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, y_fu_131_p2, "y_fu_131_p2");
    sc_trace(mVcdFile, y_reg_309, "y_reg_309");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln374_1_fu_149_p2, "add_ln374_1_fu_149_p2");
    sc_trace(mVcdFile, add_ln374_1_reg_314, "add_ln374_1_reg_314");
    sc_trace(mVcdFile, icmp_ln372_fu_125_p2, "icmp_ln372_fu_125_p2");
    sc_trace(mVcdFile, x_fu_161_p2, "x_fu_161_p2");
    sc_trace(mVcdFile, x_reg_325, "x_reg_325");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln373_fu_155_p2, "icmp_ln373_fu_155_p2");
    sc_trace(mVcdFile, A_load_reg_337, "A_load_reg_337");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, x_9_fu_282_p2, "x_9_fu_282_p2");
    sc_trace(mVcdFile, x_9_reg_355, "x_9_reg_355");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln375_fu_276_p2, "icmp_ln375_fu_276_p2");
    sc_trace(mVcdFile, add_ln376_fu_297_p2, "add_ln376_fu_297_p2");
    sc_trace(mVcdFile, add_ln376_reg_365, "add_ln376_reg_365");
    sc_trace(mVcdFile, C_address0, "C_address0");
    sc_trace(mVcdFile, C_ce0, "C_ce0");
    sc_trace(mVcdFile, C_we0, "C_we0");
    sc_trace(mVcdFile, C_d0, "C_d0");
    sc_trace(mVcdFile, C_q0, "C_q0");
    sc_trace(mVcdFile, y_0_reg_91, "y_0_reg_91");
    sc_trace(mVcdFile, x_0_reg_102, "x_0_reg_102");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, x_1_reg_114, "x_1_reg_114");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln374_fu_176_p1, "zext_ln374_fu_176_p1");
    sc_trace(mVcdFile, zext_ln374_1_fu_208_p1, "zext_ln374_1_fu_208_p1");
    sc_trace(mVcdFile, zext_ln374_2_fu_248_p1, "zext_ln374_2_fu_248_p1");
    sc_trace(mVcdFile, zext_ln374_3_fu_271_p1, "zext_ln374_3_fu_271_p1");
    sc_trace(mVcdFile, zext_ln376_fu_288_p1, "zext_ln376_fu_288_p1");
    sc_trace(mVcdFile, zext_ln376_1_fu_302_p1, "zext_ln376_1_fu_302_p1");
    sc_trace(mVcdFile, zext_ln374_4_fu_137_p1, "zext_ln374_4_fu_137_p1");
    sc_trace(mVcdFile, shl_ln_fu_141_p3, "shl_ln_fu_141_p3");
    sc_trace(mVcdFile, zext_ln374_5_fu_167_p1, "zext_ln374_5_fu_167_p1");
    sc_trace(mVcdFile, add_ln374_fu_171_p2, "add_ln374_fu_171_p2");
    sc_trace(mVcdFile, icmp_ln374_fu_181_p2, "icmp_ln374_fu_181_p2");
    sc_trace(mVcdFile, xor_ln374_2_fu_186_p2, "xor_ln374_2_fu_186_p2");
    sc_trace(mVcdFile, select_ln374_fu_192_p3, "select_ln374_fu_192_p3");
    sc_trace(mVcdFile, zext_ln374_6_fu_199_p1, "zext_ln374_6_fu_199_p1");
    sc_trace(mVcdFile, add_ln374_2_fu_203_p2, "add_ln374_2_fu_203_p2");
    sc_trace(mVcdFile, add_ln374_3_fu_213_p2, "add_ln374_3_fu_213_p2");
    sc_trace(mVcdFile, icmp_ln374_1_fu_219_p2, "icmp_ln374_1_fu_219_p2");
    sc_trace(mVcdFile, add_ln374_6_fu_225_p2, "add_ln374_6_fu_225_p2");
    sc_trace(mVcdFile, select_ln374_1_fu_231_p3, "select_ln374_1_fu_231_p3");
    sc_trace(mVcdFile, zext_ln374_7_fu_239_p1, "zext_ln374_7_fu_239_p1");
    sc_trace(mVcdFile, add_ln374_4_fu_243_p2, "add_ln374_4_fu_243_p2");
    sc_trace(mVcdFile, xor_ln374_fu_253_p2, "xor_ln374_fu_253_p2");
    sc_trace(mVcdFile, and_ln374_fu_259_p2, "and_ln374_fu_259_p2");
    sc_trace(mVcdFile, zext_ln376_2_fu_293_p1, "zext_ln376_2_fu_293_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

chi::~chi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete C_U;
}

void chi::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln372_fu_125_p2.read(), ap_const_lv1_0))) {
        x_0_reg_102 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_0_reg_102 = x_reg_325.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln373_fu_155_p2.read(), ap_const_lv1_1))) {
        x_1_reg_114 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_1_reg_114 = x_9_reg_355.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln375_fu_276_p2.read(), ap_const_lv1_1))) {
        y_0_reg_91 = y_reg_309.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        y_0_reg_91 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_load_reg_337 = A_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln372_fu_125_p2.read(), ap_const_lv1_0))) {
        add_ln374_1_reg_314 = add_ln374_1_fu_149_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln375_fu_276_p2.read()))) {
        add_ln376_reg_365 = add_ln376_fu_297_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        x_9_reg_355 = x_9_fu_282_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_reg_325 = x_fu_161_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        y_reg_309 = y_fu_131_p2.read();
    }
}

void chi::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address0 =  (sc_lv<5>) (zext_ln374_1_fu_208_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_address0 =  (sc_lv<5>) (zext_ln374_fu_176_p1.read());
    } else {
        A_address0 = "XXXXX";
    }
}

void chi::thread_A_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        A_address1 =  (sc_lv<5>) (zext_ln376_1_fu_302_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address1 =  (sc_lv<5>) (zext_ln374_2_fu_248_p1.read());
    } else {
        A_address1 = "XXXXX";
    }
}

void chi::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void chi::thread_A_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void chi::thread_A_d1() {
    A_d1 = C_q0.read();
}

void chi::thread_A_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        A_we1 = ap_const_logic_1;
    } else {
        A_we1 = ap_const_logic_0;
    }
}

void chi::thread_C_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_address0 =  (sc_lv<3>) (zext_ln376_fu_288_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_address0 =  (sc_lv<3>) (zext_ln374_3_fu_271_p1.read());
    } else {
        C_address0 =  (sc_lv<3>) ("XXX");
    }
}

void chi::thread_C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void chi::thread_C_d0() {
    C_d0 = (A_load_reg_337.read() ^ and_ln374_fu_259_p2.read());
}

void chi::thread_C_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void chi::thread_add_ln374_1_fu_149_p2() {
    add_ln374_1_fu_149_p2 = (!zext_ln374_4_fu_137_p1.read().is_01() || !shl_ln_fu_141_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln374_4_fu_137_p1.read()) + sc_biguint<5>(shl_ln_fu_141_p3.read()));
}

void chi::thread_add_ln374_2_fu_203_p2() {
    add_ln374_2_fu_203_p2 = (!add_ln374_1_reg_314.read().is_01() || !zext_ln374_6_fu_199_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(add_ln374_1_reg_314.read()) + sc_biguint<5>(zext_ln374_6_fu_199_p1.read()));
}

void chi::thread_add_ln374_3_fu_213_p2() {
    add_ln374_3_fu_213_p2 = (!x_0_reg_102.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<3>(): (sc_biguint<3>(x_0_reg_102.read()) + sc_biguint<3>(ap_const_lv3_2));
}

void chi::thread_add_ln374_4_fu_243_p2() {
    add_ln374_4_fu_243_p2 = (!add_ln374_1_reg_314.read().is_01() || !zext_ln374_7_fu_239_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(add_ln374_1_reg_314.read()) + sc_biguint<5>(zext_ln374_7_fu_239_p1.read()));
}

void chi::thread_add_ln374_6_fu_225_p2() {
    add_ln374_6_fu_225_p2 = (!x_0_reg_102.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<3>(): (sc_biguint<3>(x_0_reg_102.read()) + sc_bigint<3>(ap_const_lv3_5));
}

void chi::thread_add_ln374_fu_171_p2() {
    add_ln374_fu_171_p2 = (!add_ln374_1_reg_314.read().is_01() || !zext_ln374_5_fu_167_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(add_ln374_1_reg_314.read()) + sc_biguint<5>(zext_ln374_5_fu_167_p1.read()));
}

void chi::thread_add_ln376_fu_297_p2() {
    add_ln376_fu_297_p2 = (!add_ln374_1_reg_314.read().is_01() || !zext_ln376_2_fu_293_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(add_ln374_1_reg_314.read()) + sc_biguint<5>(zext_ln376_2_fu_293_p1.read()));
}

void chi::thread_and_ln374_fu_259_p2() {
    and_ln374_fu_259_p2 = (A_q1.read() & xor_ln374_fu_253_p2.read());
}

void chi::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void chi::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void chi::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void chi::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void chi::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void chi::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void chi::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void chi::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln372_fu_125_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void chi::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void chi::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln372_fu_125_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void chi::thread_icmp_ln372_fu_125_p2() {
    icmp_ln372_fu_125_p2 = (!y_0_reg_91.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_91.read() == ap_const_lv3_5);
}

void chi::thread_icmp_ln373_fu_155_p2() {
    icmp_ln373_fu_155_p2 = (!x_0_reg_102.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_102.read() == ap_const_lv3_5);
}

void chi::thread_icmp_ln374_1_fu_219_p2() {
    icmp_ln374_1_fu_219_p2 = (!add_ln374_3_fu_213_p2.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): (sc_biguint<3>(add_ln374_3_fu_213_p2.read()) < sc_biguint<3>(ap_const_lv3_5));
}

void chi::thread_icmp_ln374_fu_181_p2() {
    icmp_ln374_fu_181_p2 = (!x_reg_325.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): (sc_biguint<3>(x_reg_325.read()) < sc_biguint<3>(ap_const_lv3_5));
}

void chi::thread_icmp_ln375_fu_276_p2() {
    icmp_ln375_fu_276_p2 = (!x_1_reg_114.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(x_1_reg_114.read() == ap_const_lv3_5);
}

void chi::thread_select_ln374_1_fu_231_p3() {
    select_ln374_1_fu_231_p3 = (!icmp_ln374_1_fu_219_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln374_1_fu_219_p2.read()[0].to_bool())? add_ln374_3_fu_213_p2.read(): add_ln374_6_fu_225_p2.read());
}

void chi::thread_select_ln374_fu_192_p3() {
    select_ln374_fu_192_p3 = (!icmp_ln374_fu_181_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln374_fu_181_p2.read()[0].to_bool())? x_reg_325.read(): xor_ln374_2_fu_186_p2.read());
}

void chi::thread_shl_ln_fu_141_p3() {
    shl_ln_fu_141_p3 = esl_concat<3,2>(y_0_reg_91.read(), ap_const_lv2_0);
}

void chi::thread_x_9_fu_282_p2() {
    x_9_fu_282_p2 = (!x_1_reg_114.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_1_reg_114.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void chi::thread_x_fu_161_p2() {
    x_fu_161_p2 = (!x_0_reg_102.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_0_reg_102.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void chi::thread_xor_ln374_2_fu_186_p2() {
    xor_ln374_2_fu_186_p2 = (x_0_reg_102.read() ^ ap_const_lv3_4);
}

void chi::thread_xor_ln374_fu_253_p2() {
    xor_ln374_fu_253_p2 = (A_q0.read() ^ ap_const_lv64_FFFFFFFFFFFFFFFF);
}

void chi::thread_y_fu_131_p2() {
    y_fu_131_p2 = (!y_0_reg_91.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_0_reg_91.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void chi::thread_zext_ln374_1_fu_208_p1() {
    zext_ln374_1_fu_208_p1 = esl_zext<64,5>(add_ln374_2_fu_203_p2.read());
}

void chi::thread_zext_ln374_2_fu_248_p1() {
    zext_ln374_2_fu_248_p1 = esl_zext<64,5>(add_ln374_4_fu_243_p2.read());
}

void chi::thread_zext_ln374_3_fu_271_p1() {
    zext_ln374_3_fu_271_p1 = esl_zext<64,3>(x_0_reg_102.read());
}

void chi::thread_zext_ln374_4_fu_137_p1() {
    zext_ln374_4_fu_137_p1 = esl_zext<5,3>(y_0_reg_91.read());
}

void chi::thread_zext_ln374_5_fu_167_p1() {
    zext_ln374_5_fu_167_p1 = esl_zext<5,3>(x_0_reg_102.read());
}

void chi::thread_zext_ln374_6_fu_199_p1() {
    zext_ln374_6_fu_199_p1 = esl_zext<5,3>(select_ln374_fu_192_p3.read());
}

void chi::thread_zext_ln374_7_fu_239_p1() {
    zext_ln374_7_fu_239_p1 = esl_zext<5,3>(select_ln374_1_fu_231_p3.read());
}

void chi::thread_zext_ln374_fu_176_p1() {
    zext_ln374_fu_176_p1 = esl_zext<64,5>(add_ln374_fu_171_p2.read());
}

void chi::thread_zext_ln376_1_fu_302_p1() {
    zext_ln376_1_fu_302_p1 = esl_zext<64,5>(add_ln376_reg_365.read());
}

void chi::thread_zext_ln376_2_fu_293_p1() {
    zext_ln376_2_fu_293_p1 = esl_zext<5,3>(x_1_reg_114.read());
}

void chi::thread_zext_ln376_fu_288_p1() {
    zext_ln376_fu_288_p1 = esl_zext<64,3>(x_1_reg_114.read());
}

void chi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln372_fu_125_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln373_fu_155_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln375_fu_276_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

