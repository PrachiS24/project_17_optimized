// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> pi::ap_ST_fsm_state1 = "1";
const sc_lv<11> pi::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<11> pi::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<11> pi::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<11> pi::ap_ST_fsm_state6 = "10000";
const sc_lv<11> pi::ap_ST_fsm_pp1_stage0 = "100000";
const sc_lv<11> pi::ap_ST_fsm_pp1_stage1 = "1000000";
const sc_lv<11> pi::ap_ST_fsm_pp1_stage2 = "10000000";
const sc_lv<11> pi::ap_ST_fsm_pp1_stage3 = "100000000";
const sc_lv<11> pi::ap_ST_fsm_pp1_stage4 = "1000000000";
const sc_lv<11> pi::ap_ST_fsm_state20 = "10000000000";
const bool pi::ap_const_boolean_1 = true;
const sc_lv<32> pi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pi::ap_const_lv32_1 = "1";
const bool pi::ap_const_boolean_0 = false;
const sc_lv<1> pi::ap_const_lv1_0 = "0";
const sc_lv<32> pi::ap_const_lv32_2 = "10";
const sc_lv<32> pi::ap_const_lv32_3 = "11";
const sc_lv<32> pi::ap_const_lv32_5 = "101";
const sc_lv<32> pi::ap_const_lv32_6 = "110";
const sc_lv<32> pi::ap_const_lv32_7 = "111";
const sc_lv<32> pi::ap_const_lv32_8 = "1000";
const sc_lv<32> pi::ap_const_lv32_9 = "1001";
const sc_lv<1> pi::ap_const_lv1_1 = "1";
const sc_lv<32> pi::ap_const_lv32_4 = "100";
const sc_lv<3> pi::ap_const_lv3_0 = "000";
const sc_lv<3> pi::ap_const_lv3_5 = "101";
const sc_lv<3> pi::ap_const_lv3_1 = "1";
const sc_lv<4> pi::ap_const_lv4_5 = "101";
const sc_lv<4> pi::ap_const_lv4_A = "1010";
const sc_lv<5> pi::ap_const_lv5_F = "1111";
const sc_lv<5> pi::ap_const_lv5_14 = "10100";
const sc_lv<4> pi::ap_const_lv4_3 = "11";
const sc_lv<4> pi::ap_const_lv4_6 = "110";
const sc_lv<5> pi::ap_const_lv5_9 = "1001";
const sc_lv<5> pi::ap_const_lv5_5 = "101";
const sc_lv<5> pi::ap_const_lv5_C = "1100";
const sc_lv<2> pi::ap_const_lv2_0 = "00";
const sc_lv<3> pi::ap_const_lv3_2 = "10";
const sc_lv<5> pi::ap_const_lv5_2 = "10";
const sc_lv<3> pi::ap_const_lv3_3 = "11";
const sc_lv<4> pi::ap_const_lv4_4 = "100";
const sc_lv<32> pi::ap_const_lv32_A = "1010";

pi::pi(sc_module_name name) : sc_module(name), mVcdFile(0) {
    tempA_U = new pi_tempA("tempA_U");
    tempA_U->clk(ap_clk);
    tempA_U->reset(ap_rst);
    tempA_U->address0(tempA_address0);
    tempA_U->ce0(tempA_ce0);
    tempA_U->we0(tempA_we0);
    tempA_U->d0(tempA_d0);
    tempA_U->q0(tempA_q0);
    tempA_U->address1(tempA_address1);
    tempA_U->ce1(tempA_ce1);
    tempA_U->we1(tempA_we1);
    tempA_U->d1(tempA_d1);
    tempA_U->q1(tempA_q1);
    crypto_sign_urem_bkb_U6 = new crypto_sign_urem_bkb<1,8,4,4,4>("crypto_sign_urem_bkb_U6");
    crypto_sign_urem_bkb_U6->clk(ap_clk);
    crypto_sign_urem_bkb_U6->reset(ap_rst);
    crypto_sign_urem_bkb_U6->din0(grp_fu_358_p0);
    crypto_sign_urem_bkb_U6->din1(ap_var_for_const0);
    crypto_sign_urem_bkb_U6->ce(ap_var_for_const1);
    crypto_sign_urem_bkb_U6->dout(grp_fu_358_p2);
    crypto_sign_urem_cud_U7 = new crypto_sign_urem_cud<1,8,4,4,3>("crypto_sign_urem_cud_U7");
    crypto_sign_urem_cud_U7->clk(ap_clk);
    crypto_sign_urem_cud_U7->reset(ap_rst);
    crypto_sign_urem_cud_U7->din0(grp_fu_369_p0);
    crypto_sign_urem_cud_U7->din1(ap_var_for_const0);
    crypto_sign_urem_cud_U7->ce(ap_var_for_const1);
    crypto_sign_urem_cud_U7->dout(grp_fu_369_p2);
    crypto_sign_urem_cud_U8 = new crypto_sign_urem_cud<1,8,4,4,3>("crypto_sign_urem_cud_U8");
    crypto_sign_urem_cud_U8->clk(ap_clk);
    crypto_sign_urem_cud_U8->reset(ap_rst);
    crypto_sign_urem_cud_U8->din0(grp_fu_380_p0);
    crypto_sign_urem_cud_U8->din1(ap_var_for_const0);
    crypto_sign_urem_cud_U8->ce(ap_var_for_const1);
    crypto_sign_urem_cud_U8->dout(grp_fu_380_p2);
    crypto_sign_urem_dEe_U9 = new crypto_sign_urem_dEe<1,9,5,4,5>("crypto_sign_urem_dEe_U9");
    crypto_sign_urem_dEe_U9->clk(ap_clk);
    crypto_sign_urem_dEe_U9->reset(ap_rst);
    crypto_sign_urem_dEe_U9->din0(grp_fu_395_p0);
    crypto_sign_urem_dEe_U9->din1(grp_fu_395_p1);
    crypto_sign_urem_dEe_U9->ce(ap_var_for_const1);
    crypto_sign_urem_dEe_U9->dout(grp_fu_395_p2);
    crypto_sign_urem_dEe_U10 = new crypto_sign_urem_dEe<1,9,5,4,5>("crypto_sign_urem_dEe_U10");
    crypto_sign_urem_dEe_U10->clk(ap_clk);
    crypto_sign_urem_dEe_U10->reset(ap_rst);
    crypto_sign_urem_dEe_U10->din0(grp_fu_406_p0);
    crypto_sign_urem_dEe_U10->din1(grp_fu_406_p1);
    crypto_sign_urem_dEe_U10->ce(ap_var_for_const1);
    crypto_sign_urem_dEe_U10->dout(grp_fu_406_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln362_1_fu_292_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln362_fu_312_p1 );
    sensitive << ( zext_ln362_4_fu_333_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln364_1_fu_488_p1 );
    sensitive << ( ap_block_pp1_stage3 );
    sensitive << ( zext_ln364_8_fu_582_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln362_2_fu_303_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln362_3_fu_323_p1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_CS_fsm_pp1_stage4 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( zext_ln364_6_fu_519_p1 );
    sensitive << ( ap_block_pp1_stage4 );
    sensitive << ( zext_ln364_7_fu_551_p1 );
    sensitive << ( zext_ln364_9_fu_613_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage4 );
    sensitive << ( ap_block_pp1_stage4_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_A_d0);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( tempA_load_reg_745 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tempA_load_3_reg_775 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_A_d1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_CS_fsm_pp1_stage4 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tempA_load_1_reg_750 );
    sensitive << ( tempA_load_2_reg_770 );
    sensitive << ( tempA_load_4_reg_790 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage4 );

    SC_METHOD(thread_A_we0);
    sensitive << ( icmp_ln363_reg_682_pp1_iter1_reg );
    sensitive << ( icmp_ln363_reg_682_pp1_iter2_reg );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_A_we1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( icmp_ln363_reg_682_pp1_iter1_reg );
    sensitive << ( icmp_ln363_reg_682_pp1_iter2_reg );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage4 );
    sensitive << ( ap_block_pp1_stage4_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_add_ln362_1_fu_297_p2);
    sensitive << ( zext_ln362_6_fu_282_p1 );

    SC_METHOD(thread_add_ln362_2_fu_317_p2);
    sensitive << ( zext_ln362_5_fu_308_p1 );

    SC_METHOD(thread_add_ln362_3_fu_328_p2);
    sensitive << ( zext_ln362_5_reg_647 );

    SC_METHOD(thread_add_ln362_fu_286_p2);
    sensitive << ( zext_ln362_6_fu_282_p1 );

    SC_METHOD(thread_add_ln364_10_fu_545_p2);
    sensitive << ( zext_ln364_15_fu_541_p1 );
    sensitive << ( shl_ln364_3_fu_527_p3 );

    SC_METHOD(thread_add_ln364_12_fu_566_p2);
    sensitive << ( trunc_ln364_3_fu_556_p1 );

    SC_METHOD(thread_add_ln364_13_fu_576_p2);
    sensitive << ( zext_ln364_16_fu_572_p1 );
    sensitive << ( shl_ln364_fu_560_p2 );

    SC_METHOD(thread_add_ln364_15_fu_597_p2);
    sensitive << ( trunc_ln364_4_fu_587_p1 );

    SC_METHOD(thread_add_ln364_16_fu_607_p2);
    sensitive << ( zext_ln364_17_fu_603_p1 );
    sensitive << ( shl_ln364_4_fu_591_p2 );

    SC_METHOD(thread_add_ln364_1_fu_425_p2);
    sensitive << ( zext_ln364_11_fu_416_p1 );

    SC_METHOD(thread_add_ln364_3_fu_446_p2);
    sensitive << ( zext_ln364_10_reg_724 );

    SC_METHOD(thread_add_ln364_4_fu_478_p2);
    sensitive << ( zext_ln364_10_reg_724 );

    SC_METHOD(thread_add_ln364_5_fu_503_p2);
    sensitive << ( trunc_ln364_1_fu_492_p1 );

    SC_METHOD(thread_add_ln364_6_fu_513_p2);
    sensitive << ( zext_ln364_14_fu_509_p1 );
    sensitive << ( shl_ln364_2_fu_495_p3 );

    SC_METHOD(thread_add_ln364_7_fu_436_p2);
    sensitive << ( zext_ln364_11_reg_730 );

    SC_METHOD(thread_add_ln364_9_fu_535_p2);
    sensitive << ( trunc_ln364_2_fu_524_p1 );

    SC_METHOD(thread_add_ln364_fu_472_p2);
    sensitive << ( shl_ln364_1_fu_464_p3 );
    sensitive << ( zext_ln364_13_fu_456_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);

    SC_METHOD(thread_ap_block_pp1_stage2);

    SC_METHOD(thread_ap_block_pp1_stage2_11001);

    SC_METHOD(thread_ap_block_pp1_stage2_subdone);

    SC_METHOD(thread_ap_block_pp1_stage3);

    SC_METHOD(thread_ap_block_pp1_stage3_11001);

    SC_METHOD(thread_ap_block_pp1_stage3_subdone);

    SC_METHOD(thread_ap_block_pp1_stage4);

    SC_METHOD(thread_ap_block_pp1_stage4_11001);

    SC_METHOD(thread_ap_block_pp1_stage4_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage3_iter0);

    SC_METHOD(thread_ap_block_state11_pp1_stage4_iter0);

    SC_METHOD(thread_ap_block_state12_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state13_pp1_stage1_iter1);

    SC_METHOD(thread_ap_block_state14_pp1_stage2_iter1);

    SC_METHOD(thread_ap_block_state15_pp1_stage3_iter1);

    SC_METHOD(thread_ap_block_state16_pp1_stage4_iter1);

    SC_METHOD(thread_ap_block_state17_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state18_pp1_stage1_iter2);

    SC_METHOD(thread_ap_block_state19_pp1_stage2_iter2);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state8_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state9_pp1_stage2_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln361_fu_270_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state7);
    sensitive << ( icmp_ln363_fu_338_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_ap_phi_mux_x_0_phi_fu_250_p4);
    sensitive << ( x_0_reg_246 );
    sensitive << ( icmp_ln361_reg_618 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( x_reg_622 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_x_1_phi_fu_262_p4);
    sensitive << ( x_1_reg_258 );
    sensitive << ( icmp_ln363_reg_682 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( x_6_reg_686 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_grp_fu_358_p0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_x_1_phi_fu_262_p4 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_grp_fu_369_p0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( shl_ln_reg_691 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_grp_fu_380_p0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( shl_ln_reg_691 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2 );

    SC_METHOD(thread_grp_fu_395_p0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( zext_ln364_12_fu_386_p1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_grp_fu_395_p1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_grp_fu_406_p0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( zext_ln364_12_reg_709 );
    sensitive << ( ap_CS_fsm_pp1_stage4 );
    sensitive << ( ap_block_pp1_stage4 );

    SC_METHOD(thread_grp_fu_406_p1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage4 );
    sensitive << ( ap_block_pp1_stage4 );

    SC_METHOD(thread_icmp_ln361_fu_270_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_x_0_phi_fu_250_p4 );

    SC_METHOD(thread_icmp_ln363_fu_338_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_x_1_phi_fu_262_p4 );

    SC_METHOD(thread_shl_ln364_1_fu_464_p3);
    sensitive << ( trunc_ln364_fu_460_p1 );

    SC_METHOD(thread_shl_ln364_2_fu_495_p3);
    sensitive << ( trunc_ln364_1_fu_492_p1 );

    SC_METHOD(thread_shl_ln364_3_fu_527_p3);
    sensitive << ( trunc_ln364_2_fu_524_p1 );

    SC_METHOD(thread_shl_ln364_4_fu_591_p2);
    sensitive << ( grp_fu_406_p2 );

    SC_METHOD(thread_shl_ln364_fu_560_p2);
    sensitive << ( grp_fu_395_p2 );

    SC_METHOD(thread_shl_ln_fu_350_p3);
    sensitive << ( ap_phi_mux_x_1_phi_fu_262_p4 );

    SC_METHOD(thread_tempA_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln362_1_reg_627 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln362_3_reg_662 );
    sensitive << ( zext_ln362_4_reg_672 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln364_5_fu_431_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln364_3_fu_451_p1 );

    SC_METHOD(thread_tempA_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln362_2_reg_637 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln362_reg_652 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln364_fu_420_p1 );
    sensitive << ( zext_ln364_2_fu_441_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln364_4_fu_483_p1 );
    sensitive << ( ap_block_pp1_stage2 );

    SC_METHOD(thread_tempA_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tempA_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_tempA_d0);
    sensitive << ( A_q0 );
    sensitive << ( A_q1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tempA_d1);
    sensitive << ( A_q0 );
    sensitive << ( A_q1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tempA_we0);
    sensitive << ( icmp_ln361_reg_618 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tempA_we1);
    sensitive << ( icmp_ln361_reg_618 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_trunc_ln364_1_fu_492_p1);
    sensitive << ( urem_ln364_1_reg_785 );

    SC_METHOD(thread_trunc_ln364_2_fu_524_p1);
    sensitive << ( urem_ln364_2_reg_795 );

    SC_METHOD(thread_trunc_ln364_3_fu_556_p1);
    sensitive << ( grp_fu_395_p2 );

    SC_METHOD(thread_trunc_ln364_4_fu_587_p1);
    sensitive << ( grp_fu_406_p2 );

    SC_METHOD(thread_trunc_ln364_fu_460_p1);
    sensitive << ( grp_fu_358_p2 );

    SC_METHOD(thread_x_6_fu_344_p2);
    sensitive << ( ap_phi_mux_x_1_phi_fu_262_p4 );

    SC_METHOD(thread_x_fu_276_p2);
    sensitive << ( ap_phi_mux_x_0_phi_fu_250_p4 );

    SC_METHOD(thread_zext_ln362_1_fu_292_p1);
    sensitive << ( add_ln362_fu_286_p2 );

    SC_METHOD(thread_zext_ln362_2_fu_303_p1);
    sensitive << ( add_ln362_1_fu_297_p2 );

    SC_METHOD(thread_zext_ln362_3_fu_323_p1);
    sensitive << ( add_ln362_2_fu_317_p2 );

    SC_METHOD(thread_zext_ln362_4_fu_333_p1);
    sensitive << ( add_ln362_3_fu_328_p2 );

    SC_METHOD(thread_zext_ln362_5_fu_308_p1);
    sensitive << ( x_0_reg_246 );

    SC_METHOD(thread_zext_ln362_6_fu_282_p1);
    sensitive << ( ap_phi_mux_x_0_phi_fu_250_p4 );

    SC_METHOD(thread_zext_ln362_fu_312_p1);
    sensitive << ( x_0_reg_246 );

    SC_METHOD(thread_zext_ln364_10_fu_412_p1);
    sensitive << ( x_1_reg_258 );

    SC_METHOD(thread_zext_ln364_11_fu_416_p1);
    sensitive << ( x_1_reg_258 );

    SC_METHOD(thread_zext_ln364_12_fu_386_p1);
    sensitive << ( shl_ln_reg_691 );

    SC_METHOD(thread_zext_ln364_13_fu_456_p1);
    sensitive << ( grp_fu_358_p2 );

    SC_METHOD(thread_zext_ln364_14_fu_509_p1);
    sensitive << ( add_ln364_5_fu_503_p2 );

    SC_METHOD(thread_zext_ln364_15_fu_541_p1);
    sensitive << ( add_ln364_9_fu_535_p2 );

    SC_METHOD(thread_zext_ln364_16_fu_572_p1);
    sensitive << ( add_ln364_12_fu_566_p2 );

    SC_METHOD(thread_zext_ln364_17_fu_603_p1);
    sensitive << ( add_ln364_15_fu_597_p2 );

    SC_METHOD(thread_zext_ln364_1_fu_488_p1);
    sensitive << ( add_ln364_reg_765 );

    SC_METHOD(thread_zext_ln364_2_fu_441_p1);
    sensitive << ( add_ln364_7_fu_436_p2 );

    SC_METHOD(thread_zext_ln364_3_fu_451_p1);
    sensitive << ( add_ln364_3_fu_446_p2 );

    SC_METHOD(thread_zext_ln364_4_fu_483_p1);
    sensitive << ( add_ln364_4_fu_478_p2 );

    SC_METHOD(thread_zext_ln364_5_fu_431_p1);
    sensitive << ( add_ln364_1_fu_425_p2 );

    SC_METHOD(thread_zext_ln364_6_fu_519_p1);
    sensitive << ( add_ln364_6_fu_513_p2 );

    SC_METHOD(thread_zext_ln364_7_fu_551_p1);
    sensitive << ( add_ln364_10_fu_545_p2 );

    SC_METHOD(thread_zext_ln364_8_fu_582_p1);
    sensitive << ( add_ln364_13_fu_576_p2 );

    SC_METHOD(thread_zext_ln364_9_fu_613_p1);
    sensitive << ( add_ln364_16_fu_607_p2 );

    SC_METHOD(thread_zext_ln364_fu_420_p1);
    sensitive << ( x_1_reg_258 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln361_fu_270_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln363_fu_338_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage4_subdone );
    sensitive << ( ap_block_pp1_stage2_subdone );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );
    sensitive << ( ap_block_pp1_stage3_subdone );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_we0, "(port)A_we0");
    sc_trace(mVcdFile, A_d0, "(port)A_d0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, x_0_reg_246, "x_0_reg_246");
    sc_trace(mVcdFile, x_1_reg_258, "x_1_reg_258");
    sc_trace(mVcdFile, icmp_ln361_fu_270_p2, "icmp_ln361_fu_270_p2");
    sc_trace(mVcdFile, icmp_ln361_reg_618, "icmp_ln361_reg_618");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, x_fu_276_p2, "x_fu_276_p2");
    sc_trace(mVcdFile, x_reg_622, "x_reg_622");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln362_1_fu_292_p1, "zext_ln362_1_fu_292_p1");
    sc_trace(mVcdFile, zext_ln362_1_reg_627, "zext_ln362_1_reg_627");
    sc_trace(mVcdFile, zext_ln362_2_fu_303_p1, "zext_ln362_2_fu_303_p1");
    sc_trace(mVcdFile, zext_ln362_2_reg_637, "zext_ln362_2_reg_637");
    sc_trace(mVcdFile, zext_ln362_5_fu_308_p1, "zext_ln362_5_fu_308_p1");
    sc_trace(mVcdFile, zext_ln362_5_reg_647, "zext_ln362_5_reg_647");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, zext_ln362_fu_312_p1, "zext_ln362_fu_312_p1");
    sc_trace(mVcdFile, zext_ln362_reg_652, "zext_ln362_reg_652");
    sc_trace(mVcdFile, zext_ln362_3_fu_323_p1, "zext_ln362_3_fu_323_p1");
    sc_trace(mVcdFile, zext_ln362_3_reg_662, "zext_ln362_3_reg_662");
    sc_trace(mVcdFile, zext_ln362_4_fu_333_p1, "zext_ln362_4_fu_333_p1");
    sc_trace(mVcdFile, zext_ln362_4_reg_672, "zext_ln362_4_reg_672");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, icmp_ln363_fu_338_p2, "icmp_ln363_fu_338_p2");
    sc_trace(mVcdFile, icmp_ln363_reg_682, "icmp_ln363_reg_682");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state7_pp1_stage0_iter0, "ap_block_state7_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage0_iter1, "ap_block_state12_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state17_pp1_stage0_iter2, "ap_block_state17_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, icmp_ln363_reg_682_pp1_iter1_reg, "icmp_ln363_reg_682_pp1_iter1_reg");
    sc_trace(mVcdFile, icmp_ln363_reg_682_pp1_iter2_reg, "icmp_ln363_reg_682_pp1_iter2_reg");
    sc_trace(mVcdFile, x_6_fu_344_p2, "x_6_fu_344_p2");
    sc_trace(mVcdFile, x_6_reg_686, "x_6_reg_686");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, shl_ln_fu_350_p3, "shl_ln_fu_350_p3");
    sc_trace(mVcdFile, shl_ln_reg_691, "shl_ln_reg_691");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage1_iter0, "ap_block_state8_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage1_iter1, "ap_block_state13_pp1_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state18_pp1_stage1_iter2, "ap_block_state18_pp1_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage2, "ap_CS_fsm_pp1_stage2");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage2_iter0, "ap_block_state9_pp1_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage2_iter1, "ap_block_state14_pp1_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage2_iter2, "ap_block_state19_pp1_stage2_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage2_11001, "ap_block_pp1_stage2_11001");
    sc_trace(mVcdFile, zext_ln364_12_fu_386_p1, "zext_ln364_12_fu_386_p1");
    sc_trace(mVcdFile, zext_ln364_12_reg_709, "zext_ln364_12_reg_709");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage3, "ap_CS_fsm_pp1_stage3");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage3_iter0, "ap_block_state10_pp1_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp1_stage3_iter1, "ap_block_state15_pp1_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage3_11001, "ap_block_pp1_stage3_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage4, "ap_CS_fsm_pp1_stage4");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage4_iter0, "ap_block_state11_pp1_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state16_pp1_stage4_iter1, "ap_block_state16_pp1_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage4_11001, "ap_block_pp1_stage4_11001");
    sc_trace(mVcdFile, zext_ln364_10_fu_412_p1, "zext_ln364_10_fu_412_p1");
    sc_trace(mVcdFile, zext_ln364_10_reg_724, "zext_ln364_10_reg_724");
    sc_trace(mVcdFile, zext_ln364_11_fu_416_p1, "zext_ln364_11_fu_416_p1");
    sc_trace(mVcdFile, zext_ln364_11_reg_730, "zext_ln364_11_reg_730");
    sc_trace(mVcdFile, tempA_q1, "tempA_q1");
    sc_trace(mVcdFile, tempA_load_reg_745, "tempA_load_reg_745");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, tempA_q0, "tempA_q0");
    sc_trace(mVcdFile, tempA_load_1_reg_750, "tempA_load_1_reg_750");
    sc_trace(mVcdFile, add_ln364_fu_472_p2, "add_ln364_fu_472_p2");
    sc_trace(mVcdFile, add_ln364_reg_765, "add_ln364_reg_765");
    sc_trace(mVcdFile, tempA_load_2_reg_770, "tempA_load_2_reg_770");
    sc_trace(mVcdFile, tempA_load_3_reg_775, "tempA_load_3_reg_775");
    sc_trace(mVcdFile, grp_fu_369_p2, "grp_fu_369_p2");
    sc_trace(mVcdFile, urem_ln364_1_reg_785, "urem_ln364_1_reg_785");
    sc_trace(mVcdFile, tempA_load_4_reg_790, "tempA_load_4_reg_790");
    sc_trace(mVcdFile, grp_fu_380_p2, "grp_fu_380_p2");
    sc_trace(mVcdFile, urem_ln364_2_reg_795, "urem_ln364_2_reg_795");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state7, "ap_condition_pp1_exit_iter0_state7");
    sc_trace(mVcdFile, ap_block_pp1_stage4_subdone, "ap_block_pp1_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage2_subdone, "ap_block_pp1_stage2_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, tempA_address0, "tempA_address0");
    sc_trace(mVcdFile, tempA_ce0, "tempA_ce0");
    sc_trace(mVcdFile, tempA_we0, "tempA_we0");
    sc_trace(mVcdFile, tempA_d0, "tempA_d0");
    sc_trace(mVcdFile, tempA_address1, "tempA_address1");
    sc_trace(mVcdFile, tempA_ce1, "tempA_ce1");
    sc_trace(mVcdFile, tempA_we1, "tempA_we1");
    sc_trace(mVcdFile, tempA_d1, "tempA_d1");
    sc_trace(mVcdFile, ap_phi_mux_x_0_phi_fu_250_p4, "ap_phi_mux_x_0_phi_fu_250_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_x_1_phi_fu_262_p4, "ap_phi_mux_x_1_phi_fu_262_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, zext_ln364_fu_420_p1, "zext_ln364_fu_420_p1");
    sc_trace(mVcdFile, zext_ln364_5_fu_431_p1, "zext_ln364_5_fu_431_p1");
    sc_trace(mVcdFile, zext_ln364_2_fu_441_p1, "zext_ln364_2_fu_441_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, zext_ln364_3_fu_451_p1, "zext_ln364_3_fu_451_p1");
    sc_trace(mVcdFile, zext_ln364_4_fu_483_p1, "zext_ln364_4_fu_483_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage2, "ap_block_pp1_stage2");
    sc_trace(mVcdFile, zext_ln364_1_fu_488_p1, "zext_ln364_1_fu_488_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage3, "ap_block_pp1_stage3");
    sc_trace(mVcdFile, zext_ln364_6_fu_519_p1, "zext_ln364_6_fu_519_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage4, "ap_block_pp1_stage4");
    sc_trace(mVcdFile, zext_ln364_7_fu_551_p1, "zext_ln364_7_fu_551_p1");
    sc_trace(mVcdFile, zext_ln364_8_fu_582_p1, "zext_ln364_8_fu_582_p1");
    sc_trace(mVcdFile, zext_ln364_9_fu_613_p1, "zext_ln364_9_fu_613_p1");
    sc_trace(mVcdFile, zext_ln362_6_fu_282_p1, "zext_ln362_6_fu_282_p1");
    sc_trace(mVcdFile, add_ln362_fu_286_p2, "add_ln362_fu_286_p2");
    sc_trace(mVcdFile, add_ln362_1_fu_297_p2, "add_ln362_1_fu_297_p2");
    sc_trace(mVcdFile, add_ln362_2_fu_317_p2, "add_ln362_2_fu_317_p2");
    sc_trace(mVcdFile, add_ln362_3_fu_328_p2, "add_ln362_3_fu_328_p2");
    sc_trace(mVcdFile, grp_fu_358_p0, "grp_fu_358_p0");
    sc_trace(mVcdFile, grp_fu_369_p0, "grp_fu_369_p0");
    sc_trace(mVcdFile, grp_fu_380_p0, "grp_fu_380_p0");
    sc_trace(mVcdFile, grp_fu_395_p0, "grp_fu_395_p0");
    sc_trace(mVcdFile, grp_fu_395_p1, "grp_fu_395_p1");
    sc_trace(mVcdFile, grp_fu_406_p0, "grp_fu_406_p0");
    sc_trace(mVcdFile, grp_fu_406_p1, "grp_fu_406_p1");
    sc_trace(mVcdFile, add_ln364_1_fu_425_p2, "add_ln364_1_fu_425_p2");
    sc_trace(mVcdFile, add_ln364_7_fu_436_p2, "add_ln364_7_fu_436_p2");
    sc_trace(mVcdFile, add_ln364_3_fu_446_p2, "add_ln364_3_fu_446_p2");
    sc_trace(mVcdFile, grp_fu_358_p2, "grp_fu_358_p2");
    sc_trace(mVcdFile, trunc_ln364_fu_460_p1, "trunc_ln364_fu_460_p1");
    sc_trace(mVcdFile, shl_ln364_1_fu_464_p3, "shl_ln364_1_fu_464_p3");
    sc_trace(mVcdFile, zext_ln364_13_fu_456_p1, "zext_ln364_13_fu_456_p1");
    sc_trace(mVcdFile, add_ln364_4_fu_478_p2, "add_ln364_4_fu_478_p2");
    sc_trace(mVcdFile, trunc_ln364_1_fu_492_p1, "trunc_ln364_1_fu_492_p1");
    sc_trace(mVcdFile, add_ln364_5_fu_503_p2, "add_ln364_5_fu_503_p2");
    sc_trace(mVcdFile, zext_ln364_14_fu_509_p1, "zext_ln364_14_fu_509_p1");
    sc_trace(mVcdFile, shl_ln364_2_fu_495_p3, "shl_ln364_2_fu_495_p3");
    sc_trace(mVcdFile, add_ln364_6_fu_513_p2, "add_ln364_6_fu_513_p2");
    sc_trace(mVcdFile, trunc_ln364_2_fu_524_p1, "trunc_ln364_2_fu_524_p1");
    sc_trace(mVcdFile, add_ln364_9_fu_535_p2, "add_ln364_9_fu_535_p2");
    sc_trace(mVcdFile, zext_ln364_15_fu_541_p1, "zext_ln364_15_fu_541_p1");
    sc_trace(mVcdFile, shl_ln364_3_fu_527_p3, "shl_ln364_3_fu_527_p3");
    sc_trace(mVcdFile, add_ln364_10_fu_545_p2, "add_ln364_10_fu_545_p2");
    sc_trace(mVcdFile, grp_fu_395_p2, "grp_fu_395_p2");
    sc_trace(mVcdFile, trunc_ln364_3_fu_556_p1, "trunc_ln364_3_fu_556_p1");
    sc_trace(mVcdFile, add_ln364_12_fu_566_p2, "add_ln364_12_fu_566_p2");
    sc_trace(mVcdFile, zext_ln364_16_fu_572_p1, "zext_ln364_16_fu_572_p1");
    sc_trace(mVcdFile, shl_ln364_fu_560_p2, "shl_ln364_fu_560_p2");
    sc_trace(mVcdFile, add_ln364_13_fu_576_p2, "add_ln364_13_fu_576_p2");
    sc_trace(mVcdFile, grp_fu_406_p2, "grp_fu_406_p2");
    sc_trace(mVcdFile, trunc_ln364_4_fu_587_p1, "trunc_ln364_4_fu_587_p1");
    sc_trace(mVcdFile, add_ln364_15_fu_597_p2, "add_ln364_15_fu_597_p2");
    sc_trace(mVcdFile, zext_ln364_17_fu_603_p1, "zext_ln364_17_fu_603_p1");
    sc_trace(mVcdFile, shl_ln364_4_fu_591_p2, "shl_ln364_4_fu_591_p2");
    sc_trace(mVcdFile, add_ln364_16_fu_607_p2, "add_ln364_16_fu_607_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage3_subdone, "ap_block_pp1_stage3_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

pi::~pi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete tempA_U;
    delete crypto_sign_urem_bkb_U6;
    delete crypto_sign_urem_cud_U7;
    delete crypto_sign_urem_cud_U8;
    delete crypto_sign_urem_dEe_U9;
    delete crypto_sign_urem_dEe_U10;
}

void pi::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void pi::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv4_5;
}

void pi::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state7.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage4_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage4_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln361_reg_618.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        x_0_reg_246 = x_reg_622.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_0_reg_246 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        x_1_reg_258 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        x_1_reg_258 = x_6_reg_686.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter1_reg.read()))) {
        add_ln364_reg_765 = add_ln364_fu_472_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln361_reg_618 = icmp_ln361_fu_270_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln363_reg_682 = icmp_ln363_fu_338_p2.read();
        icmp_ln363_reg_682_pp1_iter1_reg = icmp_ln363_reg_682.read();
        icmp_ln363_reg_682_pp1_iter2_reg = icmp_ln363_reg_682_pp1_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_fu_338_p2.read()))) {
        shl_ln_reg_691 = shl_ln_fu_350_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter1_reg.read()))) {
        tempA_load_1_reg_750 = tempA_q0.read();
        tempA_load_reg_745 = tempA_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter1_reg.read()))) {
        tempA_load_2_reg_770 = tempA_q1.read();
        tempA_load_3_reg_775 = tempA_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter1_reg.read()))) {
        tempA_load_4_reg_790 = tempA_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter1_reg.read()))) {
        urem_ln364_1_reg_785 = grp_fu_369_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage4_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter1_reg.read()))) {
        urem_ln364_2_reg_795 = grp_fu_380_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        x_6_reg_686 = x_6_fu_344_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        x_reg_622 = x_fu_276_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln361_fu_270_p2.read(), ap_const_lv1_0))) {
        zext_ln362_1_reg_627 = zext_ln362_1_fu_292_p1.read();
        zext_ln362_2_reg_637 = zext_ln362_2_fu_303_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln361_reg_618.read(), ap_const_lv1_0))) {
        zext_ln362_3_reg_662 = zext_ln362_3_fu_323_p1.read();
        zext_ln362_5_reg_647 = zext_ln362_5_fu_308_p1.read();
        zext_ln362_reg_652 = zext_ln362_fu_312_p1.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln361_reg_618.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        zext_ln362_4_reg_672 = zext_ln362_4_fu_333_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682.read()))) {
        zext_ln364_10_reg_724 = zext_ln364_10_fu_412_p1.read();
        zext_ln364_11_reg_730 = zext_ln364_11_fu_416_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0))) {
        zext_ln364_12_reg_709 = zext_ln364_12_fu_386_p1.read();
    }
}

void pi::thread_A_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        A_address0 =  (sc_lv<5>) (zext_ln364_8_fu_582_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<5>) (zext_ln364_1_fu_488_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<5>) (zext_ln362_4_fu_333_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<5>) (zext_ln362_fu_312_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<5>) (zext_ln362_1_fu_292_p1.read());
    } else {
        A_address0 = "XXXXX";
    }
}

void pi::thread_A_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        A_address1 =  (sc_lv<5>) (zext_ln364_9_fu_613_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        A_address1 =  (sc_lv<5>) (zext_ln364_7_fu_551_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage4.read(), ap_const_boolean_0))) {
        A_address1 =  (sc_lv<5>) (zext_ln364_6_fu_519_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        A_address1 =  (sc_lv<5>) (zext_ln362_3_fu_323_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        A_address1 =  (sc_lv<5>) (zext_ln362_2_fu_303_p1.read());
    } else {
        A_address1 = "XXXXX";
    }
}

void pi::thread_A_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read())))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void pi::thread_A_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage4_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read())))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void pi::thread_A_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        A_d0 = tempA_load_3_reg_775.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        A_d0 = tempA_load_reg_745.read();
    } else {
        A_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void pi::thread_A_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        A_d1 = tempA_load_4_reg_790.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        A_d1 = tempA_load_2_reg_770.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage4.read(), ap_const_boolean_0))) {
        A_d1 = tempA_load_1_reg_750.read();
    } else {
        A_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void pi::thread_A_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter2_reg.read())))) {
        A_we0 = ap_const_logic_1;
    } else {
        A_we0 = ap_const_logic_0;
    }
}

void pi::thread_A_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage4_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682_pp1_iter2_reg.read())))) {
        A_we1 = ap_const_logic_1;
    } else {
        A_we1 = ap_const_logic_0;
    }
}

void pi::thread_add_ln362_1_fu_297_p2() {
    add_ln362_1_fu_297_p2 = (!zext_ln362_6_fu_282_p1.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln362_6_fu_282_p1.read()) + sc_bigint<4>(ap_const_lv4_A));
}

void pi::thread_add_ln362_2_fu_317_p2() {
    add_ln362_2_fu_317_p2 = (!zext_ln362_5_fu_308_p1.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln362_5_fu_308_p1.read()) + sc_biguint<5>(ap_const_lv5_F));
}

void pi::thread_add_ln362_3_fu_328_p2() {
    add_ln362_3_fu_328_p2 = (!zext_ln362_5_reg_647.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln362_5_reg_647.read()) + sc_bigint<5>(ap_const_lv5_14));
}

void pi::thread_add_ln362_fu_286_p2() {
    add_ln362_fu_286_p2 = (!zext_ln362_6_fu_282_p1.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln362_6_fu_282_p1.read()) + sc_biguint<4>(ap_const_lv4_5));
}

void pi::thread_add_ln364_10_fu_545_p2() {
    add_ln364_10_fu_545_p2 = (!zext_ln364_15_fu_541_p1.read().is_01() || !shl_ln364_3_fu_527_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln364_15_fu_541_p1.read()) + sc_biguint<5>(shl_ln364_3_fu_527_p3.read()));
}

void pi::thread_add_ln364_12_fu_566_p2() {
    add_ln364_12_fu_566_p2 = (!ap_const_lv3_3.is_01() || !trunc_ln364_3_fu_556_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_3) + sc_biguint<3>(trunc_ln364_3_fu_556_p1.read()));
}

void pi::thread_add_ln364_13_fu_576_p2() {
    add_ln364_13_fu_576_p2 = (!zext_ln364_16_fu_572_p1.read().is_01() || !shl_ln364_fu_560_p2.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln364_16_fu_572_p1.read()) + sc_biguint<5>(shl_ln364_fu_560_p2.read()));
}

void pi::thread_add_ln364_15_fu_597_p2() {
    add_ln364_15_fu_597_p2 = (!ap_const_lv4_4.is_01() || !trunc_ln364_4_fu_587_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_4) + sc_biguint<4>(trunc_ln364_4_fu_587_p1.read()));
}

void pi::thread_add_ln364_16_fu_607_p2() {
    add_ln364_16_fu_607_p2 = (!zext_ln364_17_fu_603_p1.read().is_01() || !shl_ln364_4_fu_591_p2.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln364_17_fu_603_p1.read()) + sc_biguint<5>(shl_ln364_4_fu_591_p2.read()));
}

void pi::thread_add_ln364_1_fu_425_p2() {
    add_ln364_1_fu_425_p2 = (!ap_const_lv4_5.is_01() || !zext_ln364_11_fu_416_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_5) + sc_biguint<4>(zext_ln364_11_fu_416_p1.read()));
}

void pi::thread_add_ln364_3_fu_446_p2() {
    add_ln364_3_fu_446_p2 = (!ap_const_lv5_F.is_01() || !zext_ln364_10_reg_724.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_F) + sc_biguint<5>(zext_ln364_10_reg_724.read()));
}

void pi::thread_add_ln364_4_fu_478_p2() {
    add_ln364_4_fu_478_p2 = (!ap_const_lv5_14.is_01() || !zext_ln364_10_reg_724.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_14) + sc_biguint<5>(zext_ln364_10_reg_724.read()));
}

void pi::thread_add_ln364_5_fu_503_p2() {
    add_ln364_5_fu_503_p2 = (!ap_const_lv3_1.is_01() || !trunc_ln364_1_fu_492_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(trunc_ln364_1_fu_492_p1.read()));
}

void pi::thread_add_ln364_6_fu_513_p2() {
    add_ln364_6_fu_513_p2 = (!zext_ln364_14_fu_509_p1.read().is_01() || !shl_ln364_2_fu_495_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln364_14_fu_509_p1.read()) + sc_biguint<5>(shl_ln364_2_fu_495_p3.read()));
}

void pi::thread_add_ln364_7_fu_436_p2() {
    add_ln364_7_fu_436_p2 = (!ap_const_lv4_A.is_01() || !zext_ln364_11_reg_730.read().is_01())? sc_lv<4>(): (sc_bigint<4>(ap_const_lv4_A) + sc_biguint<4>(zext_ln364_11_reg_730.read()));
}

void pi::thread_add_ln364_9_fu_535_p2() {
    add_ln364_9_fu_535_p2 = (!ap_const_lv3_2.is_01() || !trunc_ln364_2_fu_524_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_2) + sc_biguint<3>(trunc_ln364_2_fu_524_p1.read()));
}

void pi::thread_add_ln364_fu_472_p2() {
    add_ln364_fu_472_p2 = (!shl_ln364_1_fu_464_p3.read().is_01() || !zext_ln364_13_fu_456_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(shl_ln364_1_fu_464_p3.read()) + sc_biguint<5>(zext_ln364_13_fu_456_p1.read()));
}

void pi::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void pi::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void pi::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void pi::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[5];
}

void pi::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[6];
}

void pi::thread_ap_CS_fsm_pp1_stage2() {
    ap_CS_fsm_pp1_stage2 = ap_CS_fsm.read()[7];
}

void pi::thread_ap_CS_fsm_pp1_stage3() {
    ap_CS_fsm_pp1_stage3 = ap_CS_fsm.read()[8];
}

void pi::thread_ap_CS_fsm_pp1_stage4() {
    ap_CS_fsm_pp1_stage4 = ap_CS_fsm.read()[9];
}

void pi::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pi::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[10];
}

void pi::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[4];
}

void pi::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage2() {
    ap_block_pp1_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage2_11001() {
    ap_block_pp1_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage2_subdone() {
    ap_block_pp1_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage3() {
    ap_block_pp1_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage3_11001() {
    ap_block_pp1_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage3_subdone() {
    ap_block_pp1_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage4() {
    ap_block_pp1_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage4_11001() {
    ap_block_pp1_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_pp1_stage4_subdone() {
    ap_block_pp1_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state10_pp1_stage3_iter0() {
    ap_block_state10_pp1_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state11_pp1_stage4_iter0() {
    ap_block_state11_pp1_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state12_pp1_stage0_iter1() {
    ap_block_state12_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state13_pp1_stage1_iter1() {
    ap_block_state13_pp1_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state14_pp1_stage2_iter1() {
    ap_block_state14_pp1_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state15_pp1_stage3_iter1() {
    ap_block_state15_pp1_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state16_pp1_stage4_iter1() {
    ap_block_state16_pp1_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state17_pp1_stage0_iter2() {
    ap_block_state17_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state18_pp1_stage1_iter2() {
    ap_block_state18_pp1_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state19_pp1_stage2_iter2() {
    ap_block_state19_pp1_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state7_pp1_stage0_iter0() {
    ap_block_state7_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state8_pp1_stage1_iter0() {
    ap_block_state8_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_block_state9_pp1_stage2_iter0() {
    ap_block_state9_pp1_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pi::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln361_fu_270_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void pi::thread_ap_condition_pp1_exit_iter0_state7() {
    if (esl_seteq<1,1,1>(icmp_ln363_fu_338_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state7 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state7 = ap_const_logic_0;
    }
}

void pi::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pi::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void pi::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void pi::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pi::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void pi::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void pi::thread_ap_phi_mux_x_0_phi_fu_250_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln361_reg_618.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_x_0_phi_fu_250_p4 = x_reg_622.read();
    } else {
        ap_phi_mux_x_0_phi_fu_250_p4 = x_0_reg_246.read();
    }
}

void pi::thread_ap_phi_mux_x_1_phi_fu_262_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln363_reg_682.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_x_1_phi_fu_262_p4 = x_6_reg_686.read();
    } else {
        ap_phi_mux_x_1_phi_fu_262_p4 = x_1_reg_258.read();
    }
}

void pi::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pi::thread_grp_fu_358_p0() {
    grp_fu_358_p0 = esl_concat<3,1>(ap_phi_mux_x_1_phi_fu_262_p4.read(), ap_const_lv1_0);
}

void pi::thread_grp_fu_369_p0() {
    grp_fu_369_p0 = (!ap_const_lv4_3.is_01() || !shl_ln_reg_691.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_3) + sc_biguint<4>(shl_ln_reg_691.read()));
}

void pi::thread_grp_fu_380_p0() {
    grp_fu_380_p0 = (!ap_const_lv4_6.is_01() || !shl_ln_reg_691.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_6) + sc_biguint<4>(shl_ln_reg_691.read()));
}

void pi::thread_grp_fu_395_p0() {
    grp_fu_395_p0 = (!ap_const_lv5_9.is_01() || !zext_ln364_12_fu_386_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_9) + sc_biguint<5>(zext_ln364_12_fu_386_p1.read()));
}

void pi::thread_grp_fu_395_p1() {
    grp_fu_395_p1 =  (sc_lv<4>) (ap_const_lv5_5);
}

void pi::thread_grp_fu_406_p0() {
    grp_fu_406_p0 = (!ap_const_lv5_C.is_01() || !zext_ln364_12_reg_709.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_C) + sc_biguint<5>(zext_ln364_12_reg_709.read()));
}

void pi::thread_grp_fu_406_p1() {
    grp_fu_406_p1 =  (sc_lv<4>) (ap_const_lv5_5);
}

void pi::thread_icmp_ln361_fu_270_p2() {
    icmp_ln361_fu_270_p2 = (!ap_phi_mux_x_0_phi_fu_250_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_x_0_phi_fu_250_p4.read() == ap_const_lv3_5);
}

void pi::thread_icmp_ln363_fu_338_p2() {
    icmp_ln363_fu_338_p2 = (!ap_phi_mux_x_1_phi_fu_262_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_x_1_phi_fu_262_p4.read() == ap_const_lv3_5);
}

void pi::thread_shl_ln364_1_fu_464_p3() {
    shl_ln364_1_fu_464_p3 = esl_concat<3,2>(trunc_ln364_fu_460_p1.read(), ap_const_lv2_0);
}

void pi::thread_shl_ln364_2_fu_495_p3() {
    shl_ln364_2_fu_495_p3 = esl_concat<3,2>(trunc_ln364_1_fu_492_p1.read(), ap_const_lv2_0);
}

void pi::thread_shl_ln364_3_fu_527_p3() {
    shl_ln364_3_fu_527_p3 = esl_concat<3,2>(trunc_ln364_2_fu_524_p1.read(), ap_const_lv2_0);
}

void pi::thread_shl_ln364_4_fu_591_p2() {
    shl_ln364_4_fu_591_p2 = (!ap_const_lv5_2.is_01())? sc_lv<5>(): grp_fu_406_p2.read() << (unsigned short)ap_const_lv5_2.to_uint();
}

void pi::thread_shl_ln364_fu_560_p2() {
    shl_ln364_fu_560_p2 = (!ap_const_lv5_2.is_01())? sc_lv<5>(): grp_fu_395_p2.read() << (unsigned short)ap_const_lv5_2.to_uint();
}

void pi::thread_shl_ln_fu_350_p3() {
    shl_ln_fu_350_p3 = esl_concat<3,1>(ap_phi_mux_x_1_phi_fu_262_p4.read(), ap_const_lv1_0);
}

void pi::thread_tempA_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        tempA_address0 =  (sc_lv<5>) (zext_ln364_3_fu_451_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        tempA_address0 =  (sc_lv<5>) (zext_ln364_5_fu_431_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        tempA_address0 =  (sc_lv<5>) (zext_ln362_4_reg_672.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        tempA_address0 =  (sc_lv<5>) (zext_ln362_3_reg_662.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        tempA_address0 =  (sc_lv<5>) (zext_ln362_1_reg_627.read());
    } else {
        tempA_address0 = "XXXXX";
    }
}

void pi::thread_tempA_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        tempA_address1 =  (sc_lv<5>) (zext_ln364_4_fu_483_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        tempA_address1 =  (sc_lv<5>) (zext_ln364_2_fu_441_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        tempA_address1 =  (sc_lv<5>) (zext_ln364_fu_420_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        tempA_address1 =  (sc_lv<5>) (zext_ln362_reg_652.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        tempA_address1 =  (sc_lv<5>) (zext_ln362_2_reg_637.read());
    } else {
        tempA_address1 = "XXXXX";
    }
}

void pi::thread_tempA_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        tempA_ce0 = ap_const_logic_1;
    } else {
        tempA_ce0 = ap_const_logic_0;
    }
}

void pi::thread_tempA_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        tempA_ce1 = ap_const_logic_1;
    } else {
        tempA_ce1 = ap_const_logic_0;
    }
}

void pi::thread_tempA_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        tempA_d0 = A_q1.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0)))) {
        tempA_d0 = A_q0.read();
    } else {
        tempA_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void pi::thread_tempA_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            tempA_d1 = A_q0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            tempA_d1 = A_q1.read();
        } else {
            tempA_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        tempA_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void pi::thread_tempA_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln361_reg_618.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln361_reg_618.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln361_reg_618.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        tempA_we0 = ap_const_logic_1;
    } else {
        tempA_we0 = ap_const_logic_0;
    }
}

void pi::thread_tempA_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln361_reg_618.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln361_reg_618.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        tempA_we1 = ap_const_logic_1;
    } else {
        tempA_we1 = ap_const_logic_0;
    }
}

void pi::thread_trunc_ln364_1_fu_492_p1() {
    trunc_ln364_1_fu_492_p1 = urem_ln364_1_reg_785.read().range(3-1, 0);
}

void pi::thread_trunc_ln364_2_fu_524_p1() {
    trunc_ln364_2_fu_524_p1 = urem_ln364_2_reg_795.read().range(3-1, 0);
}

void pi::thread_trunc_ln364_3_fu_556_p1() {
    trunc_ln364_3_fu_556_p1 = grp_fu_395_p2.read().range(3-1, 0);
}

void pi::thread_trunc_ln364_4_fu_587_p1() {
    trunc_ln364_4_fu_587_p1 = grp_fu_406_p2.read().range(4-1, 0);
}

void pi::thread_trunc_ln364_fu_460_p1() {
    trunc_ln364_fu_460_p1 = grp_fu_358_p2.read().range(3-1, 0);
}

void pi::thread_x_6_fu_344_p2() {
    x_6_fu_344_p2 = (!ap_phi_mux_x_1_phi_fu_262_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_x_1_phi_fu_262_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pi::thread_x_fu_276_p2() {
    x_fu_276_p2 = (!ap_phi_mux_x_0_phi_fu_250_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_x_0_phi_fu_250_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pi::thread_zext_ln362_1_fu_292_p1() {
    zext_ln362_1_fu_292_p1 = esl_zext<64,4>(add_ln362_fu_286_p2.read());
}

void pi::thread_zext_ln362_2_fu_303_p1() {
    zext_ln362_2_fu_303_p1 = esl_zext<64,4>(add_ln362_1_fu_297_p2.read());
}

void pi::thread_zext_ln362_3_fu_323_p1() {
    zext_ln362_3_fu_323_p1 = esl_zext<64,5>(add_ln362_2_fu_317_p2.read());
}

void pi::thread_zext_ln362_4_fu_333_p1() {
    zext_ln362_4_fu_333_p1 = esl_zext<64,5>(add_ln362_3_fu_328_p2.read());
}

void pi::thread_zext_ln362_5_fu_308_p1() {
    zext_ln362_5_fu_308_p1 = esl_zext<5,3>(x_0_reg_246.read());
}

void pi::thread_zext_ln362_6_fu_282_p1() {
    zext_ln362_6_fu_282_p1 = esl_zext<4,3>(ap_phi_mux_x_0_phi_fu_250_p4.read());
}

void pi::thread_zext_ln362_fu_312_p1() {
    zext_ln362_fu_312_p1 = esl_zext<64,3>(x_0_reg_246.read());
}

void pi::thread_zext_ln364_10_fu_412_p1() {
    zext_ln364_10_fu_412_p1 = esl_zext<5,3>(x_1_reg_258.read());
}

void pi::thread_zext_ln364_11_fu_416_p1() {
    zext_ln364_11_fu_416_p1 = esl_zext<4,3>(x_1_reg_258.read());
}

void pi::thread_zext_ln364_12_fu_386_p1() {
    zext_ln364_12_fu_386_p1 = esl_zext<5,4>(shl_ln_reg_691.read());
}

void pi::thread_zext_ln364_13_fu_456_p1() {
    zext_ln364_13_fu_456_p1 = esl_zext<5,4>(grp_fu_358_p2.read());
}

void pi::thread_zext_ln364_14_fu_509_p1() {
    zext_ln364_14_fu_509_p1 = esl_zext<5,3>(add_ln364_5_fu_503_p2.read());
}

void pi::thread_zext_ln364_15_fu_541_p1() {
    zext_ln364_15_fu_541_p1 = esl_zext<5,3>(add_ln364_9_fu_535_p2.read());
}

void pi::thread_zext_ln364_16_fu_572_p1() {
    zext_ln364_16_fu_572_p1 = esl_zext<5,3>(add_ln364_12_fu_566_p2.read());
}

void pi::thread_zext_ln364_17_fu_603_p1() {
    zext_ln364_17_fu_603_p1 = esl_zext<5,4>(add_ln364_15_fu_597_p2.read());
}

void pi::thread_zext_ln364_1_fu_488_p1() {
    zext_ln364_1_fu_488_p1 = esl_zext<64,5>(add_ln364_reg_765.read());
}

void pi::thread_zext_ln364_2_fu_441_p1() {
    zext_ln364_2_fu_441_p1 = esl_zext<64,4>(add_ln364_7_fu_436_p2.read());
}

void pi::thread_zext_ln364_3_fu_451_p1() {
    zext_ln364_3_fu_451_p1 = esl_zext<64,5>(add_ln364_3_fu_446_p2.read());
}

void pi::thread_zext_ln364_4_fu_483_p1() {
    zext_ln364_4_fu_483_p1 = esl_zext<64,5>(add_ln364_4_fu_478_p2.read());
}

void pi::thread_zext_ln364_5_fu_431_p1() {
    zext_ln364_5_fu_431_p1 = esl_zext<64,4>(add_ln364_1_fu_425_p2.read());
}

void pi::thread_zext_ln364_6_fu_519_p1() {
    zext_ln364_6_fu_519_p1 = esl_zext<64,5>(add_ln364_6_fu_513_p2.read());
}

void pi::thread_zext_ln364_7_fu_551_p1() {
    zext_ln364_7_fu_551_p1 = esl_zext<64,5>(add_ln364_10_fu_545_p2.read());
}

void pi::thread_zext_ln364_8_fu_582_p1() {
    zext_ln364_8_fu_582_p1 = esl_zext<64,5>(add_ln364_13_fu_576_p2.read());
}

void pi::thread_zext_ln364_9_fu_613_p1() {
    zext_ln364_9_fu_613_p1 = esl_zext<64,5>(add_ln364_16_fu_607_p2.read());
}

void pi::thread_zext_ln364_fu_420_p1() {
    zext_ln364_fu_420_p1 = esl_zext<64,3>(x_1_reg_258.read());
}

void pi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln361_fu_270_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln361_fu_270_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln363_fu_338_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln363_fu_338_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

