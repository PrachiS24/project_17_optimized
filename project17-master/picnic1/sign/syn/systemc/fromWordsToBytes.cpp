// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fromWordsToBytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fromWordsToBytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fromWordsToBytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> fromWordsToBytes::ap_ST_fsm_state1 = "1";
const sc_lv<3> fromWordsToBytes::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> fromWordsToBytes::ap_ST_fsm_state5 = "100";
const bool fromWordsToBytes::ap_const_boolean_1 = true;
const sc_lv<32> fromWordsToBytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fromWordsToBytes::ap_const_lv32_1 = "1";
const bool fromWordsToBytes::ap_const_boolean_0 = false;
const sc_lv<1> fromWordsToBytes::ap_const_lv1_0 = "0";
const sc_lv<1> fromWordsToBytes::ap_const_lv1_1 = "1";
const sc_lv<8> fromWordsToBytes::ap_const_lv8_0 = "00000000";
const sc_lv<5> fromWordsToBytes::ap_const_lv5_0 = "00000";
const sc_lv<4> fromWordsToBytes::ap_const_lv4_0 = "0000";
const sc_lv<8> fromWordsToBytes::ap_const_lv8_C8 = "11001000";
const sc_lv<8> fromWordsToBytes::ap_const_lv8_1 = "1";
const sc_lv<5> fromWordsToBytes::ap_const_lv5_1 = "1";
const sc_lv<4> fromWordsToBytes::ap_const_lv4_8 = "1000";
const sc_lv<4> fromWordsToBytes::ap_const_lv4_1 = "1";
const sc_lv<3> fromWordsToBytes::ap_const_lv3_0 = "000";
const sc_lv<32> fromWordsToBytes::ap_const_lv32_2 = "10";

fromWordsToBytes::fromWordsToBytes(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln280_fu_117_p2);
    sensitive << ( indvar_flatten_reg_78 );

    SC_METHOD(thread_add_ln282_fu_197_p2);
    sensitive << ( zext_ln281_fu_194_p1 );
    sensitive << ( shl_ln282_1_mid2_fu_187_p3 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln280_fu_111_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_93_p4);
    sensitive << ( i_0_reg_89 );
    sensitive << ( icmp_ln280_reg_208 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln280_1_reg_222 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_fu_123_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_93_p4 );

    SC_METHOD(thread_icmp_ln280_fu_111_p2);
    sensitive << ( indvar_flatten_reg_78 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln281_fu_129_p2);
    sensitive << ( j_0_reg_100 );
    sensitive << ( icmp_ln280_fu_111_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_160_p2);
    sensitive << ( select_ln280_fu_135_p3 );

    SC_METHOD(thread_lshr_ln282_fu_177_p2);
    sensitive << ( stateAsWords_q0 );
    sensitive << ( zext_ln282_fu_173_p1 );

    SC_METHOD(thread_select_ln280_1_fu_143_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_93_p4 );
    sensitive << ( icmp_ln281_fu_129_p2 );
    sensitive << ( i_fu_123_p2 );

    SC_METHOD(thread_select_ln280_fu_135_p3);
    sensitive << ( j_0_reg_100 );
    sensitive << ( icmp_ln281_fu_129_p2 );

    SC_METHOD(thread_shl_ln282_1_mid2_fu_187_p3);
    sensitive << ( select_ln280_1_reg_222_pp0_iter1_reg );

    SC_METHOD(thread_shl_ln_fu_166_p3);
    sensitive << ( trunc_ln282_reg_233 );

    SC_METHOD(thread_stateAsWords_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln280_fu_151_p1 );

    SC_METHOD(thread_stateAsWords_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_state_address0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln282_1_fu_203_p1 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_state_d0);
    sensitive << ( trunc_ln282_1_reg_243 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_state_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln280_reg_208_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_trunc_ln282_1_fu_183_p1);
    sensitive << ( lshr_ln282_fu_177_p2 );

    SC_METHOD(thread_trunc_ln282_fu_156_p1);
    sensitive << ( select_ln280_fu_135_p3 );

    SC_METHOD(thread_zext_ln280_fu_151_p1);
    sensitive << ( select_ln280_1_fu_143_p3 );

    SC_METHOD(thread_zext_ln281_fu_194_p1);
    sensitive << ( select_ln280_reg_217_pp0_iter1_reg );

    SC_METHOD(thread_zext_ln282_1_fu_203_p1);
    sensitive << ( add_ln282_fu_197_p2 );

    SC_METHOD(thread_zext_ln282_fu_173_p1);
    sensitive << ( shl_ln_fu_166_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln280_fu_111_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fromWordsToBytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_address0, "(port)state_address0");
    sc_trace(mVcdFile, state_ce0, "(port)state_ce0");
    sc_trace(mVcdFile, state_we0, "(port)state_we0");
    sc_trace(mVcdFile, state_d0, "(port)state_d0");
    sc_trace(mVcdFile, stateAsWords_address0, "(port)stateAsWords_address0");
    sc_trace(mVcdFile, stateAsWords_ce0, "(port)stateAsWords_ce0");
    sc_trace(mVcdFile, stateAsWords_q0, "(port)stateAsWords_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_78, "indvar_flatten_reg_78");
    sc_trace(mVcdFile, i_0_reg_89, "i_0_reg_89");
    sc_trace(mVcdFile, j_0_reg_100, "j_0_reg_100");
    sc_trace(mVcdFile, icmp_ln280_fu_111_p2, "icmp_ln280_fu_111_p2");
    sc_trace(mVcdFile, icmp_ln280_reg_208, "icmp_ln280_reg_208");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln280_reg_208_pp0_iter1_reg, "icmp_ln280_reg_208_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln280_fu_117_p2, "add_ln280_fu_117_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln280_fu_135_p3, "select_ln280_fu_135_p3");
    sc_trace(mVcdFile, select_ln280_reg_217, "select_ln280_reg_217");
    sc_trace(mVcdFile, select_ln280_reg_217_pp0_iter1_reg, "select_ln280_reg_217_pp0_iter1_reg");
    sc_trace(mVcdFile, select_ln280_1_fu_143_p3, "select_ln280_1_fu_143_p3");
    sc_trace(mVcdFile, select_ln280_1_reg_222, "select_ln280_1_reg_222");
    sc_trace(mVcdFile, select_ln280_1_reg_222_pp0_iter1_reg, "select_ln280_1_reg_222_pp0_iter1_reg");
    sc_trace(mVcdFile, trunc_ln282_fu_156_p1, "trunc_ln282_fu_156_p1");
    sc_trace(mVcdFile, trunc_ln282_reg_233, "trunc_ln282_reg_233");
    sc_trace(mVcdFile, j_fu_160_p2, "j_fu_160_p2");
    sc_trace(mVcdFile, trunc_ln282_1_fu_183_p1, "trunc_ln282_1_fu_183_p1");
    sc_trace(mVcdFile, trunc_ln282_1_reg_243, "trunc_ln282_1_reg_243");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_93_p4, "ap_phi_mux_i_0_phi_fu_93_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln280_fu_151_p1, "zext_ln280_fu_151_p1");
    sc_trace(mVcdFile, zext_ln282_1_fu_203_p1, "zext_ln282_1_fu_203_p1");
    sc_trace(mVcdFile, icmp_ln281_fu_129_p2, "icmp_ln281_fu_129_p2");
    sc_trace(mVcdFile, i_fu_123_p2, "i_fu_123_p2");
    sc_trace(mVcdFile, shl_ln_fu_166_p3, "shl_ln_fu_166_p3");
    sc_trace(mVcdFile, zext_ln282_fu_173_p1, "zext_ln282_fu_173_p1");
    sc_trace(mVcdFile, lshr_ln282_fu_177_p2, "lshr_ln282_fu_177_p2");
    sc_trace(mVcdFile, zext_ln281_fu_194_p1, "zext_ln281_fu_194_p1");
    sc_trace(mVcdFile, shl_ln282_1_mid2_fu_187_p3, "shl_ln282_1_mid2_fu_187_p3");
    sc_trace(mVcdFile, add_ln282_fu_197_p2, "add_ln282_fu_197_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

fromWordsToBytes::~fromWordsToBytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void fromWordsToBytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln280_reg_208.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_89 = select_ln280_1_reg_222.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_89 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln280_fu_111_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_78 = add_ln280_fu_117_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_78 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln280_fu_111_p2.read(), ap_const_lv1_0))) {
        j_0_reg_100 = j_fu_160_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_100 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln280_reg_208 = icmp_ln280_fu_111_p2.read();
        icmp_ln280_reg_208_pp0_iter1_reg = icmp_ln280_reg_208.read();
        select_ln280_1_reg_222_pp0_iter1_reg = select_ln280_1_reg_222.read();
        select_ln280_reg_217_pp0_iter1_reg = select_ln280_reg_217.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln280_fu_111_p2.read(), ap_const_lv1_0))) {
        select_ln280_1_reg_222 = select_ln280_1_fu_143_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln280_fu_111_p2.read(), ap_const_lv1_0))) {
        select_ln280_reg_217 = select_ln280_fu_135_p3.read();
        trunc_ln282_reg_233 = trunc_ln282_fu_156_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln280_reg_208.read(), ap_const_lv1_0))) {
        trunc_ln282_1_reg_243 = trunc_ln282_1_fu_183_p1.read();
    }
}

void fromWordsToBytes::thread_add_ln280_fu_117_p2() {
    add_ln280_fu_117_p2 = (!indvar_flatten_reg_78.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(indvar_flatten_reg_78.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void fromWordsToBytes::thread_add_ln282_fu_197_p2() {
    add_ln282_fu_197_p2 = (!zext_ln281_fu_194_p1.read().is_01() || !shl_ln282_1_mid2_fu_187_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln281_fu_194_p1.read()) + sc_biguint<8>(shl_ln282_1_mid2_fu_187_p3.read()));
}

void fromWordsToBytes::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void fromWordsToBytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fromWordsToBytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void fromWordsToBytes::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromWordsToBytes::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromWordsToBytes::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromWordsToBytes::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromWordsToBytes::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromWordsToBytes::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromWordsToBytes::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln280_fu_111_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void fromWordsToBytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fromWordsToBytes::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void fromWordsToBytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fromWordsToBytes::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void fromWordsToBytes::thread_ap_phi_mux_i_0_phi_fu_93_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln280_reg_208.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_93_p4 = select_ln280_1_reg_222.read();
    } else {
        ap_phi_mux_i_0_phi_fu_93_p4 = i_0_reg_89.read();
    }
}

void fromWordsToBytes::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fromWordsToBytes::thread_i_fu_123_p2() {
    i_fu_123_p2 = (!ap_const_lv5_1.is_01() || !ap_phi_mux_i_0_phi_fu_93_p4.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(ap_phi_mux_i_0_phi_fu_93_p4.read()));
}

void fromWordsToBytes::thread_icmp_ln280_fu_111_p2() {
    icmp_ln280_fu_111_p2 = (!indvar_flatten_reg_78.read().is_01() || !ap_const_lv8_C8.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_78.read() == ap_const_lv8_C8);
}

void fromWordsToBytes::thread_icmp_ln281_fu_129_p2() {
    icmp_ln281_fu_129_p2 = (!j_0_reg_100.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_100.read() == ap_const_lv4_8);
}

void fromWordsToBytes::thread_j_fu_160_p2() {
    j_fu_160_p2 = (!ap_const_lv4_1.is_01() || !select_ln280_fu_135_p3.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(select_ln280_fu_135_p3.read()));
}

void fromWordsToBytes::thread_lshr_ln282_fu_177_p2() {
    lshr_ln282_fu_177_p2 = (!zext_ln282_fu_173_p1.read().is_01())? sc_lv<64>(): stateAsWords_q0.read() >> (unsigned short)zext_ln282_fu_173_p1.read().to_uint();
}

void fromWordsToBytes::thread_select_ln280_1_fu_143_p3() {
    select_ln280_1_fu_143_p3 = (!icmp_ln281_fu_129_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln281_fu_129_p2.read()[0].to_bool())? i_fu_123_p2.read(): ap_phi_mux_i_0_phi_fu_93_p4.read());
}

void fromWordsToBytes::thread_select_ln280_fu_135_p3() {
    select_ln280_fu_135_p3 = (!icmp_ln281_fu_129_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln281_fu_129_p2.read()[0].to_bool())? ap_const_lv4_0: j_0_reg_100.read());
}

void fromWordsToBytes::thread_shl_ln282_1_mid2_fu_187_p3() {
    shl_ln282_1_mid2_fu_187_p3 = esl_concat<5,3>(select_ln280_1_reg_222_pp0_iter1_reg.read(), ap_const_lv3_0);
}

void fromWordsToBytes::thread_shl_ln_fu_166_p3() {
    shl_ln_fu_166_p3 = esl_concat<3,3>(trunc_ln282_reg_233.read(), ap_const_lv3_0);
}

void fromWordsToBytes::thread_stateAsWords_address0() {
    stateAsWords_address0 =  (sc_lv<5>) (zext_ln280_fu_151_p1.read());
}

void fromWordsToBytes::thread_stateAsWords_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        stateAsWords_ce0 = ap_const_logic_1;
    } else {
        stateAsWords_ce0 = ap_const_logic_0;
    }
}

void fromWordsToBytes::thread_state_address0() {
    state_address0 =  (sc_lv<8>) (zext_ln282_1_fu_203_p1.read());
}

void fromWordsToBytes::thread_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        state_ce0 = ap_const_logic_1;
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void fromWordsToBytes::thread_state_d0() {
    state_d0 = trunc_ln282_1_reg_243.read();
}

void fromWordsToBytes::thread_state_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(icmp_ln280_reg_208_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        state_we0 = ap_const_logic_1;
    } else {
        state_we0 = ap_const_logic_0;
    }
}

void fromWordsToBytes::thread_trunc_ln282_1_fu_183_p1() {
    trunc_ln282_1_fu_183_p1 = lshr_ln282_fu_177_p2.read().range(8-1, 0);
}

void fromWordsToBytes::thread_trunc_ln282_fu_156_p1() {
    trunc_ln282_fu_156_p1 = select_ln280_fu_135_p3.read().range(3-1, 0);
}

void fromWordsToBytes::thread_zext_ln280_fu_151_p1() {
    zext_ln280_fu_151_p1 = esl_zext<64,5>(select_ln280_1_fu_143_p3.read());
}

void fromWordsToBytes::thread_zext_ln281_fu_194_p1() {
    zext_ln281_fu_194_p1 = esl_zext<8,4>(select_ln280_reg_217_pp0_iter1_reg.read());
}

void fromWordsToBytes::thread_zext_ln282_1_fu_203_p1() {
    zext_ln282_1_fu_203_p1 = esl_zext<64,8>(add_ln282_fu_197_p2.read());
}

void fromWordsToBytes::thread_zext_ln282_fu_173_p1() {
    zext_ln282_fu_173_p1 = esl_zext<64,6>(shl_ln_fu_166_p3.read());
}

void fromWordsToBytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln280_fu_111_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln280_fu_111_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

