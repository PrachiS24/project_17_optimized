-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity createRandomTape_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    seed_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    seed_ce0 : OUT STD_LOGIC;
    seed_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    seed_offset : IN STD_LOGIC_VECTOR (7 downto 0);
    salt_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    salt_0_ce0 : OUT STD_LOGIC;
    salt_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    roundNumber : IN STD_LOGIC_VECTOR (7 downto 0);
    tape_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    tape_ce0 : OUT STD_LOGIC;
    tape_we0 : OUT STD_LOGIC;
    tape_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    tape_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of createRandomTape_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (65 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (65 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (65 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (65 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (65 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (65 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (65 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (65 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (65 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (65 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (65 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (65 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_4B : STD_LOGIC_VECTOR (7 downto 0) := "01001011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_4B : STD_LOGIC_VECTOR (8 downto 0) := "001001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv64_A7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010100111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv8_1F : STD_LOGIC_VECTOR (7 downto 0) := "00011111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_20 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_const_lv8_C8 : STD_LOGIC_VECTOR (7 downto 0) := "11001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv10_14C : STD_LOGIC_VECTOR (9 downto 0) := "0101001100";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_HashUpdateIntLE_fu_433_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_498 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal grp_HashUpdateIntLE_fu_433_ap_ready : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_433_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal add_ln234_1_fu_533_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln234_1_reg_1113 : STD_LOGIC_VECTOR (14 downto 0);
    signal loop_23_fu_545_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ctx_sponge_byteIOInd_1_reg_1133 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal select_ln226_fu_577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_reg_1139 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln194_phi_fu_285_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_fu_595_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_reg_1157 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ctx_sponge_state_add_1_reg_1162 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln233_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_reg_1167 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln244_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fromWordsToBytes_fu_455_ap_ready : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_455_ap_done : STD_LOGIC;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal partialBlock_1_fu_658_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal partialBlock_1_reg_1179 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln194_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_3_reg_1184 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln226_1_fu_690_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_1_reg_1189 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal zext_ln231_fu_698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_reg_1195 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_706_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_reg_1200 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_24_fu_717_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_24_reg_1208 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln233_1_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_2_reg_1218 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_1_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_1_reg_1223 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i59_fu_790_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_block_state19_on_subcall_done : BOOLEAN;
    signal ctx_sponge_state_add_4_reg_1232 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal loop_25_fu_801_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ctx_sponge_byteIOInd_5_reg_1252 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal partialBlock_3_fu_835_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal partialBlock_3_reg_1263 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln194_1_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln226_2_fu_865_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_2_reg_1276 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal add_ln231_fu_873_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln231_reg_1283 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_26_fu_884_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_26_reg_1291 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal icmp_ln233_2_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_6_reg_1301 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_2_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_2_reg_1306 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i29_fu_951_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_block_state40_on_subcall_done : BOOLEAN;
    signal partialBlock_5_fu_976_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal partialBlock_5_reg_1318 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal icmp_ln194_2_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_byteIOInd_12_reg_1323 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln241_fu_982_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln241_reg_1328 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln226_3_fu_1007_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_3_reg_1333 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal zext_ln231_2_fu_1015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_2_reg_1339 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_13_fu_1023_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_13_reg_1344 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_27_fu_1034_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_27_reg_1352 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal icmp_ln233_3_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_7_reg_1362 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_3_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_3_reg_1367 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i_fu_1098_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_block_state49_on_subcall_done : BOOLEAN;
    signal ctx_sponge_state_add_8_reg_1376 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal stateAsWords_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_2_ce0 : STD_LOGIC;
    signal stateAsWords_2_we0 : STD_LOGIC;
    signal stateAsWords_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_2_ce1 : STD_LOGIC;
    signal stateAsWords_2_we1 : STD_LOGIC;
    signal stateAsWords_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_3_ce0 : STD_LOGIC;
    signal stateAsWords_3_we0 : STD_LOGIC;
    signal stateAsWords_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_3_ce1 : STD_LOGIC;
    signal stateAsWords_3_we1 : STD_LOGIC;
    signal stateAsWords_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_ce0 : STD_LOGIC;
    signal stateAsWords_we0 : STD_LOGIC;
    signal stateAsWords_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_ce1 : STD_LOGIC;
    signal stateAsWords_we1 : STD_LOGIC;
    signal stateAsWords_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_1_ce0 : STD_LOGIC;
    signal stateAsWords_1_we0 : STD_LOGIC;
    signal stateAsWords_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_1_ce1 : STD_LOGIC;
    signal stateAsWords_1_we1 : STD_LOGIC;
    signal stateAsWords_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_4_ce0 : STD_LOGIC;
    signal stateAsWords_4_we0 : STD_LOGIC;
    signal stateAsWords_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_4_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_4_ce1 : STD_LOGIC;
    signal stateAsWords_4_we1 : STD_LOGIC;
    signal stateAsWords_4_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_5_ce0 : STD_LOGIC;
    signal stateAsWords_5_we0 : STD_LOGIC;
    signal stateAsWords_5_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_5_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_5_ce1 : STD_LOGIC;
    signal stateAsWords_5_we1 : STD_LOGIC;
    signal stateAsWords_5_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_ce0 : STD_LOGIC;
    signal ctx_sponge_state_we0 : STD_LOGIC;
    signal ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_419_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_419_ap_done : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_419_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_419_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_419_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_419_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_419_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_419_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_419_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_419_data_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_419_data_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_1_fu_419_data_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_1_fu_419_dataByteLen : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdateIntLE_fu_433_ap_start : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_433_ap_idle : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_433_ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdateIntLE_fu_433_ctx_sponge_state_ce0 : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_433_ctx_sponge_state_we0 : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_433_ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdateIntLE_fu_433_ctx_sponge_byteIOInd : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HashUpdateIntLE_fu_433_x : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_KeccakP1600OnWords_fu_446_ap_start : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_446_ap_done : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_446_ap_idle : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_446_ap_ready : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_446_state_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakP1600OnWords_fu_446_state_ce0 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_446_state_we0 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_446_state_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_446_state_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_446_state_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakP1600OnWords_fu_446_state_ce1 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_446_state_we1 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_446_state_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_446_state_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromWordsToBytes_fu_455_ap_start : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_455_ap_idle : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_455_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromWordsToBytes_fu_455_state_ce0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_455_state_we0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_455_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromWordsToBytes_fu_455_stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fromWordsToBytes_fu_455_stateAsWords_ce0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_455_stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_461_ap_start : STD_LOGIC;
    signal grp_fromBytesToWords_fu_461_ap_done : STD_LOGIC;
    signal grp_fromBytesToWords_fu_461_ap_idle : STD_LOGIC;
    signal grp_fromBytesToWords_fu_461_ap_ready : STD_LOGIC;
    signal grp_fromBytesToWords_fu_461_stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fromBytesToWords_fu_461_stateAsWords_ce0 : STD_LOGIC;
    signal grp_fromBytesToWords_fu_461_stateAsWords_we0 : STD_LOGIC;
    signal grp_fromBytesToWords_fu_461_stateAsWords_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_461_stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_461_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromBytesToWords_fu_461_state_ce0 : STD_LOGIC;
    signal loop_0_i_reg_270 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln139_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln194_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_1_i_i_i_i_reg_292 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_0_i_i_i35_reg_303 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i36_reg_315 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i52_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal loop_0_i3_reg_338 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln139_1_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i5_reg_349 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_01_rec_i_i_i6_reg_361 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_1_i_i_i22_reg_373 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal i_0_i_i_i_reg_384 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i_reg_396 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal grp_KeccakWidth1600_Spon_1_fu_419_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal grp_HashUpdateIntLE_fu_433_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal grp_KeccakP1600OnWords_fu_446_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal grp_fromWordsToBytes_fu_455_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal grp_fromBytesToWords_fu_461_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal zext_ln140_fu_551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_fu_606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_1_fu_664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln234_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_2_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln140_1_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln234_1_fu_914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_4_fu_924_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_2_fu_1054_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_5_fu_1065_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_3_fu_1103_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctx_sponge_byteIOInd_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_2_fu_611_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_assign_1_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_3_fu_762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_4_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_6_fu_929_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_7_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_11_fu_1070_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln149_fu_626_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_2_fu_783_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_475_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_482_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_4_fu_944_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_7_fu_1091_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal tmp_fu_503_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_515_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln234_fu_511_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln234_1_fu_523_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln234_fu_527_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln226_fu_559_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_fu_571_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln234_3_fu_601_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_638_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln225_fu_654_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln225_fu_669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_1_fu_672_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_1_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_2_fu_684_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_1_fu_702_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln234_fu_723_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln194_fu_727_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln234_fu_731_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln234_3_fu_737_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln234_5_fu_741_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln234_6_fu_751_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_815_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln225_1_fu_831_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln225_1_fu_846_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_2_fu_849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_2_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_4_fu_860_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln234_1_fu_890_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln194_1_fu_894_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln234_2_fu_898_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln234_4_fu_904_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln234_7_fu_908_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln234_8_fu_919_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_956_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln225_2_fu_972_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln225_2_fu_986_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_3_fu_989_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_3_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_6_fu_1001_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_3_fu_1019_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln194_2_fu_1044_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln234_2_fu_1040_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln234_4_fu_1048_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln234_9_fu_1059_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (65 downto 0);

    component KeccakWidth1600_Spon_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_we0 : OUT STD_LOGIC;
        data_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dataByteLen : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component HashUpdateIntLE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctx_sponge_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_ce0 : OUT STD_LOGIC;
        ctx_sponge_state_we0 : OUT STD_LOGIC;
        ctx_sponge_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_byteIOInd : IN STD_LOGIC_VECTOR (31 downto 0);
        x : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakP1600OnWords IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce1 : OUT STD_LOGIC;
        state_we1 : OUT STD_LOGIC;
        state_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fromWordsToBytes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        stateAsWords_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        stateAsWords_ce0 : OUT STD_LOGIC;
        stateAsWords_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fromBytesToWords IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stateAsWords_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        stateAsWords_ce0 : OUT STD_LOGIC;
        stateAsWords_we0 : OUT STD_LOGIC;
        stateAsWords_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        stateAsWords_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component pi_tempA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component createRandomTape_Hfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    stateAsWords_2_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_2_address0,
        ce0 => stateAsWords_2_ce0,
        we0 => stateAsWords_2_we0,
        d0 => stateAsWords_2_d0,
        q0 => stateAsWords_2_q0,
        address1 => grp_KeccakP1600OnWords_fu_446_state_address1,
        ce1 => stateAsWords_2_ce1,
        we1 => stateAsWords_2_we1,
        d1 => grp_KeccakP1600OnWords_fu_446_state_d1,
        q1 => stateAsWords_2_q1);

    stateAsWords_3_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_3_address0,
        ce0 => stateAsWords_3_ce0,
        we0 => stateAsWords_3_we0,
        d0 => stateAsWords_3_d0,
        q0 => stateAsWords_3_q0,
        address1 => grp_KeccakP1600OnWords_fu_446_state_address1,
        ce1 => stateAsWords_3_ce1,
        we1 => stateAsWords_3_we1,
        d1 => grp_KeccakP1600OnWords_fu_446_state_d1,
        q1 => stateAsWords_3_q1);

    stateAsWords_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_address0,
        ce0 => stateAsWords_ce0,
        we0 => stateAsWords_we0,
        d0 => stateAsWords_d0,
        q0 => stateAsWords_q0,
        address1 => grp_KeccakP1600OnWords_fu_446_state_address1,
        ce1 => stateAsWords_ce1,
        we1 => stateAsWords_we1,
        d1 => grp_KeccakP1600OnWords_fu_446_state_d1,
        q1 => stateAsWords_q1);

    stateAsWords_1_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_1_address0,
        ce0 => stateAsWords_1_ce0,
        we0 => stateAsWords_1_we0,
        d0 => stateAsWords_1_d0,
        q0 => stateAsWords_1_q0,
        address1 => grp_KeccakP1600OnWords_fu_446_state_address1,
        ce1 => stateAsWords_1_ce1,
        we1 => stateAsWords_1_we1,
        d1 => grp_KeccakP1600OnWords_fu_446_state_d1,
        q1 => stateAsWords_1_q1);

    stateAsWords_4_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_4_address0,
        ce0 => stateAsWords_4_ce0,
        we0 => stateAsWords_4_we0,
        d0 => stateAsWords_4_d0,
        q0 => stateAsWords_4_q0,
        address1 => grp_KeccakP1600OnWords_fu_446_state_address1,
        ce1 => stateAsWords_4_ce1,
        we1 => stateAsWords_4_we1,
        d1 => grp_KeccakP1600OnWords_fu_446_state_d1,
        q1 => stateAsWords_4_q1);

    stateAsWords_5_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_5_address0,
        ce0 => stateAsWords_5_ce0,
        we0 => stateAsWords_5_we0,
        d0 => stateAsWords_5_d0,
        q0 => stateAsWords_5_q0,
        address1 => grp_KeccakP1600OnWords_fu_446_state_address1,
        ce1 => stateAsWords_5_ce1,
        we1 => stateAsWords_5_we1,
        d1 => grp_KeccakP1600OnWords_fu_446_state_d1,
        q1 => stateAsWords_5_q1);

    ctx_sponge_state_U : component createRandomTape_Hfu
    generic map (
        DataWidth => 8,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ctx_sponge_state_address0,
        ce0 => ctx_sponge_state_ce0,
        we0 => ctx_sponge_state_we0,
        d0 => ctx_sponge_state_d0,
        q0 => ctx_sponge_state_q0);

    grp_KeccakWidth1600_Spon_1_fu_419 : component KeccakWidth1600_Spon_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_1_fu_419_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_1_fu_419_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_1_fu_419_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_1_fu_419_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_1_fu_419_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_1_fu_419_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_1_fu_419_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_1_fu_419_instance_state_d0,
        instance_state_q0 => ctx_sponge_state_q0,
        data_address0 => grp_KeccakWidth1600_Spon_1_fu_419_data_address0,
        data_ce0 => grp_KeccakWidth1600_Spon_1_fu_419_data_ce0,
        data_we0 => grp_KeccakWidth1600_Spon_1_fu_419_data_we0,
        data_d0 => grp_KeccakWidth1600_Spon_1_fu_419_data_d0,
        dataByteLen => grp_KeccakWidth1600_Spon_1_fu_419_dataByteLen);

    grp_HashUpdateIntLE_fu_433 : component HashUpdateIntLE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HashUpdateIntLE_fu_433_ap_start,
        ap_done => grp_HashUpdateIntLE_fu_433_ap_done,
        ap_idle => grp_HashUpdateIntLE_fu_433_ap_idle,
        ap_ready => grp_HashUpdateIntLE_fu_433_ap_ready,
        ctx_sponge_state_address0 => grp_HashUpdateIntLE_fu_433_ctx_sponge_state_address0,
        ctx_sponge_state_ce0 => grp_HashUpdateIntLE_fu_433_ctx_sponge_state_ce0,
        ctx_sponge_state_we0 => grp_HashUpdateIntLE_fu_433_ctx_sponge_state_we0,
        ctx_sponge_state_d0 => grp_HashUpdateIntLE_fu_433_ctx_sponge_state_d0,
        ctx_sponge_state_q0 => ctx_sponge_state_q0,
        ctx_sponge_byteIOInd => grp_HashUpdateIntLE_fu_433_ctx_sponge_byteIOInd,
        x => grp_HashUpdateIntLE_fu_433_x,
        ap_return => grp_HashUpdateIntLE_fu_433_ap_return);

    grp_KeccakP1600OnWords_fu_446 : component KeccakP1600OnWords
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakP1600OnWords_fu_446_ap_start,
        ap_done => grp_KeccakP1600OnWords_fu_446_ap_done,
        ap_idle => grp_KeccakP1600OnWords_fu_446_ap_idle,
        ap_ready => grp_KeccakP1600OnWords_fu_446_ap_ready,
        state_address0 => grp_KeccakP1600OnWords_fu_446_state_address0,
        state_ce0 => grp_KeccakP1600OnWords_fu_446_state_ce0,
        state_we0 => grp_KeccakP1600OnWords_fu_446_state_we0,
        state_d0 => grp_KeccakP1600OnWords_fu_446_state_d0,
        state_q0 => grp_KeccakP1600OnWords_fu_446_state_q0,
        state_address1 => grp_KeccakP1600OnWords_fu_446_state_address1,
        state_ce1 => grp_KeccakP1600OnWords_fu_446_state_ce1,
        state_we1 => grp_KeccakP1600OnWords_fu_446_state_we1,
        state_d1 => grp_KeccakP1600OnWords_fu_446_state_d1,
        state_q1 => grp_KeccakP1600OnWords_fu_446_state_q1);

    grp_fromWordsToBytes_fu_455 : component fromWordsToBytes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fromWordsToBytes_fu_455_ap_start,
        ap_done => grp_fromWordsToBytes_fu_455_ap_done,
        ap_idle => grp_fromWordsToBytes_fu_455_ap_idle,
        ap_ready => grp_fromWordsToBytes_fu_455_ap_ready,
        state_address0 => grp_fromWordsToBytes_fu_455_state_address0,
        state_ce0 => grp_fromWordsToBytes_fu_455_state_ce0,
        state_we0 => grp_fromWordsToBytes_fu_455_state_we0,
        state_d0 => grp_fromWordsToBytes_fu_455_state_d0,
        stateAsWords_address0 => grp_fromWordsToBytes_fu_455_stateAsWords_address0,
        stateAsWords_ce0 => grp_fromWordsToBytes_fu_455_stateAsWords_ce0,
        stateAsWords_q0 => grp_fromWordsToBytes_fu_455_stateAsWords_q0);

    grp_fromBytesToWords_fu_461 : component fromBytesToWords
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fromBytesToWords_fu_461_ap_start,
        ap_done => grp_fromBytesToWords_fu_461_ap_done,
        ap_idle => grp_fromBytesToWords_fu_461_ap_idle,
        ap_ready => grp_fromBytesToWords_fu_461_ap_ready,
        stateAsWords_address0 => grp_fromBytesToWords_fu_461_stateAsWords_address0,
        stateAsWords_ce0 => grp_fromBytesToWords_fu_461_stateAsWords_ce0,
        stateAsWords_we0 => grp_fromBytesToWords_fu_461_stateAsWords_we0,
        stateAsWords_d0 => grp_fromBytesToWords_fu_461_stateAsWords_d0,
        stateAsWords_q0 => grp_fromBytesToWords_fu_461_stateAsWords_q0,
        state_address0 => grp_fromBytesToWords_fu_461_state_address0,
        state_ce0 => grp_fromBytesToWords_fu_461_state_ce0,
        state_q0 => ctx_sponge_state_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_HashUpdateIntLE_fu_433_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HashUpdateIntLE_fu_433_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state51) or ((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln194_2_fu_966_p2 = ap_const_lv1_0)))) then 
                    grp_HashUpdateIntLE_fu_433_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HashUpdateIntLE_fu_433_ap_ready = ap_const_logic_1)) then 
                    grp_HashUpdateIntLE_fu_433_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakP1600OnWords_fu_446_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakP1600OnWords_fu_446_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_KeccakP1600OnWords_fu_446_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakP1600OnWords_fu_446_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakP1600OnWords_fu_446_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_1_fu_419_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_1_fu_419_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    grp_KeccakWidth1600_Spon_1_fu_419_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_1_fu_419_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_1_fu_419_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fromBytesToWords_fu_461_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fromBytesToWords_fu_461_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln239_3_fu_1075_p2 = ap_const_lv1_1) and (icmp_ln233_3_fu_1029_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln239_2_fu_933_p2 = ap_const_lv1_1) and (icmp_ln233_2_fu_879_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln239_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln233_1_fu_712_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln239_fu_615_p2 = ap_const_lv1_1) and (icmp_ln233_fu_590_p2 = ap_const_lv1_1)))) then 
                    grp_fromBytesToWords_fu_461_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fromBytesToWords_fu_461_ap_ready = ap_const_logic_1)) then 
                    grp_fromBytesToWords_fu_461_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fromWordsToBytes_fu_455_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fromWordsToBytes_fu_455_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    grp_fromWordsToBytes_fu_455_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fromWordsToBytes_fu_455_ap_ready = ap_const_logic_1)) then 
                    grp_fromWordsToBytes_fu_455_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ctx_sponge_byteIOInd_4_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln239_2_fu_933_p2 = ap_const_lv1_0) and (icmp_ln233_2_fu_879_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_4_fu_142 <= ctx_sponge_byteIOInd_6_fu_929_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln239_2_fu_933_p2 = ap_const_lv1_1) and (icmp_ln233_2_fu_879_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln139_1_fu_795_p2 = ap_const_lv1_1)))) then 
                ctx_sponge_byteIOInd_4_fu_142 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_7_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln239_3_fu_1075_p2 = ap_const_lv1_1) and (icmp_ln233_3_fu_1029_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_7_fu_146 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln239_3_fu_1075_p2 = ap_const_lv1_0) and (icmp_ln233_3_fu_1029_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_7_fu_146 <= ctx_sponge_byteIOInd_11_fu_1070_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln194_1_fu_825_p2 = ap_const_lv1_0))) then 
                ctx_sponge_byteIOInd_7_fu_146 <= ctx_sponge_byteIOInd_4_fu_142;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln239_fu_615_p2 = ap_const_lv1_0) and (icmp_ln233_fu_590_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_fu_134 <= ctx_sponge_byteIOInd_2_fu_611_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln239_fu_615_p2 = ap_const_lv1_1) and (icmp_ln233_fu_590_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln139_fu_539_p2 = ap_const_lv1_1)))) then 
                ctx_sponge_byteIOInd_fu_134 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i35_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                i_0_i_i_i35_reg_303 <= i_reg_1200;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_phi_mux_phi_ln194_phi_fu_285_p4 = ap_const_lv1_0))) then 
                i_0_i_i_i35_reg_303 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i5_reg_349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state40_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                i_0_i_i_i5_reg_349 <= add_ln231_reg_1283;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln139_1_fu_795_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i5_reg_349 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state49_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
                i_0_i_i_i_reg_384 <= i_13_reg_1344;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln194_1_fu_825_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_reg_384 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    loop_0_i3_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln139_1_fu_795_p2 = ap_const_lv1_0))) then 
                loop_0_i3_reg_338 <= loop_25_fu_801_p2;
            elsif (((grp_KeccakWidth1600_Spon_1_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                loop_0_i3_reg_338 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    loop_0_i_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln139_fu_539_p2 = ap_const_lv1_0))) then 
                loop_0_i_reg_270 <= loop_23_fu_545_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                loop_0_i_reg_270 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i22_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                loop_1_i_i_i22_reg_373 <= loop_26_reg_1291;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                loop_1_i_i_i22_reg_373 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i52_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                loop_1_i_i_i52_reg_327 <= loop_24_reg_1208;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                loop_1_i_i_i52_reg_327 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i_i_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                loop_1_i_i_i_i_reg_292 <= loop_reg_1157;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_phi_mux_phi_ln194_phi_fu_285_p4 = ap_const_lv1_1))) then 
                loop_1_i_i_i_i_reg_292 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                loop_1_i_i_i_reg_408 <= loop_27_reg_1352;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                loop_1_i_i_i_reg_408 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    offset_assign_1_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln239_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln233_1_fu_712_p2 = ap_const_lv1_1))) then 
                offset_assign_1_fu_138 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln239_1_fu_767_p2 = ap_const_lv1_0) and (icmp_ln233_1_fu_712_p2 = ap_const_lv1_1))) then 
                offset_assign_1_fu_138 <= ctx_sponge_byteIOInd_3_fu_762_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_phi_mux_phi_ln194_phi_fu_285_p4 = ap_const_lv1_0))) then 
                offset_assign_1_fu_138 <= ctx_sponge_byteIOInd_fu_134;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i36_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                p_01_rec_i_i_i36_reg_315 <= p_2_rec_i_i_i59_fu_790_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_phi_mux_phi_ln194_phi_fu_285_p4 = ap_const_lv1_0))) then 
                p_01_rec_i_i_i36_reg_315 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i6_reg_361_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state40_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                p_01_rec_i_i_i6_reg_361 <= p_2_rec_i_i_i29_fu_951_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln139_1_fu_795_p2 = ap_const_lv1_1))) then 
                p_01_rec_i_i_i6_reg_361 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state49_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
                p_01_rec_i_i_i_reg_396 <= p_2_rec_i_i_i_fu_1098_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln194_1_fu_825_p2 = ap_const_lv1_0))) then 
                p_01_rec_i_i_i_reg_396 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    phi_ln194_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done))) then 
                phi_ln194_reg_281 <= icmp_ln244_fu_633_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln139_fu_539_p2 = ap_const_lv1_1))) then 
                phi_ln194_reg_281 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                add_ln231_reg_1283 <= add_ln231_fu_873_p2;
                select_ln226_2_reg_1276 <= select_ln226_2_fu_865_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    add_ln234_1_reg_1113(14 downto 4) <= add_ln234_1_fu_533_p2(14 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln194_2_fu_966_p2 = ap_const_lv1_0))) then
                ctx_sponge_byteIOInd_12_reg_1323 <= ctx_sponge_byteIOInd_7_fu_146;
                    zext_ln241_reg_1328(7 downto 0) <= zext_ln241_fu_982_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                ctx_sponge_byteIOInd_1_reg_1133 <= ctx_sponge_byteIOInd_fu_134;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                ctx_sponge_byteIOInd_5_reg_1252 <= ctx_sponge_byteIOInd_4_fu_142;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln233_fu_590_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_1_reg_1162 <= zext_ln149_fu_606_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln233_1_fu_712_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_2_reg_1218 <= zext_ln149_2_fu_757_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln194_fu_648_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_3_reg_1184 <= zext_ln149_1_fu_664_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln233_2_fu_879_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_6_reg_1301 <= zext_ln149_4_fu_924_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln233_3_fu_1029_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_7_reg_1362 <= zext_ln149_5_fu_1065_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state54) and (grp_HashUpdateIntLE_fu_433_ap_done = ap_const_logic_1))) then
                ctx_sponge_state_add_8_reg_1376 <= zext_ln149_3_fu_1103_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                i_13_reg_1344 <= i_13_fu_1023_p2;
                select_ln226_3_reg_1333 <= select_ln226_3_fu_1007_p3;
                    zext_ln231_2_reg_1339(31 downto 0) <= zext_ln231_2_fu_1015_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                i_reg_1200 <= i_fu_706_p2;
                select_ln226_1_reg_1189 <= select_ln226_1_fu_690_p3;
                    zext_ln231_reg_1195(31 downto 0) <= zext_ln231_fu_698_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln233_1_fu_712_p2 = ap_const_lv1_1))) then
                icmp_ln239_1_reg_1223 <= icmp_ln239_1_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln233_2_fu_879_p2 = ap_const_lv1_1))) then
                icmp_ln239_2_reg_1306 <= icmp_ln239_2_fu_933_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln233_3_fu_1029_p2 = ap_const_lv1_1))) then
                icmp_ln239_3_reg_1367 <= icmp_ln239_3_fu_1075_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln233_fu_590_p2 = ap_const_lv1_1))) then
                icmp_ln239_reg_1167 <= icmp_ln239_fu_615_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                loop_24_reg_1208 <= loop_24_fu_717_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                loop_26_reg_1291 <= loop_26_fu_884_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                loop_27_reg_1352 <= loop_27_fu_1034_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                loop_reg_1157 <= loop_fu_595_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln194_fu_648_p2 = ap_const_lv1_1))) then
                partialBlock_1_reg_1179 <= partialBlock_1_fu_658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln194_1_fu_825_p2 = ap_const_lv1_1))) then
                partialBlock_3_reg_1263 <= partialBlock_3_fu_835_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln194_2_fu_966_p2 = ap_const_lv1_1))) then
                partialBlock_5_reg_1318 <= partialBlock_5_fu_976_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state52) and (grp_HashUpdateIntLE_fu_433_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state50) and (grp_HashUpdateIntLE_fu_433_ap_done = ap_const_logic_1)))) then
                reg_498 <= grp_HashUpdateIntLE_fu_433_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_phi_mux_phi_ln194_phi_fu_285_p4 = ap_const_lv1_1))) then
                select_ln226_reg_1139 <= select_ln226_fu_577_p3;
            end if;
        end if;
    end process;
    add_ln234_1_reg_1113(3 downto 0) <= "0000";
    zext_ln231_reg_1195(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln241_reg_1328(8) <= '0';
    zext_ln231_2_reg_1339(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state50, grp_HashUpdateIntLE_fu_433_ap_done, ap_CS_fsm_state52, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_phi_mux_phi_ln194_phi_fu_285_p4, ap_CS_fsm_state4, icmp_ln233_fu_590_p2, icmp_ln239_fu_615_p2, ap_CS_fsm_state10, grp_fromWordsToBytes_fu_455_ap_done, ap_block_state10_on_subcall_done, ap_CS_fsm_state11, icmp_ln194_fu_648_p2, ap_CS_fsm_state13, icmp_ln233_1_fu_712_p2, icmp_ln239_1_fu_767_p2, ap_CS_fsm_state19, ap_block_state19_on_subcall_done, ap_CS_fsm_state31, ap_CS_fsm_state32, icmp_ln194_1_fu_825_p2, ap_CS_fsm_state34, icmp_ln233_2_fu_879_p2, icmp_ln239_2_fu_933_p2, ap_CS_fsm_state40, ap_block_state40_on_subcall_done, ap_CS_fsm_state41, icmp_ln194_2_fu_966_p2, ap_CS_fsm_state43, icmp_ln233_3_fu_1029_p2, icmp_ln239_3_fu_1075_p2, ap_CS_fsm_state49, ap_block_state49_on_subcall_done, ap_CS_fsm_state54, grp_KeccakWidth1600_Spon_1_fu_419_ap_done, grp_KeccakP1600OnWords_fu_446_ap_done, grp_fromBytesToWords_fu_461_ap_done, icmp_ln139_fu_539_p2, ap_CS_fsm_state30, icmp_ln139_1_fu_795_p2, ap_CS_fsm_state66, ap_CS_fsm_state8, ap_CS_fsm_state17, ap_CS_fsm_state26, ap_CS_fsm_state38, ap_CS_fsm_state47, ap_CS_fsm_state62, ap_CS_fsm_state28, ap_CS_fsm_state64, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state36, ap_CS_fsm_state45, ap_CS_fsm_state60)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln139_fu_539_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_phi_mux_phi_ln194_phi_fu_285_p4 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln239_fu_615_p2 = ap_const_lv1_0) and (icmp_ln233_fu_590_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln239_fu_615_p2 = ap_const_lv1_1) and (icmp_ln233_fu_590_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((grp_fromBytesToWords_fu_461_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_KeccakP1600OnWords_fu_446_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln194_fu_648_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln239_1_fu_767_p2 = ap_const_lv1_0) and (icmp_ln233_1_fu_712_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln239_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln233_1_fu_712_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state15 => 
                if (((grp_fromBytesToWords_fu_461_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_KeccakP1600OnWords_fu_446_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((grp_fromBytesToWords_fu_461_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((grp_KeccakP1600OnWords_fu_446_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (grp_fromWordsToBytes_fu_455_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((grp_KeccakWidth1600_Spon_1_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln139_1_fu_795_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln194_1_fu_825_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln239_2_fu_933_p2 = ap_const_lv1_0) and (icmp_ln233_2_fu_879_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln239_2_fu_933_p2 = ap_const_lv1_1) and (icmp_ln233_2_fu_879_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state36 => 
                if (((grp_fromBytesToWords_fu_461_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((grp_KeccakP1600OnWords_fu_446_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((ap_const_boolean_0 = ap_block_state40_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln194_2_fu_966_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln239_3_fu_1075_p2 = ap_const_lv1_0) and (icmp_ln233_3_fu_1029_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln239_3_fu_1075_p2 = ap_const_lv1_1) and (icmp_ln233_3_fu_1029_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state45 => 
                if (((grp_fromBytesToWords_fu_461_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                if (((grp_KeccakP1600OnWords_fu_446_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                if (((ap_const_boolean_0 = ap_block_state49_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state49))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state50 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state50) and (grp_HashUpdateIntLE_fu_433_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (grp_HashUpdateIntLE_fu_433_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state54) and (grp_HashUpdateIntLE_fu_433_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((grp_fromBytesToWords_fu_461_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                if (((grp_KeccakP1600OnWords_fu_446_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state64) and (grp_fromWordsToBytes_fu_455_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                if (((grp_KeccakWidth1600_Spon_1_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state66))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln226_1_fu_672_p2 <= std_logic_vector(unsigned(offset_assign_1_fu_138) + unsigned(zext_ln225_fu_669_p1));
    add_ln226_2_fu_849_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_5_reg_1252) + unsigned(zext_ln225_1_fu_846_p1));
    add_ln226_3_fu_989_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_7_fu_146) + unsigned(zext_ln225_2_fu_986_p1));
    add_ln226_fu_559_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_fu_134) + unsigned(ap_const_lv32_1));
    add_ln231_fu_873_p2 <= std_logic_vector(unsigned(select_ln226_2_fu_865_p3) + unsigned(i_0_i_i_i5_reg_349));
    add_ln234_1_fu_533_p2 <= std_logic_vector(unsigned(sub_ln234_fu_527_p2) + unsigned(ap_const_lv15_20));
    add_ln234_2_fu_898_p2 <= std_logic_vector(unsigned(trunc_ln234_1_fu_890_p1) + unsigned(trunc_ln194_1_fu_894_p1));
    add_ln234_3_fu_601_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_1_reg_1133) + unsigned(loop_1_i_i_i_i_reg_292));
    add_ln234_4_fu_1048_p2 <= std_logic_vector(unsigned(trunc_ln194_2_fu_1044_p1) + unsigned(trunc_ln234_2_fu_1040_p1));
    add_ln234_5_fu_741_p2 <= std_logic_vector(unsigned(add_ln234_1_reg_1113) + unsigned(zext_ln234_3_fu_737_p1));
    add_ln234_6_fu_751_p2 <= std_logic_vector(unsigned(loop_1_i_i_i52_reg_327) + unsigned(offset_assign_1_fu_138));
    add_ln234_7_fu_908_p2 <= std_logic_vector(unsigned(ap_const_lv10_14C) + unsigned(zext_ln234_4_fu_904_p1));
    add_ln234_8_fu_919_p2 <= std_logic_vector(unsigned(loop_1_i_i_i22_reg_373) + unsigned(ctx_sponge_byteIOInd_5_reg_1252));
    add_ln234_9_fu_1059_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_7_fu_146) + unsigned(loop_1_i_i_i_reg_408));
    add_ln234_fu_731_p2 <= std_logic_vector(unsigned(trunc_ln234_fu_723_p1) + unsigned(trunc_ln194_fu_727_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state10_on_subcall_done_assign_proc : process(icmp_ln239_reg_1167, grp_fromWordsToBytes_fu_455_ap_done)
    begin
                ap_block_state10_on_subcall_done <= ((grp_fromWordsToBytes_fu_455_ap_done = ap_const_logic_0) and (icmp_ln239_reg_1167 = ap_const_lv1_1));
    end process;


    ap_block_state19_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_455_ap_done, icmp_ln239_1_reg_1223)
    begin
                ap_block_state19_on_subcall_done <= ((grp_fromWordsToBytes_fu_455_ap_done = ap_const_logic_0) and (icmp_ln239_1_reg_1223 = ap_const_lv1_1));
    end process;


    ap_block_state40_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_455_ap_done, icmp_ln239_2_reg_1306)
    begin
                ap_block_state40_on_subcall_done <= ((grp_fromWordsToBytes_fu_455_ap_done = ap_const_logic_0) and (icmp_ln239_2_reg_1306 = ap_const_lv1_1));
    end process;


    ap_block_state49_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_455_ap_done, icmp_ln239_3_reg_1367)
    begin
                ap_block_state49_on_subcall_done <= ((grp_fromWordsToBytes_fu_455_ap_done = ap_const_logic_0) and (icmp_ln239_3_reg_1367 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_KeccakWidth1600_Spon_1_fu_419_ap_done, ap_CS_fsm_state66)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_KeccakWidth1600_Spon_1_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state66)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_phi_ln194_phi_fu_285_p4 <= phi_ln194_reg_281;

    ap_ready_assign_proc : process(grp_KeccakWidth1600_Spon_1_fu_419_ap_done, ap_CS_fsm_state66)
    begin
        if (((grp_KeccakWidth1600_Spon_1_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ctx_sponge_byteIOInd_11_fu_1070_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_7_fu_146) + unsigned(select_ln226_3_reg_1333));
    ctx_sponge_byteIOInd_2_fu_611_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_1_reg_1133) + unsigned(select_ln226_reg_1139));
    ctx_sponge_byteIOInd_3_fu_762_p2 <= std_logic_vector(unsigned(offset_assign_1_fu_138) + unsigned(select_ln226_1_reg_1189));
    ctx_sponge_byteIOInd_6_fu_929_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_5_reg_1252) + unsigned(select_ln226_2_reg_1276));
    ctx_sponge_state_add_4_reg_1232 <= ap_const_lv64_A7(8 - 1 downto 0);

    ctx_sponge_state_address0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state2, ap_CS_fsm_state4, ctx_sponge_state_add_1_reg_1162, icmp_ln233_fu_590_p2, icmp_ln239_reg_1167, ap_CS_fsm_state10, ap_CS_fsm_state11, ctx_sponge_state_add_3_reg_1184, ap_CS_fsm_state13, icmp_ln233_1_fu_712_p2, ctx_sponge_state_add_2_reg_1218, icmp_ln239_1_reg_1223, ap_CS_fsm_state19, ctx_sponge_state_add_4_reg_1232, ap_CS_fsm_state21, ap_CS_fsm_state31, ap_CS_fsm_state34, icmp_ln233_2_fu_879_p2, ctx_sponge_state_add_6_reg_1301, icmp_ln239_2_reg_1306, ap_CS_fsm_state40, ap_CS_fsm_state43, icmp_ln233_3_fu_1029_p2, ctx_sponge_state_add_7_reg_1362, icmp_ln239_3_reg_1367, ap_CS_fsm_state49, ctx_sponge_state_add_8_reg_1376, ap_CS_fsm_state54, grp_KeccakWidth1600_Spon_1_fu_419_instance_state_address0, grp_HashUpdateIntLE_fu_433_ctx_sponge_state_address0, grp_fromWordsToBytes_fu_455_state_address0, grp_fromBytesToWords_fu_461_state_address0, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state44, ap_CS_fsm_state66, ap_CS_fsm_state28, ap_CS_fsm_state64, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state36, ap_CS_fsm_state45, ap_CS_fsm_state60, zext_ln140_fu_551_p1, zext_ln149_fu_606_p1, zext_ln149_1_fu_664_p1, zext_ln149_2_fu_757_p1, zext_ln140_1_fu_807_p1, zext_ln149_4_fu_924_p1, zext_ln149_5_fu_1065_p1, ap_CS_fsm_state20, ap_CS_fsm_state22, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_8_reg_1376;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_7_reg_1362;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln233_3_fu_1029_p2 = ap_const_lv1_0))) then 
            ctx_sponge_state_address0 <= zext_ln149_5_fu_1065_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_6_reg_1301;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln233_2_fu_879_p2 = ap_const_lv1_0))) then 
            ctx_sponge_state_address0 <= zext_ln149_4_fu_924_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ctx_sponge_state_address0 <= zext_ln140_1_fu_807_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_4_reg_1232;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ctx_sponge_state_address0 <= ap_const_lv64_A7(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_3_reg_1184;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_2_reg_1218;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln233_1_fu_712_p2 = ap_const_lv1_0))) then 
            ctx_sponge_state_address0 <= zext_ln149_2_fu_757_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ctx_sponge_state_address0 <= zext_ln149_1_fu_664_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_1_reg_1162;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln233_fu_590_p2 = ap_const_lv1_0))) then 
            ctx_sponge_state_address0 <= zext_ln149_fu_606_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ctx_sponge_state_address0 <= zext_ln140_fu_551_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ctx_sponge_state_address0 <= grp_fromBytesToWords_fu_461_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln239_3_reg_1367 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state40) and (icmp_ln239_2_reg_1306 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln239_1_reg_1223 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln239_reg_1167 = ap_const_lv1_1)))) then 
            ctx_sponge_state_address0 <= grp_fromWordsToBytes_fu_455_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ctx_sponge_state_address0 <= grp_HashUpdateIntLE_fu_433_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_1_fu_419_instance_state_address0;
        else 
            ctx_sponge_state_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_ce0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln233_fu_590_p2, icmp_ln239_reg_1167, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, icmp_ln233_1_fu_712_p2, icmp_ln239_1_reg_1223, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state31, ap_CS_fsm_state34, icmp_ln233_2_fu_879_p2, icmp_ln239_2_reg_1306, ap_CS_fsm_state40, ap_CS_fsm_state43, icmp_ln233_3_fu_1029_p2, icmp_ln239_3_reg_1367, ap_CS_fsm_state49, ap_CS_fsm_state54, grp_KeccakWidth1600_Spon_1_fu_419_instance_state_ce0, grp_HashUpdateIntLE_fu_433_ctx_sponge_state_ce0, grp_fromWordsToBytes_fu_455_state_ce0, grp_fromBytesToWords_fu_461_state_ce0, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state44, ap_CS_fsm_state66, ap_CS_fsm_state28, ap_CS_fsm_state64, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state36, ap_CS_fsm_state45, ap_CS_fsm_state60, ap_CS_fsm_state20, ap_CS_fsm_state22, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln233_3_fu_1029_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln233_2_fu_879_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln233_1_fu_712_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln233_fu_590_p2 = ap_const_lv1_0)))) then 
            ctx_sponge_state_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ctx_sponge_state_ce0 <= grp_fromBytesToWords_fu_461_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln239_3_reg_1367 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state40) and (icmp_ln239_2_reg_1306 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln239_1_reg_1223 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln239_reg_1167 = ap_const_lv1_1)))) then 
            ctx_sponge_state_ce0 <= grp_fromWordsToBytes_fu_455_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ctx_sponge_state_ce0 <= grp_HashUpdateIntLE_fu_433_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_1_fu_419_instance_state_ce0;
        else 
            ctx_sponge_state_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_d0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state2, icmp_ln239_reg_1167, ap_CS_fsm_state10, icmp_ln239_1_reg_1223, ap_CS_fsm_state19, ap_CS_fsm_state31, icmp_ln239_2_reg_1306, ap_CS_fsm_state40, icmp_ln239_3_reg_1367, ap_CS_fsm_state49, ap_CS_fsm_state54, grp_KeccakWidth1600_Spon_1_fu_419_instance_state_d0, grp_HashUpdateIntLE_fu_433_ctx_sponge_state_d0, grp_fromWordsToBytes_fu_455_state_d0, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state30, ap_CS_fsm_state35, ap_CS_fsm_state44, ap_CS_fsm_state66, ap_CS_fsm_state28, ap_CS_fsm_state64, xor_ln149_fu_626_p2, xor_ln149_2_fu_783_p2, ap_CS_fsm_state20, grp_fu_475_p2, ap_CS_fsm_state22, grp_fu_482_p2, xor_ln149_4_fu_944_p2, xor_ln149_7_fu_1091_p2, ap_CS_fsm_state56, ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            ctx_sponge_state_d0 <= xor_ln149_7_fu_1091_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            ctx_sponge_state_d0 <= xor_ln149_4_fu_944_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ctx_sponge_state_d0 <= grp_fu_482_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ctx_sponge_state_d0 <= grp_fu_475_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ctx_sponge_state_d0 <= xor_ln149_2_fu_783_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_sponge_state_d0 <= xor_ln149_fu_626_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_sponge_state_d0 <= ap_const_lv8_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln239_3_reg_1367 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state40) and (icmp_ln239_2_reg_1306 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln239_1_reg_1223 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln239_reg_1167 = ap_const_lv1_1)))) then 
            ctx_sponge_state_d0 <= grp_fromWordsToBytes_fu_455_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ctx_sponge_state_d0 <= grp_HashUpdateIntLE_fu_433_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_1_fu_419_instance_state_d0;
        else 
            ctx_sponge_state_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_we0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state2, icmp_ln239_reg_1167, ap_CS_fsm_state10, icmp_ln239_1_reg_1223, ap_CS_fsm_state19, ap_CS_fsm_state31, icmp_ln239_2_reg_1306, ap_CS_fsm_state40, icmp_ln239_3_reg_1367, ap_CS_fsm_state49, ap_CS_fsm_state54, grp_KeccakWidth1600_Spon_1_fu_419_instance_state_we0, grp_HashUpdateIntLE_fu_433_ctx_sponge_state_we0, grp_fromWordsToBytes_fu_455_state_we0, icmp_ln139_fu_539_p2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state30, icmp_ln139_1_fu_795_p2, ap_CS_fsm_state35, ap_CS_fsm_state44, ap_CS_fsm_state66, ap_CS_fsm_state28, ap_CS_fsm_state64, ap_CS_fsm_state20, ap_CS_fsm_state22, ap_CS_fsm_state56, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln139_1_fu_795_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln139_fu_539_p2 = ap_const_lv1_0)))) then 
            ctx_sponge_state_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln239_3_reg_1367 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state40) and (icmp_ln239_2_reg_1306 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln239_1_reg_1223 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln239_reg_1167 = ap_const_lv1_1)))) then 
            ctx_sponge_state_we0 <= grp_fromWordsToBytes_fu_455_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ctx_sponge_state_we0 <= grp_HashUpdateIntLE_fu_433_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_1_fu_419_instance_state_we0;
        else 
            ctx_sponge_state_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_HashUpdateIntLE_fu_433_ap_start <= grp_HashUpdateIntLE_fu_433_ap_start_reg;

    grp_HashUpdateIntLE_fu_433_ctx_sponge_byteIOInd_assign_proc : process(reg_498, ap_CS_fsm_state50, ap_CS_fsm_state52, ctx_sponge_byteIOInd_12_reg_1323, ap_CS_fsm_state54)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52))) then 
            grp_HashUpdateIntLE_fu_433_ctx_sponge_byteIOInd <= reg_498;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_HashUpdateIntLE_fu_433_ctx_sponge_byteIOInd <= ctx_sponge_byteIOInd_12_reg_1323;
        else 
            grp_HashUpdateIntLE_fu_433_ctx_sponge_byteIOInd <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_HashUpdateIntLE_fu_433_x_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state52, zext_ln241_reg_1328, ap_CS_fsm_state54)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            grp_HashUpdateIntLE_fu_433_x <= ap_const_lv9_4B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_HashUpdateIntLE_fu_433_x <= ap_const_lv9_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_HashUpdateIntLE_fu_433_x <= zext_ln241_reg_1328;
        else 
            grp_HashUpdateIntLE_fu_433_x <= "XXXXXXXXX";
        end if; 
    end process;

    grp_KeccakP1600OnWords_fu_446_ap_start <= grp_KeccakP1600OnWords_fu_446_ap_start_reg;

    grp_KeccakP1600OnWords_fu_446_state_q0_assign_proc : process(stateAsWords_2_q0, stateAsWords_3_q0, stateAsWords_q0, stateAsWords_1_q0, stateAsWords_4_q0, stateAsWords_5_q0, ap_CS_fsm_state8, ap_CS_fsm_state17, ap_CS_fsm_state26, ap_CS_fsm_state38, ap_CS_fsm_state47, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_KeccakP1600OnWords_fu_446_state_q0 <= stateAsWords_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_KeccakP1600OnWords_fu_446_state_q0 <= stateAsWords_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_KeccakP1600OnWords_fu_446_state_q0 <= stateAsWords_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_KeccakP1600OnWords_fu_446_state_q0 <= stateAsWords_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_KeccakP1600OnWords_fu_446_state_q0 <= stateAsWords_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_KeccakP1600OnWords_fu_446_state_q0 <= stateAsWords_q0;
        else 
            grp_KeccakP1600OnWords_fu_446_state_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_KeccakP1600OnWords_fu_446_state_q1_assign_proc : process(stateAsWords_2_q1, stateAsWords_3_q1, stateAsWords_q1, stateAsWords_1_q1, stateAsWords_4_q1, stateAsWords_5_q1, ap_CS_fsm_state8, ap_CS_fsm_state17, ap_CS_fsm_state26, ap_CS_fsm_state38, ap_CS_fsm_state47, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_KeccakP1600OnWords_fu_446_state_q1 <= stateAsWords_3_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_KeccakP1600OnWords_fu_446_state_q1 <= stateAsWords_5_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_KeccakP1600OnWords_fu_446_state_q1 <= stateAsWords_4_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_KeccakP1600OnWords_fu_446_state_q1 <= stateAsWords_2_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_KeccakP1600OnWords_fu_446_state_q1 <= stateAsWords_1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_KeccakP1600OnWords_fu_446_state_q1 <= stateAsWords_q1;
        else 
            grp_KeccakP1600OnWords_fu_446_state_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_1_fu_419_ap_start <= grp_KeccakWidth1600_Spon_1_fu_419_ap_start_reg;

    grp_KeccakWidth1600_Spon_1_fu_419_dataByteLen_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            grp_KeccakWidth1600_Spon_1_fu_419_dataByteLen <= ap_const_lv8_4B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_KeccakWidth1600_Spon_1_fu_419_dataByteLen <= ap_const_lv8_20;
        else 
            grp_KeccakWidth1600_Spon_1_fu_419_dataByteLen <= "XXXXXXXX";
        end if; 
    end process;

    grp_fromBytesToWords_fu_461_ap_start <= grp_fromBytesToWords_fu_461_ap_start_reg;

    grp_fromBytesToWords_fu_461_stateAsWords_q0_assign_proc : process(stateAsWords_2_q0, stateAsWords_3_q0, stateAsWords_q0, stateAsWords_1_q0, stateAsWords_4_q0, stateAsWords_5_q0, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state36, ap_CS_fsm_state45, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fromBytesToWords_fu_461_stateAsWords_q0 <= stateAsWords_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fromBytesToWords_fu_461_stateAsWords_q0 <= stateAsWords_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fromBytesToWords_fu_461_stateAsWords_q0 <= stateAsWords_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fromBytesToWords_fu_461_stateAsWords_q0 <= stateAsWords_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fromBytesToWords_fu_461_stateAsWords_q0 <= stateAsWords_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fromBytesToWords_fu_461_stateAsWords_q0 <= stateAsWords_q0;
        else 
            grp_fromBytesToWords_fu_461_stateAsWords_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fromWordsToBytes_fu_455_ap_start <= grp_fromWordsToBytes_fu_455_ap_start_reg;

    grp_fromWordsToBytes_fu_455_stateAsWords_q0_assign_proc : process(icmp_ln239_reg_1167, ap_CS_fsm_state10, icmp_ln239_1_reg_1223, ap_CS_fsm_state19, icmp_ln239_2_reg_1306, ap_CS_fsm_state40, icmp_ln239_3_reg_1367, ap_CS_fsm_state49, stateAsWords_2_q0, stateAsWords_3_q0, stateAsWords_q0, stateAsWords_1_q0, stateAsWords_4_q0, stateAsWords_5_q0, ap_CS_fsm_state28, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_fromWordsToBytes_fu_455_stateAsWords_q0 <= stateAsWords_3_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln239_3_reg_1367 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_455_stateAsWords_q0 <= stateAsWords_5_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (icmp_ln239_2_reg_1306 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_455_stateAsWords_q0 <= stateAsWords_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fromWordsToBytes_fu_455_stateAsWords_q0 <= stateAsWords_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln239_1_reg_1223 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_455_stateAsWords_q0 <= stateAsWords_1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln239_reg_1167 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_455_stateAsWords_q0 <= stateAsWords_q0;
        else 
            grp_fromWordsToBytes_fu_455_stateAsWords_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_475_p2 <= (ctx_sponge_state_q0 xor ap_const_lv8_1F);
    grp_fu_482_p2 <= (ctx_sponge_state_q0 xor ap_const_lv8_80);
    i_13_fu_1023_p2 <= std_logic_vector(unsigned(zext_ln231_3_fu_1019_p1) + unsigned(i_0_i_i_i_reg_384));
    i_fu_706_p2 <= std_logic_vector(unsigned(zext_ln231_1_fu_702_p1) + unsigned(i_0_i_i_i35_reg_303));
    icmp_ln139_1_fu_795_p2 <= "1" when (loop_0_i3_reg_338 = ap_const_lv8_C8) else "0";
    icmp_ln139_fu_539_p2 <= "1" when (loop_0_i_reg_270 = ap_const_lv8_C8) else "0";
    icmp_ln194_1_fu_825_p2 <= "1" when (tmp_50_fu_815_p4 = ap_const_lv27_0) else "0";
    icmp_ln194_2_fu_966_p2 <= "1" when (tmp_51_fu_956_p4 = ap_const_lv28_0) else "0";
    icmp_ln194_fu_648_p2 <= "1" when (tmp_49_fu_638_p4 = ap_const_lv29_0) else "0";
    icmp_ln226_1_fu_678_p2 <= "1" when (unsigned(add_ln226_1_fu_672_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_2_fu_854_p2 <= "1" when (unsigned(add_ln226_2_fu_849_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_3_fu_995_p2 <= "1" when (unsigned(add_ln226_3_fu_989_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_fu_565_p2 <= "1" when (unsigned(add_ln226_fu_559_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln233_1_fu_712_p2 <= "1" when (loop_1_i_i_i52_reg_327 = select_ln226_1_reg_1189) else "0";
    icmp_ln233_2_fu_879_p2 <= "1" when (loop_1_i_i_i22_reg_373 = select_ln226_2_reg_1276) else "0";
    icmp_ln233_3_fu_1029_p2 <= "1" when (loop_1_i_i_i_reg_408 = select_ln226_3_reg_1333) else "0";
    icmp_ln233_fu_590_p2 <= "1" when (loop_1_i_i_i_i_reg_292 = select_ln226_reg_1139) else "0";
    icmp_ln239_1_fu_767_p2 <= "1" when (ctx_sponge_byteIOInd_3_fu_762_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_2_fu_933_p2 <= "1" when (ctx_sponge_byteIOInd_6_fu_929_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_3_fu_1075_p2 <= "1" when (ctx_sponge_byteIOInd_11_fu_1070_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_fu_615_p2 <= "1" when (ctx_sponge_byteIOInd_2_fu_611_p2 = ap_const_lv32_A8) else "0";
    icmp_ln244_fu_633_p2 <= "1" when (select_ln226_reg_1139 = ap_const_lv32_0) else "0";
    loop_23_fu_545_p2 <= std_logic_vector(unsigned(loop_0_i_reg_270) + unsigned(ap_const_lv8_1));
    loop_24_fu_717_p2 <= std_logic_vector(unsigned(loop_1_i_i_i52_reg_327) + unsigned(ap_const_lv32_1));
    loop_25_fu_801_p2 <= std_logic_vector(unsigned(loop_0_i3_reg_338) + unsigned(ap_const_lv8_1));
    loop_26_fu_884_p2 <= std_logic_vector(unsigned(loop_1_i_i_i22_reg_373) + unsigned(ap_const_lv32_1));
    loop_27_fu_1034_p2 <= std_logic_vector(unsigned(loop_1_i_i_i_reg_408) + unsigned(ap_const_lv32_1));
    loop_fu_595_p2 <= std_logic_vector(unsigned(loop_1_i_i_i_i_reg_292) + unsigned(ap_const_lv32_1));
    p_2_rec_i_i_i29_fu_951_p2 <= std_logic_vector(unsigned(select_ln226_2_reg_1276) + unsigned(p_01_rec_i_i_i6_reg_361));
    p_2_rec_i_i_i59_fu_790_p2 <= std_logic_vector(unsigned(zext_ln231_reg_1195) + unsigned(p_01_rec_i_i_i36_reg_315));
    p_2_rec_i_i_i_fu_1098_p2 <= std_logic_vector(unsigned(zext_ln231_2_reg_1339) + unsigned(p_01_rec_i_i_i_reg_396));
    partialBlock_1_fu_658_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln225_fu_654_p1));
    partialBlock_2_fu_684_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(offset_assign_1_fu_138));
    partialBlock_3_fu_835_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(trunc_ln225_1_fu_831_p1));
    partialBlock_4_fu_860_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_5_reg_1252));
    partialBlock_5_fu_976_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(trunc_ln225_2_fu_972_p1));
    partialBlock_6_fu_1001_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_7_fu_146));
    partialBlock_fu_571_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_fu_134));
    salt_0_address0 <= zext_ln234_2_fu_1054_p1(5 - 1 downto 0);

    salt_0_ce0_assign_proc : process(ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            salt_0_ce0 <= ap_const_logic_1;
        else 
            salt_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    seed_address0 <= sext_ln234_fu_746_p1(14 - 1 downto 0);

    seed_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            seed_ce0 <= ap_const_logic_1;
        else 
            seed_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln226_1_fu_690_p3 <= 
        partialBlock_2_fu_684_p2 when (icmp_ln226_1_fu_678_p2(0) = '1') else 
        zext_ln225_fu_669_p1;
    select_ln226_2_fu_865_p3 <= 
        partialBlock_4_fu_860_p2 when (icmp_ln226_2_fu_854_p2(0) = '1') else 
        zext_ln225_1_fu_846_p1;
    select_ln226_3_fu_1007_p3 <= 
        partialBlock_6_fu_1001_p2 when (icmp_ln226_3_fu_995_p2(0) = '1') else 
        zext_ln225_2_fu_986_p1;
    select_ln226_fu_577_p3 <= 
        partialBlock_fu_571_p2 when (icmp_ln226_fu_565_p2(0) = '1') else 
        ap_const_lv32_1;
        sext_ln234_1_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln234_7_fu_908_p2),64));

        sext_ln234_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln234_5_fu_741_p2),64));


    stateAsWords_1_address0_assign_proc : process(icmp_ln239_1_reg_1223, ap_CS_fsm_state19, grp_KeccakP1600OnWords_fu_446_state_address0, grp_fromWordsToBytes_fu_455_stateAsWords_address0, grp_fromBytesToWords_fu_461_stateAsWords_address0, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stateAsWords_1_address0 <= grp_fromBytesToWords_fu_461_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln239_1_reg_1223 = ap_const_lv1_1))) then 
            stateAsWords_1_address0 <= grp_fromWordsToBytes_fu_455_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_address0 <= grp_KeccakP1600OnWords_fu_446_state_address0;
        else 
            stateAsWords_1_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_1_ce0_assign_proc : process(icmp_ln239_1_reg_1223, ap_CS_fsm_state19, grp_KeccakP1600OnWords_fu_446_state_ce0, grp_fromWordsToBytes_fu_455_stateAsWords_ce0, grp_fromBytesToWords_fu_461_stateAsWords_ce0, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stateAsWords_1_ce0 <= grp_fromBytesToWords_fu_461_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln239_1_reg_1223 = ap_const_lv1_1))) then 
            stateAsWords_1_ce0 <= grp_fromWordsToBytes_fu_455_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_ce0 <= grp_KeccakP1600OnWords_fu_446_state_ce0;
        else 
            stateAsWords_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_1_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_ce1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_ce1 <= grp_KeccakP1600OnWords_fu_446_state_ce1;
        else 
            stateAsWords_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_1_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_d0, grp_fromBytesToWords_fu_461_stateAsWords_d0, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stateAsWords_1_d0 <= grp_fromBytesToWords_fu_461_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_d0 <= grp_KeccakP1600OnWords_fu_446_state_d0;
        else 
            stateAsWords_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_1_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we0, grp_fromBytesToWords_fu_461_stateAsWords_we0, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stateAsWords_1_we0 <= grp_fromBytesToWords_fu_461_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_we0 <= grp_KeccakP1600OnWords_fu_446_state_we0;
        else 
            stateAsWords_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_1_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_we1 <= grp_KeccakP1600OnWords_fu_446_state_we1;
        else 
            stateAsWords_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_2_address0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_address0, grp_fromWordsToBytes_fu_455_stateAsWords_address0, grp_fromBytesToWords_fu_461_stateAsWords_address0, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            stateAsWords_2_address0 <= grp_fromBytesToWords_fu_461_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            stateAsWords_2_address0 <= grp_fromWordsToBytes_fu_455_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_2_address0 <= grp_KeccakP1600OnWords_fu_446_state_address0;
        else 
            stateAsWords_2_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_2_ce0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_ce0, grp_fromWordsToBytes_fu_455_stateAsWords_ce0, grp_fromBytesToWords_fu_461_stateAsWords_ce0, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            stateAsWords_2_ce0 <= grp_fromBytesToWords_fu_461_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            stateAsWords_2_ce0 <= grp_fromWordsToBytes_fu_455_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_2_ce0 <= grp_KeccakP1600OnWords_fu_446_state_ce0;
        else 
            stateAsWords_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_2_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_ce1, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_2_ce1 <= grp_KeccakP1600OnWords_fu_446_state_ce1;
        else 
            stateAsWords_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_2_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_d0, grp_fromBytesToWords_fu_461_stateAsWords_d0, ap_CS_fsm_state26, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            stateAsWords_2_d0 <= grp_fromBytesToWords_fu_461_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_2_d0 <= grp_KeccakP1600OnWords_fu_446_state_d0;
        else 
            stateAsWords_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_2_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we0, grp_fromBytesToWords_fu_461_stateAsWords_we0, ap_CS_fsm_state26, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            stateAsWords_2_we0 <= grp_fromBytesToWords_fu_461_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_2_we0 <= grp_KeccakP1600OnWords_fu_446_state_we0;
        else 
            stateAsWords_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_2_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we1, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_2_we1 <= grp_KeccakP1600OnWords_fu_446_state_we1;
        else 
            stateAsWords_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_3_address0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_address0, grp_fromWordsToBytes_fu_455_stateAsWords_address0, grp_fromBytesToWords_fu_461_stateAsWords_address0, ap_CS_fsm_state62, ap_CS_fsm_state64, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            stateAsWords_3_address0 <= grp_fromBytesToWords_fu_461_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            stateAsWords_3_address0 <= grp_fromWordsToBytes_fu_455_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            stateAsWords_3_address0 <= grp_KeccakP1600OnWords_fu_446_state_address0;
        else 
            stateAsWords_3_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_3_ce0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_ce0, grp_fromWordsToBytes_fu_455_stateAsWords_ce0, grp_fromBytesToWords_fu_461_stateAsWords_ce0, ap_CS_fsm_state62, ap_CS_fsm_state64, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            stateAsWords_3_ce0 <= grp_fromBytesToWords_fu_461_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            stateAsWords_3_ce0 <= grp_fromWordsToBytes_fu_455_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            stateAsWords_3_ce0 <= grp_KeccakP1600OnWords_fu_446_state_ce0;
        else 
            stateAsWords_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_3_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_ce1, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            stateAsWords_3_ce1 <= grp_KeccakP1600OnWords_fu_446_state_ce1;
        else 
            stateAsWords_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_3_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_d0, grp_fromBytesToWords_fu_461_stateAsWords_d0, ap_CS_fsm_state62, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            stateAsWords_3_d0 <= grp_fromBytesToWords_fu_461_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            stateAsWords_3_d0 <= grp_KeccakP1600OnWords_fu_446_state_d0;
        else 
            stateAsWords_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_3_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we0, grp_fromBytesToWords_fu_461_stateAsWords_we0, ap_CS_fsm_state62, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            stateAsWords_3_we0 <= grp_fromBytesToWords_fu_461_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            stateAsWords_3_we0 <= grp_KeccakP1600OnWords_fu_446_state_we0;
        else 
            stateAsWords_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_3_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we1, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            stateAsWords_3_we1 <= grp_KeccakP1600OnWords_fu_446_state_we1;
        else 
            stateAsWords_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_4_address0_assign_proc : process(icmp_ln239_2_reg_1306, ap_CS_fsm_state40, grp_KeccakP1600OnWords_fu_446_state_address0, grp_fromWordsToBytes_fu_455_stateAsWords_address0, grp_fromBytesToWords_fu_461_stateAsWords_address0, ap_CS_fsm_state38, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            stateAsWords_4_address0 <= grp_fromBytesToWords_fu_461_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (icmp_ln239_2_reg_1306 = ap_const_lv1_1))) then 
            stateAsWords_4_address0 <= grp_fromWordsToBytes_fu_455_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            stateAsWords_4_address0 <= grp_KeccakP1600OnWords_fu_446_state_address0;
        else 
            stateAsWords_4_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_4_ce0_assign_proc : process(icmp_ln239_2_reg_1306, ap_CS_fsm_state40, grp_KeccakP1600OnWords_fu_446_state_ce0, grp_fromWordsToBytes_fu_455_stateAsWords_ce0, grp_fromBytesToWords_fu_461_stateAsWords_ce0, ap_CS_fsm_state38, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            stateAsWords_4_ce0 <= grp_fromBytesToWords_fu_461_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (icmp_ln239_2_reg_1306 = ap_const_lv1_1))) then 
            stateAsWords_4_ce0 <= grp_fromWordsToBytes_fu_455_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            stateAsWords_4_ce0 <= grp_KeccakP1600OnWords_fu_446_state_ce0;
        else 
            stateAsWords_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_4_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_ce1, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            stateAsWords_4_ce1 <= grp_KeccakP1600OnWords_fu_446_state_ce1;
        else 
            stateAsWords_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_4_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_d0, grp_fromBytesToWords_fu_461_stateAsWords_d0, ap_CS_fsm_state38, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            stateAsWords_4_d0 <= grp_fromBytesToWords_fu_461_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            stateAsWords_4_d0 <= grp_KeccakP1600OnWords_fu_446_state_d0;
        else 
            stateAsWords_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_4_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we0, grp_fromBytesToWords_fu_461_stateAsWords_we0, ap_CS_fsm_state38, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            stateAsWords_4_we0 <= grp_fromBytesToWords_fu_461_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            stateAsWords_4_we0 <= grp_KeccakP1600OnWords_fu_446_state_we0;
        else 
            stateAsWords_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_4_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we1, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            stateAsWords_4_we1 <= grp_KeccakP1600OnWords_fu_446_state_we1;
        else 
            stateAsWords_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_5_address0_assign_proc : process(icmp_ln239_3_reg_1367, ap_CS_fsm_state49, grp_KeccakP1600OnWords_fu_446_state_address0, grp_fromWordsToBytes_fu_455_stateAsWords_address0, grp_fromBytesToWords_fu_461_stateAsWords_address0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_5_address0 <= grp_fromBytesToWords_fu_461_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln239_3_reg_1367 = ap_const_lv1_1))) then 
            stateAsWords_5_address0 <= grp_fromWordsToBytes_fu_455_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            stateAsWords_5_address0 <= grp_KeccakP1600OnWords_fu_446_state_address0;
        else 
            stateAsWords_5_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_5_ce0_assign_proc : process(icmp_ln239_3_reg_1367, ap_CS_fsm_state49, grp_KeccakP1600OnWords_fu_446_state_ce0, grp_fromWordsToBytes_fu_455_stateAsWords_ce0, grp_fromBytesToWords_fu_461_stateAsWords_ce0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_5_ce0 <= grp_fromBytesToWords_fu_461_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln239_3_reg_1367 = ap_const_lv1_1))) then 
            stateAsWords_5_ce0 <= grp_fromWordsToBytes_fu_455_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            stateAsWords_5_ce0 <= grp_KeccakP1600OnWords_fu_446_state_ce0;
        else 
            stateAsWords_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_5_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            stateAsWords_5_ce1 <= grp_KeccakP1600OnWords_fu_446_state_ce1;
        else 
            stateAsWords_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_5_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_d0, grp_fromBytesToWords_fu_461_stateAsWords_d0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_5_d0 <= grp_fromBytesToWords_fu_461_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            stateAsWords_5_d0 <= grp_KeccakP1600OnWords_fu_446_state_d0;
        else 
            stateAsWords_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_5_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we0, grp_fromBytesToWords_fu_461_stateAsWords_we0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_5_we0 <= grp_fromBytesToWords_fu_461_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            stateAsWords_5_we0 <= grp_KeccakP1600OnWords_fu_446_state_we0;
        else 
            stateAsWords_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_5_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            stateAsWords_5_we1 <= grp_KeccakP1600OnWords_fu_446_state_we1;
        else 
            stateAsWords_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_address0_assign_proc : process(icmp_ln239_reg_1167, ap_CS_fsm_state10, grp_KeccakP1600OnWords_fu_446_state_address0, grp_fromWordsToBytes_fu_455_stateAsWords_address0, grp_fromBytesToWords_fu_461_stateAsWords_address0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stateAsWords_address0 <= grp_fromBytesToWords_fu_461_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln239_reg_1167 = ap_const_lv1_1))) then 
            stateAsWords_address0 <= grp_fromWordsToBytes_fu_455_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_address0 <= grp_KeccakP1600OnWords_fu_446_state_address0;
        else 
            stateAsWords_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_ce0_assign_proc : process(icmp_ln239_reg_1167, ap_CS_fsm_state10, grp_KeccakP1600OnWords_fu_446_state_ce0, grp_fromWordsToBytes_fu_455_stateAsWords_ce0, grp_fromBytesToWords_fu_461_stateAsWords_ce0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stateAsWords_ce0 <= grp_fromBytesToWords_fu_461_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln239_reg_1167 = ap_const_lv1_1))) then 
            stateAsWords_ce0 <= grp_fromWordsToBytes_fu_455_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_ce0 <= grp_KeccakP1600OnWords_fu_446_state_ce0;
        else 
            stateAsWords_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_ce1 <= grp_KeccakP1600OnWords_fu_446_state_ce1;
        else 
            stateAsWords_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_d0, grp_fromBytesToWords_fu_461_stateAsWords_d0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stateAsWords_d0 <= grp_fromBytesToWords_fu_461_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_d0 <= grp_KeccakP1600OnWords_fu_446_state_d0;
        else 
            stateAsWords_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we0, grp_fromBytesToWords_fu_461_stateAsWords_we0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stateAsWords_we0 <= grp_fromBytesToWords_fu_461_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_we0 <= grp_KeccakP1600OnWords_fu_446_state_we0;
        else 
            stateAsWords_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_446_state_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_we1 <= grp_KeccakP1600OnWords_fu_446_state_we1;
        else 
            stateAsWords_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln234_fu_527_p2 <= std_logic_vector(unsigned(zext_ln234_fu_511_p1) - unsigned(zext_ln234_1_fu_523_p1));

    tape_address0_assign_proc : process(ap_CS_fsm_state34, grp_KeccakWidth1600_Spon_1_fu_419_data_address0, ap_CS_fsm_state30, ap_CS_fsm_state66, sext_ln234_1_fu_914_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            tape_address0 <= sext_ln234_1_fu_914_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_address0 <= grp_KeccakWidth1600_Spon_1_fu_419_data_address0;
        else 
            tape_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    tape_ce0_assign_proc : process(ap_CS_fsm_state34, grp_KeccakWidth1600_Spon_1_fu_419_data_ce0, ap_CS_fsm_state30, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            tape_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_ce0 <= grp_KeccakWidth1600_Spon_1_fu_419_data_ce0;
        else 
            tape_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tape_d0 <= grp_KeccakWidth1600_Spon_1_fu_419_data_d0;

    tape_we0_assign_proc : process(grp_KeccakWidth1600_Spon_1_fu_419_data_we0, ap_CS_fsm_state30, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_we0 <= grp_KeccakWidth1600_Spon_1_fu_419_data_we0;
        else 
            tape_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_49_fu_638_p4 <= i_0_i_i_i35_reg_303(32 downto 4);
    tmp_50_fu_815_p4 <= i_0_i_i_i5_reg_349(31 downto 5);
    tmp_51_fu_956_p4 <= i_0_i_i_i_reg_384(32 downto 5);
    tmp_fu_503_p3 <= (seed_offset & ap_const_lv6_0);
    tmp_s_fu_515_p3 <= (seed_offset & ap_const_lv4_0);
    trunc_ln194_1_fu_894_p1 <= p_01_rec_i_i_i6_reg_361(9 - 1 downto 0);
    trunc_ln194_2_fu_1044_p1 <= p_01_rec_i_i_i_reg_396(7 - 1 downto 0);
    trunc_ln194_fu_727_p1 <= p_01_rec_i_i_i36_reg_315(6 - 1 downto 0);
    trunc_ln225_1_fu_831_p1 <= i_0_i_i_i5_reg_349(6 - 1 downto 0);
    trunc_ln225_2_fu_972_p1 <= i_0_i_i_i_reg_384(6 - 1 downto 0);
    trunc_ln225_fu_654_p1 <= i_0_i_i_i35_reg_303(5 - 1 downto 0);
    trunc_ln234_1_fu_890_p1 <= loop_1_i_i_i22_reg_373(9 - 1 downto 0);
    trunc_ln234_2_fu_1040_p1 <= loop_1_i_i_i_reg_408(7 - 1 downto 0);
    trunc_ln234_fu_723_p1 <= loop_1_i_i_i52_reg_327(6 - 1 downto 0);
    xor_ln149_2_fu_783_p2 <= (seed_q0 xor ctx_sponge_state_q0);
    xor_ln149_4_fu_944_p2 <= (tape_q0 xor ctx_sponge_state_q0);
    xor_ln149_7_fu_1091_p2 <= (salt_0_q0 xor ctx_sponge_state_q0);
    xor_ln149_fu_626_p2 <= (ctx_sponge_state_q0 xor ap_const_lv8_2);
    zext_ln140_1_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i3_reg_338),64));
    zext_ln140_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i_reg_270),64));
    zext_ln149_1_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_assign_1_fu_138),64));
    zext_ln149_2_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_6_fu_751_p2),64));
    zext_ln149_3_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_HashUpdateIntLE_fu_433_ap_return),64));
    zext_ln149_4_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_8_fu_919_p2),64));
    zext_ln149_5_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_9_fu_1059_p2),64));
    zext_ln149_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_3_fu_601_p2),64));
    zext_ln225_1_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_3_reg_1263),32));
    zext_ln225_2_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_5_reg_1318),32));
    zext_ln225_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_1_reg_1179),32));
    zext_ln231_1_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_1_fu_690_p3),33));
    zext_ln231_2_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_3_fu_1007_p3),64));
    zext_ln231_3_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_3_fu_1007_p3),33));
    zext_ln231_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_1_fu_690_p3),64));
    zext_ln234_1_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_515_p3),15));
    zext_ln234_2_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_4_fu_1048_p2),64));
    zext_ln234_3_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_fu_731_p2),15));
    zext_ln234_4_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_2_fu_898_p2),10));
    zext_ln234_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_503_p3),15));
    zext_ln241_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(roundNumber),9));
end behav;
