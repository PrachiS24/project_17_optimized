-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity createRandomTape is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    seed_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    seed_ce0 : OUT STD_LOGIC;
    seed_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    seed_offset : IN STD_LOGIC_VECTOR (7 downto 0);
    seed_offset1 : IN STD_LOGIC_VECTOR (1 downto 0);
    salt_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    salt_0_ce0 : OUT STD_LOGIC;
    salt_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    roundNumber : IN STD_LOGIC_VECTOR (7 downto 0);
    playerNumber : IN STD_LOGIC_VECTOR (1 downto 0);
    tape_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    tape_0_ce0 : OUT STD_LOGIC;
    tape_0_we0 : OUT STD_LOGIC;
    tape_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    tape_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    tape_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    tape_1_ce0 : OUT STD_LOGIC;
    tape_1_we0 : OUT STD_LOGIC;
    tape_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    tape_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    tape_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    tape_2_ce0 : OUT STD_LOGIC;
    tape_2_we0 : OUT STD_LOGIC;
    tape_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    tape_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    tape_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    tape_3_ce0 : OUT STD_LOGIC;
    tape_3_we0 : OUT STD_LOGIC;
    tape_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    tape_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of createRandomTape is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (102 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (102 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (102 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (102 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (102 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (102 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (102 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (102 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (102 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (102 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (102 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_5B : STD_LOGIC_VECTOR (7 downto 0) := "01011011";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv9_5B : STD_LOGIC_VECTOR (8 downto 0) := "001011011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv64_A7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010100111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv8_1F : STD_LOGIC_VECTOR (7 downto 0) := "00011111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_C8 : STD_LOGIC_VECTOR (7 downto 0) := "11001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv34_24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100100";
    constant ap_const_lv69_71C71C71D : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000011100011100011100011100011100011101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (102 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_HashUpdateIntLE_fu_507_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal grp_HashUpdateIntLE_fu_507_ap_ready : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_507_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal tmp_47_cast_fu_608_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_47_cast_reg_1234 : STD_LOGIC_VECTOR (14 downto 0);
    signal loop_28_fu_622_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ctx_sponge_byteIOInd_16_reg_1254 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal select_ln226_fu_654_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_reg_1260 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln194_phi_fu_353_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_fu_672_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_reg_1278 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ctx_sponge_state_add_9_reg_1283 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln233_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_reg_1288 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln244_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fromWordsToBytes_fu_528_ap_ready : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_528_ap_done : STD_LOGIC;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal partialBlock_7_fu_735_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal partialBlock_7_reg_1300 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln194_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_11_reg_1305 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln226_4_fu_767_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_4_reg_1310 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal zext_ln231_fu_775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_reg_1316 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_783_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_reg_1321 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_29_fu_794_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_29_reg_1329 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln233_1_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_10_reg_1339 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_1_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_1_reg_1344 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i59_fu_867_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_block_state19_on_subcall_done : BOOLEAN;
    signal ctx_sponge_state_add_12_reg_1353 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal loop_30_fu_878_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ctx_sponge_byteIOInd_20_reg_1373 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal partialBlock_9_fu_912_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal partialBlock_9_reg_1384 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln194_3_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln226_5_fu_942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_5_reg_1397 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal add_ln231_fu_950_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln231_reg_1404 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_31_fu_961_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_31_reg_1412 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal add_ln234_fu_975_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln234_reg_1417 : STD_LOGIC_VECTOR (33 downto 0);
    signal icmp_ln233_2_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_14_reg_1423 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_2_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_2_reg_1428 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_1432 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal p_2_rec_i_i_i29_fu_1063_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_block_state77_on_subcall_done : BOOLEAN;
    signal partialBlock_11_fu_1088_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal partialBlock_11_reg_1465 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal icmp_ln194_4_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_byteIOInd_27_reg_1470 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln241_fu_1094_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln241_reg_1475 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln226_6_fu_1119_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_6_reg_1480 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal zext_ln231_2_fu_1127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_2_reg_1486 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_14_fu_1135_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_14_reg_1491 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_32_fu_1146_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_32_reg_1499 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal icmp_ln233_3_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_15_reg_1509 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_3_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_3_reg_1514 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i_fu_1210_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal ap_block_state86_on_subcall_done : BOOLEAN;
    signal zext_ln242_fu_1215_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln242_reg_1523 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal ctx_sponge_state_add_16_reg_1528 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal stateAsWords_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_4_ce0 : STD_LOGIC;
    signal stateAsWords_4_we0 : STD_LOGIC;
    signal stateAsWords_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_4_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_4_ce1 : STD_LOGIC;
    signal stateAsWords_4_we1 : STD_LOGIC;
    signal stateAsWords_4_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_6_ce0 : STD_LOGIC;
    signal stateAsWords_6_we0 : STD_LOGIC;
    signal stateAsWords_6_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_6_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_6_ce1 : STD_LOGIC;
    signal stateAsWords_6_we1 : STD_LOGIC;
    signal stateAsWords_6_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_ce0 : STD_LOGIC;
    signal stateAsWords_we0 : STD_LOGIC;
    signal stateAsWords_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_ce1 : STD_LOGIC;
    signal stateAsWords_we1 : STD_LOGIC;
    signal stateAsWords_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_1_ce0 : STD_LOGIC;
    signal stateAsWords_1_we0 : STD_LOGIC;
    signal stateAsWords_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_1_ce1 : STD_LOGIC;
    signal stateAsWords_1_we1 : STD_LOGIC;
    signal stateAsWords_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_5_ce0 : STD_LOGIC;
    signal stateAsWords_5_we0 : STD_LOGIC;
    signal stateAsWords_5_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_5_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_5_ce1 : STD_LOGIC;
    signal stateAsWords_5_we1 : STD_LOGIC;
    signal stateAsWords_5_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_7_ce0 : STD_LOGIC;
    signal stateAsWords_7_we0 : STD_LOGIC;
    signal stateAsWords_7_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_7_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_7_ce1 : STD_LOGIC;
    signal stateAsWords_7_we1 : STD_LOGIC;
    signal stateAsWords_7_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_ce0 : STD_LOGIC;
    signal ctx_sponge_state_we0 : STD_LOGIC;
    signal ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_ap_done : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_0_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_0_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_1_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_1_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_2_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_2_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_3_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_3_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_5_fu_487_data_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_5_fu_487_dataByteLen : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdateIntLE_fu_507_ap_start : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_507_ap_idle : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_507_ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdateIntLE_fu_507_ctx_sponge_state_ce0 : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_507_ctx_sponge_state_we0 : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_507_ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdateIntLE_fu_507_ctx_sponge_byteIOInd : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HashUpdateIntLE_fu_507_x : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_KeccakP1600OnWords_fu_519_ap_start : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_519_ap_done : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_519_ap_idle : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_519_ap_ready : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_519_state_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakP1600OnWords_fu_519_state_ce0 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_519_state_we0 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_519_state_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_519_state_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_519_state_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakP1600OnWords_fu_519_state_ce1 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_519_state_we1 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_519_state_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_519_state_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromWordsToBytes_fu_528_ap_start : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_528_ap_idle : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_528_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromWordsToBytes_fu_528_state_ce0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_528_state_we0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_528_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromWordsToBytes_fu_528_stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fromWordsToBytes_fu_528_stateAsWords_ce0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_528_stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_534_ap_start : STD_LOGIC;
    signal grp_fromBytesToWords_fu_534_ap_done : STD_LOGIC;
    signal grp_fromBytesToWords_fu_534_ap_idle : STD_LOGIC;
    signal grp_fromBytesToWords_fu_534_ap_ready : STD_LOGIC;
    signal grp_fromBytesToWords_fu_534_stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fromBytesToWords_fu_534_stateAsWords_ce0 : STD_LOGIC;
    signal grp_fromBytesToWords_fu_534_stateAsWords_we0 : STD_LOGIC;
    signal grp_fromBytesToWords_fu_534_stateAsWords_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_534_stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_534_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromBytesToWords_fu_534_state_ce0 : STD_LOGIC;
    signal loop_0_i_reg_338 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln139_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln194_reg_349 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_1_i_i_i_i_reg_360 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_0_i_i_i35_reg_371 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i36_reg_383 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i52_reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal loop_0_i3_reg_406 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln139_2_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i5_reg_417 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_01_rec_i_i_i6_reg_429 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_1_i_i_i22_reg_441 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal i_0_i_i_i_reg_452 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i_reg_464 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i_reg_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal grp_KeccakWidth1600_Spon_5_fu_487_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal grp_HashUpdateIntLE_fu_507_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal grp_KeccakP1600OnWords_fu_519_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal grp_fromWordsToBytes_fu_528_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal grp_fromBytesToWords_fu_534_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal zext_ln140_fu_628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_fu_683_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_1_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_9_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_2_fu_834_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln140_2_fu_884_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_5_fu_992_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_4_fu_1031_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_5_fu_1166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_7_fu_1177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_6_fu_1219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctx_sponge_byteIOInd_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_17_fu_688_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_assign_6_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_18_fu_839_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_19_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_21_fu_997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_22_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_26_fu_1182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln149_fu_703_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_2_fu_860_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_555_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_5_fu_1056_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_8_fu_1203_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal tmp_fu_584_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln234_7_fu_592_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln234_6_fu_580_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln234_fu_596_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln234_fu_576_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln234_10_fu_602_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln226_fu_636_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_1_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_fu_648_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln234_11_fu_678_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_715_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln225_fu_731_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln225_fu_746_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_1_fu_749_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_2_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_8_fu_761_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_4_fu_779_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln234_fu_800_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln194_fu_804_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln234_2_fu_808_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln234_8_fu_814_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln234_12_fu_818_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln234_13_fu_828_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_892_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln225_3_fu_908_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln225_3_fu_923_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_2_fu_926_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_3_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_10_fu_937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln194_fu_971_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln234_fu_967_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_981_p0 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_981_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln234_14_fu_987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln234_fu_1015_p0 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln234_fu_1015_p2 : STD_LOGIC_VECTOR (68 downto 0);
    signal grp_fu_981_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal byte_assign_3_fu_1042_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal byte_assign_3_fu_1042_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_fu_1068_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln225_4_fu_1084_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln225_4_fu_1098_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_3_fu_1101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_12_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_5_fu_1131_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln194_3_fu_1156_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln234_3_fu_1152_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln234_6_fu_1160_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln234_15_fu_1171_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_981_ap_start : STD_LOGIC;
    signal grp_fu_981_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (102 downto 0);
    signal mul_ln234_fu_1015_p00 : STD_LOGIC_VECTOR (68 downto 0);

    component KeccakWidth1600_Spon_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_0_ce0 : OUT STD_LOGIC;
        data_0_we0 : OUT STD_LOGIC;
        data_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_1_ce0 : OUT STD_LOGIC;
        data_1_we0 : OUT STD_LOGIC;
        data_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_2_ce0 : OUT STD_LOGIC;
        data_2_we0 : OUT STD_LOGIC;
        data_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_3_ce0 : OUT STD_LOGIC;
        data_3_we0 : OUT STD_LOGIC;
        data_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dataByteLen : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component HashUpdateIntLE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctx_sponge_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_ce0 : OUT STD_LOGIC;
        ctx_sponge_state_we0 : OUT STD_LOGIC;
        ctx_sponge_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_byteIOInd : IN STD_LOGIC_VECTOR (31 downto 0);
        x : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakP1600OnWords IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce1 : OUT STD_LOGIC;
        state_we1 : OUT STD_LOGIC;
        state_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fromWordsToBytes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        stateAsWords_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        stateAsWords_ce0 : OUT STD_LOGIC;
        stateAsWords_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fromBytesToWords IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stateAsWords_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        stateAsWords_ce0 : OUT STD_LOGIC;
        stateAsWords_we0 : OUT STD_LOGIC;
        stateAsWords_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        stateAsWords_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_sign_urem_IfE IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (33 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component crypto_sign_mux_4JfO IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component pi_tempA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component createRandomTape_Hfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    stateAsWords_4_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_4_address0,
        ce0 => stateAsWords_4_ce0,
        we0 => stateAsWords_4_we0,
        d0 => stateAsWords_4_d0,
        q0 => stateAsWords_4_q0,
        address1 => grp_KeccakP1600OnWords_fu_519_state_address1,
        ce1 => stateAsWords_4_ce1,
        we1 => stateAsWords_4_we1,
        d1 => grp_KeccakP1600OnWords_fu_519_state_d1,
        q1 => stateAsWords_4_q1);

    stateAsWords_6_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_6_address0,
        ce0 => stateAsWords_6_ce0,
        we0 => stateAsWords_6_we0,
        d0 => stateAsWords_6_d0,
        q0 => stateAsWords_6_q0,
        address1 => grp_KeccakP1600OnWords_fu_519_state_address1,
        ce1 => stateAsWords_6_ce1,
        we1 => stateAsWords_6_we1,
        d1 => grp_KeccakP1600OnWords_fu_519_state_d1,
        q1 => stateAsWords_6_q1);

    stateAsWords_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_address0,
        ce0 => stateAsWords_ce0,
        we0 => stateAsWords_we0,
        d0 => stateAsWords_d0,
        q0 => stateAsWords_q0,
        address1 => grp_KeccakP1600OnWords_fu_519_state_address1,
        ce1 => stateAsWords_ce1,
        we1 => stateAsWords_we1,
        d1 => grp_KeccakP1600OnWords_fu_519_state_d1,
        q1 => stateAsWords_q1);

    stateAsWords_1_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_1_address0,
        ce0 => stateAsWords_1_ce0,
        we0 => stateAsWords_1_we0,
        d0 => stateAsWords_1_d0,
        q0 => stateAsWords_1_q0,
        address1 => grp_KeccakP1600OnWords_fu_519_state_address1,
        ce1 => stateAsWords_1_ce1,
        we1 => stateAsWords_1_we1,
        d1 => grp_KeccakP1600OnWords_fu_519_state_d1,
        q1 => stateAsWords_1_q1);

    stateAsWords_5_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_5_address0,
        ce0 => stateAsWords_5_ce0,
        we0 => stateAsWords_5_we0,
        d0 => stateAsWords_5_d0,
        q0 => stateAsWords_5_q0,
        address1 => grp_KeccakP1600OnWords_fu_519_state_address1,
        ce1 => stateAsWords_5_ce1,
        we1 => stateAsWords_5_we1,
        d1 => grp_KeccakP1600OnWords_fu_519_state_d1,
        q1 => stateAsWords_5_q1);

    stateAsWords_7_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_7_address0,
        ce0 => stateAsWords_7_ce0,
        we0 => stateAsWords_7_we0,
        d0 => stateAsWords_7_d0,
        q0 => stateAsWords_7_q0,
        address1 => grp_KeccakP1600OnWords_fu_519_state_address1,
        ce1 => stateAsWords_7_ce1,
        we1 => stateAsWords_7_we1,
        d1 => grp_KeccakP1600OnWords_fu_519_state_d1,
        q1 => stateAsWords_7_q1);

    ctx_sponge_state_U : component createRandomTape_Hfu
    generic map (
        DataWidth => 8,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ctx_sponge_state_address0,
        ce0 => ctx_sponge_state_ce0,
        we0 => ctx_sponge_state_we0,
        d0 => ctx_sponge_state_d0,
        q0 => ctx_sponge_state_q0);

    grp_KeccakWidth1600_Spon_5_fu_487 : component KeccakWidth1600_Spon_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_5_fu_487_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_5_fu_487_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_5_fu_487_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_5_fu_487_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_5_fu_487_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_5_fu_487_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_5_fu_487_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_5_fu_487_instance_state_d0,
        instance_state_q0 => ctx_sponge_state_q0,
        data_0_address0 => grp_KeccakWidth1600_Spon_5_fu_487_data_0_address0,
        data_0_ce0 => grp_KeccakWidth1600_Spon_5_fu_487_data_0_ce0,
        data_0_we0 => grp_KeccakWidth1600_Spon_5_fu_487_data_0_we0,
        data_0_d0 => grp_KeccakWidth1600_Spon_5_fu_487_data_0_d0,
        data_1_address0 => grp_KeccakWidth1600_Spon_5_fu_487_data_1_address0,
        data_1_ce0 => grp_KeccakWidth1600_Spon_5_fu_487_data_1_ce0,
        data_1_we0 => grp_KeccakWidth1600_Spon_5_fu_487_data_1_we0,
        data_1_d0 => grp_KeccakWidth1600_Spon_5_fu_487_data_1_d0,
        data_2_address0 => grp_KeccakWidth1600_Spon_5_fu_487_data_2_address0,
        data_2_ce0 => grp_KeccakWidth1600_Spon_5_fu_487_data_2_ce0,
        data_2_we0 => grp_KeccakWidth1600_Spon_5_fu_487_data_2_we0,
        data_2_d0 => grp_KeccakWidth1600_Spon_5_fu_487_data_2_d0,
        data_3_address0 => grp_KeccakWidth1600_Spon_5_fu_487_data_3_address0,
        data_3_ce0 => grp_KeccakWidth1600_Spon_5_fu_487_data_3_ce0,
        data_3_we0 => grp_KeccakWidth1600_Spon_5_fu_487_data_3_we0,
        data_3_d0 => grp_KeccakWidth1600_Spon_5_fu_487_data_3_d0,
        dataByteLen => grp_KeccakWidth1600_Spon_5_fu_487_dataByteLen);

    grp_HashUpdateIntLE_fu_507 : component HashUpdateIntLE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HashUpdateIntLE_fu_507_ap_start,
        ap_done => grp_HashUpdateIntLE_fu_507_ap_done,
        ap_idle => grp_HashUpdateIntLE_fu_507_ap_idle,
        ap_ready => grp_HashUpdateIntLE_fu_507_ap_ready,
        ctx_sponge_state_address0 => grp_HashUpdateIntLE_fu_507_ctx_sponge_state_address0,
        ctx_sponge_state_ce0 => grp_HashUpdateIntLE_fu_507_ctx_sponge_state_ce0,
        ctx_sponge_state_we0 => grp_HashUpdateIntLE_fu_507_ctx_sponge_state_we0,
        ctx_sponge_state_d0 => grp_HashUpdateIntLE_fu_507_ctx_sponge_state_d0,
        ctx_sponge_state_q0 => ctx_sponge_state_q0,
        ctx_sponge_byteIOInd => grp_HashUpdateIntLE_fu_507_ctx_sponge_byteIOInd,
        x => grp_HashUpdateIntLE_fu_507_x,
        ap_return => grp_HashUpdateIntLE_fu_507_ap_return);

    grp_KeccakP1600OnWords_fu_519 : component KeccakP1600OnWords
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakP1600OnWords_fu_519_ap_start,
        ap_done => grp_KeccakP1600OnWords_fu_519_ap_done,
        ap_idle => grp_KeccakP1600OnWords_fu_519_ap_idle,
        ap_ready => grp_KeccakP1600OnWords_fu_519_ap_ready,
        state_address0 => grp_KeccakP1600OnWords_fu_519_state_address0,
        state_ce0 => grp_KeccakP1600OnWords_fu_519_state_ce0,
        state_we0 => grp_KeccakP1600OnWords_fu_519_state_we0,
        state_d0 => grp_KeccakP1600OnWords_fu_519_state_d0,
        state_q0 => grp_KeccakP1600OnWords_fu_519_state_q0,
        state_address1 => grp_KeccakP1600OnWords_fu_519_state_address1,
        state_ce1 => grp_KeccakP1600OnWords_fu_519_state_ce1,
        state_we1 => grp_KeccakP1600OnWords_fu_519_state_we1,
        state_d1 => grp_KeccakP1600OnWords_fu_519_state_d1,
        state_q1 => grp_KeccakP1600OnWords_fu_519_state_q1);

    grp_fromWordsToBytes_fu_528 : component fromWordsToBytes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fromWordsToBytes_fu_528_ap_start,
        ap_done => grp_fromWordsToBytes_fu_528_ap_done,
        ap_idle => grp_fromWordsToBytes_fu_528_ap_idle,
        ap_ready => grp_fromWordsToBytes_fu_528_ap_ready,
        state_address0 => grp_fromWordsToBytes_fu_528_state_address0,
        state_ce0 => grp_fromWordsToBytes_fu_528_state_ce0,
        state_we0 => grp_fromWordsToBytes_fu_528_state_we0,
        state_d0 => grp_fromWordsToBytes_fu_528_state_d0,
        stateAsWords_address0 => grp_fromWordsToBytes_fu_528_stateAsWords_address0,
        stateAsWords_ce0 => grp_fromWordsToBytes_fu_528_stateAsWords_ce0,
        stateAsWords_q0 => grp_fromWordsToBytes_fu_528_stateAsWords_q0);

    grp_fromBytesToWords_fu_534 : component fromBytesToWords
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fromBytesToWords_fu_534_ap_start,
        ap_done => grp_fromBytesToWords_fu_534_ap_done,
        ap_idle => grp_fromBytesToWords_fu_534_ap_idle,
        ap_ready => grp_fromBytesToWords_fu_534_ap_ready,
        stateAsWords_address0 => grp_fromBytesToWords_fu_534_stateAsWords_address0,
        stateAsWords_ce0 => grp_fromBytesToWords_fu_534_stateAsWords_ce0,
        stateAsWords_we0 => grp_fromBytesToWords_fu_534_stateAsWords_we0,
        stateAsWords_d0 => grp_fromBytesToWords_fu_534_stateAsWords_d0,
        stateAsWords_q0 => grp_fromBytesToWords_fu_534_stateAsWords_q0,
        state_address0 => grp_fromBytesToWords_fu_534_state_address0,
        state_ce0 => grp_fromBytesToWords_fu_534_state_ce0,
        state_q0 => ctx_sponge_state_q0);

    crypto_sign_urem_IfE_U62 : component crypto_sign_urem_IfE
    generic map (
        ID => 1,
        NUM_STAGE => 38,
        din0_WIDTH => 34,
        din1_WIDTH => 7,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_981_ap_start,
        done => grp_fu_981_ap_done,
        din0 => grp_fu_981_p0,
        din1 => grp_fu_981_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_981_p2);

    crypto_sign_mux_4JfO_U63 : component crypto_sign_mux_4JfO
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 64,
        dout_WIDTH => 8)
    port map (
        din0 => tape_0_q0,
        din1 => tape_1_q0,
        din2 => tape_2_q0,
        din3 => tape_3_q0,
        din4 => byte_assign_3_fu_1042_p5,
        dout => byte_assign_3_fu_1042_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_HashUpdateIntLE_fu_507_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HashUpdateIntLE_fu_507_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state88) or ((icmp_ln194_4_fu_1078_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)))) then 
                    grp_HashUpdateIntLE_fu_507_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HashUpdateIntLE_fu_507_ap_ready = ap_const_logic_1)) then 
                    grp_HashUpdateIntLE_fu_507_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakP1600OnWords_fu_519_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakP1600OnWords_fu_519_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_KeccakP1600OnWords_fu_519_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakP1600OnWords_fu_519_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakP1600OnWords_fu_519_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_5_fu_487_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_5_fu_487_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    grp_KeccakWidth1600_Spon_5_fu_487_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_5_fu_487_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_5_fu_487_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fromBytesToWords_fu_534_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fromBytesToWords_fu_534_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((icmp_ln239_3_fu_1187_p2 = ap_const_lv1_1) and (icmp_ln233_3_fu_1141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80)) or ((icmp_ln239_2_fu_1001_p2 = ap_const_lv1_1) and (icmp_ln233_2_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((icmp_ln239_1_fu_844_p2 = ap_const_lv1_1) and (icmp_ln233_1_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((icmp_ln239_fu_692_p2 = ap_const_lv1_1) and (icmp_ln233_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                    grp_fromBytesToWords_fu_534_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fromBytesToWords_fu_534_ap_ready = ap_const_logic_1)) then 
                    grp_fromBytesToWords_fu_534_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fromWordsToBytes_fu_528_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fromWordsToBytes_fu_528_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    grp_fromWordsToBytes_fu_528_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fromWordsToBytes_fu_528_ap_ready = ap_const_logic_1)) then 
                    grp_fromWordsToBytes_fu_528_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ctx_sponge_byteIOInd_19_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln239_2_fu_1001_p2 = ap_const_lv1_0) and (icmp_ln233_2_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                ctx_sponge_byteIOInd_19_fu_160 <= ctx_sponge_byteIOInd_21_fu_997_p2;
            elsif ((((icmp_ln239_2_fu_1001_p2 = ap_const_lv1_1) and (icmp_ln233_2_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((icmp_ln139_2_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
                ctx_sponge_byteIOInd_19_fu_160 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_22_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln239_3_fu_1187_p2 = ap_const_lv1_1) and (icmp_ln233_3_fu_1141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                ctx_sponge_byteIOInd_22_fu_164 <= ap_const_lv32_0;
            elsif (((icmp_ln239_3_fu_1187_p2 = ap_const_lv1_0) and (icmp_ln233_3_fu_1141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                ctx_sponge_byteIOInd_22_fu_164 <= ctx_sponge_byteIOInd_26_fu_1182_p2;
            elsif (((icmp_ln194_3_fu_902_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                ctx_sponge_byteIOInd_22_fu_164 <= ctx_sponge_byteIOInd_19_fu_160;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln239_fu_692_p2 = ap_const_lv1_0) and (icmp_ln233_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                ctx_sponge_byteIOInd_fu_152 <= ctx_sponge_byteIOInd_17_fu_688_p2;
            elsif ((((icmp_ln239_fu_692_p2 = ap_const_lv1_1) and (icmp_ln233_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln139_fu_616_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                ctx_sponge_byteIOInd_fu_152 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i35_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                i_0_i_i_i35_reg_371 <= i_reg_1321;
            elsif (((ap_phi_mux_phi_ln194_phi_fu_353_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_i_i_i35_reg_371 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i5_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state77_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
                i_0_i_i_i5_reg_417 <= add_ln231_reg_1404;
            elsif (((icmp_ln139_2_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                i_0_i_i_i5_reg_417 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state86_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
                i_0_i_i_i_reg_452 <= i_14_reg_1491;
            elsif (((icmp_ln194_3_fu_902_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                i_0_i_i_i_reg_452 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    loop_0_i3_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln139_2_fu_872_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                loop_0_i3_reg_406 <= loop_30_fu_878_p2;
            elsif (((grp_KeccakWidth1600_Spon_5_fu_487_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                loop_0_i3_reg_406 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    loop_0_i_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln139_fu_616_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                loop_0_i_reg_338 <= loop_28_fu_622_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                loop_0_i_reg_338 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i22_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
                loop_1_i_i_i22_reg_441 <= loop_31_reg_1412;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                loop_1_i_i_i22_reg_441 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i52_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                loop_1_i_i_i52_reg_395 <= loop_29_reg_1329;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                loop_1_i_i_i52_reg_395 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i_i_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                loop_1_i_i_i_i_reg_360 <= loop_reg_1278;
            elsif (((ap_phi_mux_phi_ln194_phi_fu_353_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                loop_1_i_i_i_i_reg_360 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
                loop_1_i_i_i_reg_476 <= loop_32_reg_1499;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
                loop_1_i_i_i_reg_476 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    offset_assign_6_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln239_1_fu_844_p2 = ap_const_lv1_1) and (icmp_ln233_1_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                offset_assign_6_fu_156 <= ap_const_lv32_0;
            elsif (((icmp_ln239_1_fu_844_p2 = ap_const_lv1_0) and (icmp_ln233_1_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                offset_assign_6_fu_156 <= ctx_sponge_byteIOInd_18_fu_839_p2;
            elsif (((ap_phi_mux_phi_ln194_phi_fu_353_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                offset_assign_6_fu_156 <= ctx_sponge_byteIOInd_fu_152;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i36_reg_383_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                p_01_rec_i_i_i36_reg_383 <= p_2_rec_i_i_i59_fu_867_p2;
            elsif (((ap_phi_mux_phi_ln194_phi_fu_353_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_01_rec_i_i_i36_reg_383 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i6_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state77_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
                p_01_rec_i_i_i6_reg_429 <= p_2_rec_i_i_i29_fu_1063_p2;
            elsif (((icmp_ln139_2_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                p_01_rec_i_i_i6_reg_429 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state86_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
                p_01_rec_i_i_i_reg_464 <= p_2_rec_i_i_i_fu_1210_p2;
            elsif (((icmp_ln194_3_fu_902_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                p_01_rec_i_i_i_reg_464 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    phi_ln194_reg_349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                phi_ln194_reg_349 <= icmp_ln244_fu_710_p2;
            elsif (((icmp_ln139_fu_616_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_ln194_reg_349 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                add_ln231_reg_1404 <= add_ln231_fu_950_p2;
                select_ln226_5_reg_1397 <= select_ln226_5_fu_942_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_2_fu_956_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                add_ln234_reg_1417 <= add_ln234_fu_975_p2;
                ctx_sponge_state_add_14_reg_1423 <= zext_ln149_5_fu_992_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                ctx_sponge_byteIOInd_16_reg_1254 <= ctx_sponge_byteIOInd_fu_152;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                ctx_sponge_byteIOInd_20_reg_1373 <= ctx_sponge_byteIOInd_19_fu_160;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_4_fu_1078_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                ctx_sponge_byteIOInd_27_reg_1470 <= ctx_sponge_byteIOInd_22_fu_164;
                    zext_ln241_reg_1475(7 downto 0) <= zext_ln241_fu_1094_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_1_fu_789_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                ctx_sponge_state_add_10_reg_1339 <= zext_ln149_2_fu_834_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_725_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                ctx_sponge_state_add_11_reg_1305 <= zext_ln149_1_fu_741_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_3_fu_1141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                ctx_sponge_state_add_15_reg_1509 <= zext_ln149_7_fu_1177_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state91) and (grp_HashUpdateIntLE_fu_507_ap_done = ap_const_logic_1))) then
                ctx_sponge_state_add_16_reg_1528 <= zext_ln149_6_fu_1219_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_fu_667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                ctx_sponge_state_add_9_reg_1283 <= zext_ln149_fu_683_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                i_14_reg_1491 <= i_14_fu_1135_p2;
                select_ln226_6_reg_1480 <= select_ln226_6_fu_1119_p3;
                    zext_ln231_2_reg_1486(31 downto 0) <= zext_ln231_2_fu_1127_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                i_reg_1321 <= i_fu_783_p2;
                select_ln226_4_reg_1310 <= select_ln226_4_fu_767_p3;
                    zext_ln231_reg_1316(31 downto 0) <= zext_ln231_fu_775_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_1_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                icmp_ln239_1_reg_1344 <= icmp_ln239_1_fu_844_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_2_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                icmp_ln239_2_reg_1428 <= icmp_ln239_2_fu_1001_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_3_fu_1141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                icmp_ln239_3_reg_1514 <= icmp_ln239_3_fu_1187_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln239_reg_1288 <= icmp_ln239_fu_692_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                loop_29_reg_1329 <= loop_29_fu_794_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                loop_31_reg_1412 <= loop_31_fu_961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                loop_32_reg_1499 <= loop_32_fu_1146_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                loop_reg_1278 <= loop_fu_672_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_4_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                partialBlock_11_reg_1465 <= partialBlock_11_fu_1088_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                partialBlock_7_reg_1300 <= partialBlock_7_fu_735_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_3_fu_902_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                partialBlock_9_reg_1384 <= partialBlock_9_fu_912_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state89) and (grp_HashUpdateIntLE_fu_507_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state87) and (grp_HashUpdateIntLE_fu_507_ap_done = ap_const_logic_1)))) then
                reg_571 <= grp_HashUpdateIntLE_fu_507_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_phi_ln194_phi_fu_353_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                select_ln226_reg_1260 <= select_ln226_fu_654_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    tmp_47_cast_reg_1234(14 downto 4) <= tmp_47_cast_fu_608_p3(14 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                tmp_55_reg_1432 <= mul_ln234_fu_1015_p2(68 downto 40);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state88)) then
                    zext_ln242_reg_1523(1 downto 0) <= zext_ln242_fu_1215_p1(1 downto 0);
            end if;
        end if;
    end process;
    tmp_47_cast_reg_1234(3 downto 0) <= "0000";
    zext_ln231_reg_1316(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln241_reg_1475(8) <= '0';
    zext_ln231_2_reg_1486(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln242_reg_1523(8 downto 2) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state87, grp_HashUpdateIntLE_fu_507_ap_done, ap_CS_fsm_state89, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_phi_mux_phi_ln194_phi_fu_353_p4, ap_CS_fsm_state4, icmp_ln233_fu_667_p2, icmp_ln239_fu_692_p2, ap_CS_fsm_state10, grp_fromWordsToBytes_fu_528_ap_done, ap_block_state10_on_subcall_done, ap_CS_fsm_state11, icmp_ln194_fu_725_p2, ap_CS_fsm_state13, icmp_ln233_1_fu_789_p2, icmp_ln239_1_fu_844_p2, ap_CS_fsm_state19, ap_block_state19_on_subcall_done, ap_CS_fsm_state31, ap_CS_fsm_state32, icmp_ln194_3_fu_902_p2, ap_CS_fsm_state34, icmp_ln233_2_fu_956_p2, icmp_ln239_2_fu_1001_p2, ap_CS_fsm_state77, ap_block_state77_on_subcall_done, ap_CS_fsm_state78, icmp_ln194_4_fu_1078_p2, ap_CS_fsm_state80, icmp_ln233_3_fu_1141_p2, icmp_ln239_3_fu_1187_p2, ap_CS_fsm_state86, ap_block_state86_on_subcall_done, ap_CS_fsm_state91, grp_KeccakWidth1600_Spon_5_fu_487_ap_done, grp_KeccakP1600OnWords_fu_519_ap_done, grp_fromBytesToWords_fu_534_ap_done, icmp_ln139_fu_616_p2, ap_CS_fsm_state30, icmp_ln139_2_fu_872_p2, ap_CS_fsm_state103, ap_CS_fsm_state8, ap_CS_fsm_state17, ap_CS_fsm_state26, ap_CS_fsm_state75, ap_CS_fsm_state84, ap_CS_fsm_state99, ap_CS_fsm_state28, ap_CS_fsm_state101, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state73, ap_CS_fsm_state82, ap_CS_fsm_state97)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln139_fu_616_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_phi_mux_phi_ln194_phi_fu_353_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln239_fu_692_p2 = ap_const_lv1_0) and (icmp_ln233_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((icmp_ln239_fu_692_p2 = ap_const_lv1_1) and (icmp_ln233_fu_667_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((grp_fromBytesToWords_fu_534_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_KeccakP1600OnWords_fu_519_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln194_fu_725_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln239_1_fu_844_p2 = ap_const_lv1_0) and (icmp_ln233_1_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((icmp_ln239_1_fu_844_p2 = ap_const_lv1_1) and (icmp_ln233_1_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state15 => 
                if (((grp_fromBytesToWords_fu_534_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_KeccakP1600OnWords_fu_519_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((grp_fromBytesToWords_fu_534_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((grp_KeccakP1600OnWords_fu_519_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((grp_fromWordsToBytes_fu_528_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((grp_KeccakWidth1600_Spon_5_fu_487_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (((icmp_ln139_2_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((icmp_ln194_3_fu_902_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state78;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((icmp_ln239_2_fu_1001_p2 = ap_const_lv1_0) and (icmp_ln233_2_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                elsif (((icmp_ln239_2_fu_1001_p2 = ap_const_lv1_1) and (icmp_ln233_2_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state73 => 
                if (((grp_fromBytesToWords_fu_534_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                if (((grp_KeccakP1600OnWords_fu_519_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                if (((ap_const_boolean_0 = ap_block_state77_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state77))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when ap_ST_fsm_state78 => 
                if (((icmp_ln194_4_fu_1078_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78))) then
                    ap_NS_fsm <= ap_ST_fsm_state87;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                if (((icmp_ln239_3_fu_1187_p2 = ap_const_lv1_0) and (icmp_ln233_3_fu_1141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                elsif (((icmp_ln239_3_fu_1187_p2 = ap_const_lv1_1) and (icmp_ln233_3_fu_1141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state82 => 
                if (((grp_fromBytesToWords_fu_534_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                if (((grp_KeccakP1600OnWords_fu_519_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state84))) then
                    ap_NS_fsm <= ap_ST_fsm_state85;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                if (((ap_const_boolean_0 = ap_block_state86_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state86))) then
                    ap_NS_fsm <= ap_ST_fsm_state78;
                else
                    ap_NS_fsm <= ap_ST_fsm_state86;
                end if;
            when ap_ST_fsm_state87 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state87) and (grp_HashUpdateIntLE_fu_507_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state88;
                else
                    ap_NS_fsm <= ap_ST_fsm_state87;
                end if;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state89) and (grp_HashUpdateIntLE_fu_507_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state90;
                else
                    ap_NS_fsm <= ap_ST_fsm_state89;
                end if;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state91) and (grp_HashUpdateIntLE_fu_507_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state92;
                else
                    ap_NS_fsm <= ap_ST_fsm_state91;
                end if;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                if (((grp_fromBytesToWords_fu_534_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state97))) then
                    ap_NS_fsm <= ap_ST_fsm_state98;
                else
                    ap_NS_fsm <= ap_ST_fsm_state97;
                end if;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                if (((grp_KeccakP1600OnWords_fu_519_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state99))) then
                    ap_NS_fsm <= ap_ST_fsm_state100;
                else
                    ap_NS_fsm <= ap_ST_fsm_state99;
                end if;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                if (((grp_fromWordsToBytes_fu_528_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state101))) then
                    ap_NS_fsm <= ap_ST_fsm_state102;
                else
                    ap_NS_fsm <= ap_ST_fsm_state101;
                end if;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                if (((grp_KeccakWidth1600_Spon_5_fu_487_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state103))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state103;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln226_1_fu_749_p2 <= std_logic_vector(unsigned(offset_assign_6_fu_156) + unsigned(zext_ln225_fu_746_p1));
    add_ln226_2_fu_926_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_20_reg_1373) + unsigned(zext_ln225_3_fu_923_p1));
    add_ln226_3_fu_1101_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_22_fu_164) + unsigned(zext_ln225_4_fu_1098_p1));
    add_ln226_fu_636_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_fu_152) + unsigned(ap_const_lv32_1));
    add_ln231_fu_950_p2 <= std_logic_vector(unsigned(select_ln226_5_fu_942_p3) + unsigned(i_0_i_i_i5_reg_417));
    add_ln234_10_fu_602_p2 <= std_logic_vector(unsigned(sub_ln234_fu_596_p2) + unsigned(zext_ln234_fu_576_p1));
    add_ln234_11_fu_678_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_16_reg_1254) + unsigned(loop_1_i_i_i_i_reg_360));
    add_ln234_12_fu_818_p2 <= std_logic_vector(unsigned(tmp_47_cast_reg_1234) + unsigned(zext_ln234_8_fu_814_p1));
    add_ln234_13_fu_828_p2 <= std_logic_vector(unsigned(loop_1_i_i_i52_reg_395) + unsigned(offset_assign_6_fu_156));
    add_ln234_14_fu_987_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_20_reg_1373) + unsigned(loop_1_i_i_i22_reg_441));
    add_ln234_15_fu_1171_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_22_fu_164) + unsigned(loop_1_i_i_i_reg_476));
    add_ln234_2_fu_808_p2 <= std_logic_vector(unsigned(trunc_ln234_fu_800_p1) + unsigned(trunc_ln194_fu_804_p1));
    add_ln234_6_fu_1160_p2 <= std_logic_vector(unsigned(trunc_ln194_3_fu_1156_p1) + unsigned(trunc_ln234_3_fu_1152_p1));
    add_ln234_fu_975_p2 <= std_logic_vector(unsigned(zext_ln194_fu_971_p1) + unsigned(sext_ln234_fu_967_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state103 <= ap_CS_fsm(102);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);

    ap_block_state10_on_subcall_done_assign_proc : process(icmp_ln239_reg_1288, grp_fromWordsToBytes_fu_528_ap_done)
    begin
                ap_block_state10_on_subcall_done <= ((grp_fromWordsToBytes_fu_528_ap_done = ap_const_logic_0) and (icmp_ln239_reg_1288 = ap_const_lv1_1));
    end process;


    ap_block_state19_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_528_ap_done, icmp_ln239_1_reg_1344)
    begin
                ap_block_state19_on_subcall_done <= ((grp_fromWordsToBytes_fu_528_ap_done = ap_const_logic_0) and (icmp_ln239_1_reg_1344 = ap_const_lv1_1));
    end process;


    ap_block_state77_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_528_ap_done, icmp_ln239_2_reg_1428)
    begin
                ap_block_state77_on_subcall_done <= ((grp_fromWordsToBytes_fu_528_ap_done = ap_const_logic_0) and (icmp_ln239_2_reg_1428 = ap_const_lv1_1));
    end process;


    ap_block_state86_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_528_ap_done, icmp_ln239_3_reg_1514)
    begin
                ap_block_state86_on_subcall_done <= ((grp_fromWordsToBytes_fu_528_ap_done = ap_const_logic_0) and (icmp_ln239_3_reg_1514 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_KeccakWidth1600_Spon_5_fu_487_ap_done, ap_CS_fsm_state103)
    begin
        if ((((grp_KeccakWidth1600_Spon_5_fu_487_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state103)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_phi_ln194_phi_fu_353_p4 <= phi_ln194_reg_349;

    ap_ready_assign_proc : process(grp_KeccakWidth1600_Spon_5_fu_487_ap_done, ap_CS_fsm_state103)
    begin
        if (((grp_KeccakWidth1600_Spon_5_fu_487_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state103))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    byte_assign_3_fu_1042_p5 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_reg_1432),64));
    ctx_sponge_byteIOInd_17_fu_688_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_16_reg_1254) + unsigned(select_ln226_reg_1260));
    ctx_sponge_byteIOInd_18_fu_839_p2 <= std_logic_vector(unsigned(offset_assign_6_fu_156) + unsigned(select_ln226_4_reg_1310));
    ctx_sponge_byteIOInd_21_fu_997_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_20_reg_1373) + unsigned(select_ln226_5_reg_1397));
    ctx_sponge_byteIOInd_26_fu_1182_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_22_fu_164) + unsigned(select_ln226_6_reg_1480));
    ctx_sponge_state_add_12_reg_1353 <= ap_const_lv64_A7(8 - 1 downto 0);

    ctx_sponge_state_address0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state89, ap_CS_fsm_state2, ap_CS_fsm_state4, ctx_sponge_state_add_9_reg_1283, icmp_ln233_fu_667_p2, icmp_ln239_reg_1288, ap_CS_fsm_state10, ap_CS_fsm_state11, ctx_sponge_state_add_11_reg_1305, ap_CS_fsm_state13, icmp_ln233_1_fu_789_p2, ctx_sponge_state_add_10_reg_1339, icmp_ln239_1_reg_1344, ap_CS_fsm_state19, ctx_sponge_state_add_12_reg_1353, ap_CS_fsm_state21, ap_CS_fsm_state31, ctx_sponge_state_add_14_reg_1423, icmp_ln239_2_reg_1428, ap_CS_fsm_state71, ap_CS_fsm_state77, ap_CS_fsm_state80, icmp_ln233_3_fu_1141_p2, ctx_sponge_state_add_15_reg_1509, icmp_ln239_3_reg_1514, ap_CS_fsm_state86, ctx_sponge_state_add_16_reg_1528, ap_CS_fsm_state91, grp_KeccakWidth1600_Spon_5_fu_487_instance_state_address0, grp_HashUpdateIntLE_fu_507_ctx_sponge_state_address0, grp_fromWordsToBytes_fu_528_state_address0, grp_fromBytesToWords_fu_534_state_address0, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state30, ap_CS_fsm_state72, ap_CS_fsm_state81, ap_CS_fsm_state103, ap_CS_fsm_state28, ap_CS_fsm_state101, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state73, ap_CS_fsm_state82, ap_CS_fsm_state97, zext_ln140_fu_628_p1, zext_ln149_fu_683_p1, zext_ln149_1_fu_741_p1, zext_ln149_2_fu_834_p1, zext_ln140_2_fu_884_p1, zext_ln149_7_fu_1177_p1, ap_CS_fsm_state20, ap_CS_fsm_state22, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92))) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_16_reg_1528;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_15_reg_1509;
        elsif (((icmp_ln233_3_fu_1141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            ctx_sponge_state_address0 <= zext_ln149_7_fu_1177_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_14_reg_1423;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ctx_sponge_state_address0 <= zext_ln140_2_fu_884_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_12_reg_1353;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ctx_sponge_state_address0 <= ap_const_lv64_A7(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_11_reg_1305;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_10_reg_1339;
        elsif (((icmp_ln233_1_fu_789_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ctx_sponge_state_address0 <= zext_ln149_2_fu_834_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ctx_sponge_state_address0 <= zext_ln149_1_fu_741_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_9_reg_1283;
        elsif (((icmp_ln233_fu_667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ctx_sponge_state_address0 <= zext_ln149_fu_683_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ctx_sponge_state_address0 <= zext_ln140_fu_628_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ctx_sponge_state_address0 <= grp_fromBytesToWords_fu_534_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln239_3_reg_1514 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86)) or ((icmp_ln239_2_reg_1428 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77)) or ((icmp_ln239_1_reg_1344 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((icmp_ln239_reg_1288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            ctx_sponge_state_address0 <= grp_fromWordsToBytes_fu_528_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state87))) then 
            ctx_sponge_state_address0 <= grp_HashUpdateIntLE_fu_507_ctx_sponge_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_5_fu_487_instance_state_address0;
        else 
            ctx_sponge_state_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_ce0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state89, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln233_fu_667_p2, icmp_ln239_reg_1288, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, icmp_ln233_1_fu_789_p2, icmp_ln239_1_reg_1344, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state31, icmp_ln239_2_reg_1428, ap_CS_fsm_state71, ap_CS_fsm_state77, ap_CS_fsm_state80, icmp_ln233_3_fu_1141_p2, icmp_ln239_3_reg_1514, ap_CS_fsm_state86, ap_CS_fsm_state91, grp_KeccakWidth1600_Spon_5_fu_487_instance_state_ce0, grp_HashUpdateIntLE_fu_507_ctx_sponge_state_ce0, grp_fromWordsToBytes_fu_528_state_ce0, grp_fromBytesToWords_fu_534_state_ce0, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state30, ap_CS_fsm_state72, ap_CS_fsm_state81, ap_CS_fsm_state103, ap_CS_fsm_state28, ap_CS_fsm_state101, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state73, ap_CS_fsm_state82, ap_CS_fsm_state97, ap_CS_fsm_state20, ap_CS_fsm_state22, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((icmp_ln233_3_fu_1141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state80)) or ((icmp_ln233_1_fu_789_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((icmp_ln233_fu_667_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            ctx_sponge_state_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ctx_sponge_state_ce0 <= grp_fromBytesToWords_fu_534_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln239_3_reg_1514 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86)) or ((icmp_ln239_2_reg_1428 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77)) or ((icmp_ln239_1_reg_1344 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((icmp_ln239_reg_1288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            ctx_sponge_state_ce0 <= grp_fromWordsToBytes_fu_528_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state87))) then 
            ctx_sponge_state_ce0 <= grp_HashUpdateIntLE_fu_507_ctx_sponge_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_5_fu_487_instance_state_ce0;
        else 
            ctx_sponge_state_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_d0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state89, ap_CS_fsm_state2, icmp_ln239_reg_1288, ap_CS_fsm_state10, icmp_ln239_1_reg_1344, ap_CS_fsm_state19, ap_CS_fsm_state31, icmp_ln239_2_reg_1428, ap_CS_fsm_state77, icmp_ln239_3_reg_1514, ap_CS_fsm_state86, ap_CS_fsm_state91, grp_KeccakWidth1600_Spon_5_fu_487_instance_state_d0, grp_HashUpdateIntLE_fu_507_ctx_sponge_state_d0, grp_fromWordsToBytes_fu_528_state_d0, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state30, ap_CS_fsm_state72, ap_CS_fsm_state81, ap_CS_fsm_state103, ap_CS_fsm_state28, ap_CS_fsm_state101, xor_ln149_fu_703_p2, xor_ln149_2_fu_860_p2, ap_CS_fsm_state20, grp_fu_548_p2, ap_CS_fsm_state22, grp_fu_555_p2, xor_ln149_5_fu_1056_p2, xor_ln149_8_fu_1203_p2, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            ctx_sponge_state_d0 <= xor_ln149_8_fu_1203_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            ctx_sponge_state_d0 <= xor_ln149_5_fu_1056_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ctx_sponge_state_d0 <= grp_fu_555_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ctx_sponge_state_d0 <= grp_fu_548_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ctx_sponge_state_d0 <= xor_ln149_2_fu_860_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ctx_sponge_state_d0 <= xor_ln149_fu_703_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ctx_sponge_state_d0 <= ap_const_lv8_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln239_3_reg_1514 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86)) or ((icmp_ln239_2_reg_1428 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77)) or ((icmp_ln239_1_reg_1344 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((icmp_ln239_reg_1288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            ctx_sponge_state_d0 <= grp_fromWordsToBytes_fu_528_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state87))) then 
            ctx_sponge_state_d0 <= grp_HashUpdateIntLE_fu_507_ctx_sponge_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_5_fu_487_instance_state_d0;
        else 
            ctx_sponge_state_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_we0_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state89, ap_CS_fsm_state2, icmp_ln239_reg_1288, ap_CS_fsm_state10, icmp_ln239_1_reg_1344, ap_CS_fsm_state19, ap_CS_fsm_state31, icmp_ln239_2_reg_1428, ap_CS_fsm_state77, icmp_ln239_3_reg_1514, ap_CS_fsm_state86, ap_CS_fsm_state91, grp_KeccakWidth1600_Spon_5_fu_487_instance_state_we0, grp_HashUpdateIntLE_fu_507_ctx_sponge_state_we0, grp_fromWordsToBytes_fu_528_state_we0, icmp_ln139_fu_616_p2, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state30, icmp_ln139_2_fu_872_p2, ap_CS_fsm_state72, ap_CS_fsm_state81, ap_CS_fsm_state103, ap_CS_fsm_state28, ap_CS_fsm_state101, ap_CS_fsm_state20, ap_CS_fsm_state22, ap_CS_fsm_state93, ap_CS_fsm_state95)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((icmp_ln139_2_fu_872_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((icmp_ln139_fu_616_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ctx_sponge_state_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln239_3_reg_1514 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86)) or ((icmp_ln239_2_reg_1428 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77)) or ((icmp_ln239_1_reg_1344 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((icmp_ln239_reg_1288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            ctx_sponge_state_we0 <= grp_fromWordsToBytes_fu_528_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state87))) then 
            ctx_sponge_state_we0 <= grp_HashUpdateIntLE_fu_507_ctx_sponge_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_5_fu_487_instance_state_we0;
        else 
            ctx_sponge_state_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_HashUpdateIntLE_fu_507_ap_start <= grp_HashUpdateIntLE_fu_507_ap_start_reg;

    grp_HashUpdateIntLE_fu_507_ctx_sponge_byteIOInd_assign_proc : process(reg_571, ap_CS_fsm_state87, ap_CS_fsm_state89, ctx_sponge_byteIOInd_27_reg_1470, ap_CS_fsm_state91)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state89))) then 
            grp_HashUpdateIntLE_fu_507_ctx_sponge_byteIOInd <= reg_571;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            grp_HashUpdateIntLE_fu_507_ctx_sponge_byteIOInd <= ctx_sponge_byteIOInd_27_reg_1470;
        else 
            grp_HashUpdateIntLE_fu_507_ctx_sponge_byteIOInd <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_HashUpdateIntLE_fu_507_x_assign_proc : process(ap_CS_fsm_state87, ap_CS_fsm_state89, zext_ln241_reg_1475, zext_ln242_reg_1523, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            grp_HashUpdateIntLE_fu_507_x <= ap_const_lv9_5B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            grp_HashUpdateIntLE_fu_507_x <= zext_ln242_reg_1523;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            grp_HashUpdateIntLE_fu_507_x <= zext_ln241_reg_1475;
        else 
            grp_HashUpdateIntLE_fu_507_x <= "XXXXXXXXX";
        end if; 
    end process;

    grp_KeccakP1600OnWords_fu_519_ap_start <= grp_KeccakP1600OnWords_fu_519_ap_start_reg;

    grp_KeccakP1600OnWords_fu_519_state_q0_assign_proc : process(stateAsWords_4_q0, stateAsWords_6_q0, stateAsWords_q0, stateAsWords_1_q0, stateAsWords_5_q0, stateAsWords_7_q0, ap_CS_fsm_state8, ap_CS_fsm_state17, ap_CS_fsm_state26, ap_CS_fsm_state75, ap_CS_fsm_state84, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_KeccakP1600OnWords_fu_519_state_q0 <= stateAsWords_6_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_KeccakP1600OnWords_fu_519_state_q0 <= stateAsWords_7_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_KeccakP1600OnWords_fu_519_state_q0 <= stateAsWords_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_KeccakP1600OnWords_fu_519_state_q0 <= stateAsWords_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_KeccakP1600OnWords_fu_519_state_q0 <= stateAsWords_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_KeccakP1600OnWords_fu_519_state_q0 <= stateAsWords_q0;
        else 
            grp_KeccakP1600OnWords_fu_519_state_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_KeccakP1600OnWords_fu_519_state_q1_assign_proc : process(stateAsWords_4_q1, stateAsWords_6_q1, stateAsWords_q1, stateAsWords_1_q1, stateAsWords_5_q1, stateAsWords_7_q1, ap_CS_fsm_state8, ap_CS_fsm_state17, ap_CS_fsm_state26, ap_CS_fsm_state75, ap_CS_fsm_state84, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_KeccakP1600OnWords_fu_519_state_q1 <= stateAsWords_6_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_KeccakP1600OnWords_fu_519_state_q1 <= stateAsWords_7_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_KeccakP1600OnWords_fu_519_state_q1 <= stateAsWords_5_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_KeccakP1600OnWords_fu_519_state_q1 <= stateAsWords_4_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_KeccakP1600OnWords_fu_519_state_q1 <= stateAsWords_1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_KeccakP1600OnWords_fu_519_state_q1 <= stateAsWords_q1;
        else 
            grp_KeccakP1600OnWords_fu_519_state_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_5_fu_487_ap_start <= grp_KeccakWidth1600_Spon_5_fu_487_ap_start_reg;

    grp_KeccakWidth1600_Spon_5_fu_487_dataByteLen_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_KeccakWidth1600_Spon_5_fu_487_dataByteLen <= ap_const_lv8_5B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_KeccakWidth1600_Spon_5_fu_487_dataByteLen <= ap_const_lv8_20;
        else 
            grp_KeccakWidth1600_Spon_5_fu_487_dataByteLen <= "XXXXXXXX";
        end if; 
    end process;

    grp_fromBytesToWords_fu_534_ap_start <= grp_fromBytesToWords_fu_534_ap_start_reg;

    grp_fromBytesToWords_fu_534_stateAsWords_q0_assign_proc : process(stateAsWords_4_q0, stateAsWords_6_q0, stateAsWords_q0, stateAsWords_1_q0, stateAsWords_5_q0, stateAsWords_7_q0, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state73, ap_CS_fsm_state82, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            grp_fromBytesToWords_fu_534_stateAsWords_q0 <= stateAsWords_6_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            grp_fromBytesToWords_fu_534_stateAsWords_q0 <= stateAsWords_7_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            grp_fromBytesToWords_fu_534_stateAsWords_q0 <= stateAsWords_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fromBytesToWords_fu_534_stateAsWords_q0 <= stateAsWords_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fromBytesToWords_fu_534_stateAsWords_q0 <= stateAsWords_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fromBytesToWords_fu_534_stateAsWords_q0 <= stateAsWords_q0;
        else 
            grp_fromBytesToWords_fu_534_stateAsWords_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fromWordsToBytes_fu_528_ap_start <= grp_fromWordsToBytes_fu_528_ap_start_reg;

    grp_fromWordsToBytes_fu_528_stateAsWords_q0_assign_proc : process(icmp_ln239_reg_1288, ap_CS_fsm_state10, icmp_ln239_1_reg_1344, ap_CS_fsm_state19, icmp_ln239_2_reg_1428, ap_CS_fsm_state77, icmp_ln239_3_reg_1514, ap_CS_fsm_state86, stateAsWords_4_q0, stateAsWords_6_q0, stateAsWords_q0, stateAsWords_1_q0, stateAsWords_5_q0, stateAsWords_7_q0, ap_CS_fsm_state28, ap_CS_fsm_state101)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_fromWordsToBytes_fu_528_stateAsWords_q0 <= stateAsWords_6_q0;
        elsif (((icmp_ln239_3_reg_1514 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
            grp_fromWordsToBytes_fu_528_stateAsWords_q0 <= stateAsWords_7_q0;
        elsif (((icmp_ln239_2_reg_1428 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            grp_fromWordsToBytes_fu_528_stateAsWords_q0 <= stateAsWords_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fromWordsToBytes_fu_528_stateAsWords_q0 <= stateAsWords_4_q0;
        elsif (((icmp_ln239_1_reg_1344 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fromWordsToBytes_fu_528_stateAsWords_q0 <= stateAsWords_1_q0;
        elsif (((icmp_ln239_reg_1288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_fromWordsToBytes_fu_528_stateAsWords_q0 <= stateAsWords_q0;
        else 
            grp_fromWordsToBytes_fu_528_stateAsWords_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_548_p2 <= (ctx_sponge_state_q0 xor ap_const_lv8_1F);
    grp_fu_555_p2 <= (ctx_sponge_state_q0 xor ap_const_lv8_80);

    grp_fu_981_ap_start_assign_proc : process(ap_CS_fsm_state34, icmp_ln233_2_fu_956_p2)
    begin
        if (((icmp_ln233_2_fu_956_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            grp_fu_981_ap_start <= ap_const_logic_1;
        else 
            grp_fu_981_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_981_p0 <= std_logic_vector(unsigned(zext_ln194_fu_971_p1) + unsigned(sext_ln234_fu_967_p1));
    grp_fu_981_p1 <= ap_const_lv34_24(7 - 1 downto 0);
    i_14_fu_1135_p2 <= std_logic_vector(unsigned(zext_ln231_5_fu_1131_p1) + unsigned(i_0_i_i_i_reg_452));
    i_fu_783_p2 <= std_logic_vector(unsigned(zext_ln231_4_fu_779_p1) + unsigned(i_0_i_i_i35_reg_371));
    icmp_ln139_2_fu_872_p2 <= "1" when (loop_0_i3_reg_406 = ap_const_lv8_C8) else "0";
    icmp_ln139_fu_616_p2 <= "1" when (loop_0_i_reg_338 = ap_const_lv8_C8) else "0";
    icmp_ln194_3_fu_902_p2 <= "1" when (tmp_53_fu_892_p4 = ap_const_lv27_0) else "0";
    icmp_ln194_4_fu_1078_p2 <= "1" when (tmp_54_fu_1068_p4 = ap_const_lv28_0) else "0";
    icmp_ln194_fu_725_p2 <= "1" when (tmp_52_fu_715_p4 = ap_const_lv29_0) else "0";
    icmp_ln226_1_fu_642_p2 <= "1" when (unsigned(add_ln226_fu_636_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_2_fu_755_p2 <= "1" when (unsigned(add_ln226_1_fu_749_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_3_fu_931_p2 <= "1" when (unsigned(add_ln226_2_fu_926_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_fu_1107_p2 <= "1" when (unsigned(add_ln226_3_fu_1101_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln233_1_fu_789_p2 <= "1" when (loop_1_i_i_i52_reg_395 = select_ln226_4_reg_1310) else "0";
    icmp_ln233_2_fu_956_p2 <= "1" when (loop_1_i_i_i22_reg_441 = select_ln226_5_reg_1397) else "0";
    icmp_ln233_3_fu_1141_p2 <= "1" when (loop_1_i_i_i_reg_476 = select_ln226_6_reg_1480) else "0";
    icmp_ln233_fu_667_p2 <= "1" when (loop_1_i_i_i_i_reg_360 = select_ln226_reg_1260) else "0";
    icmp_ln239_1_fu_844_p2 <= "1" when (ctx_sponge_byteIOInd_18_fu_839_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_2_fu_1001_p2 <= "1" when (ctx_sponge_byteIOInd_21_fu_997_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_3_fu_1187_p2 <= "1" when (ctx_sponge_byteIOInd_26_fu_1182_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_fu_692_p2 <= "1" when (ctx_sponge_byteIOInd_17_fu_688_p2 = ap_const_lv32_A8) else "0";
    icmp_ln244_fu_710_p2 <= "1" when (select_ln226_reg_1260 = ap_const_lv32_0) else "0";
    loop_28_fu_622_p2 <= std_logic_vector(unsigned(loop_0_i_reg_338) + unsigned(ap_const_lv8_1));
    loop_29_fu_794_p2 <= std_logic_vector(unsigned(loop_1_i_i_i52_reg_395) + unsigned(ap_const_lv32_1));
    loop_30_fu_878_p2 <= std_logic_vector(unsigned(loop_0_i3_reg_406) + unsigned(ap_const_lv8_1));
    loop_31_fu_961_p2 <= std_logic_vector(signed(loop_1_i_i_i22_reg_441) + signed(ap_const_lv32_1));
    loop_32_fu_1146_p2 <= std_logic_vector(unsigned(loop_1_i_i_i_reg_476) + unsigned(ap_const_lv32_1));
    loop_fu_672_p2 <= std_logic_vector(unsigned(loop_1_i_i_i_i_reg_360) + unsigned(ap_const_lv32_1));
    mul_ln234_fu_1015_p0 <= mul_ln234_fu_1015_p00(34 - 1 downto 0);
    mul_ln234_fu_1015_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_reg_1417),69));
    mul_ln234_fu_1015_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln234_fu_1015_p0) * unsigned(ap_const_lv69_71C71C71D), 69));
    p_2_rec_i_i_i29_fu_1063_p2 <= std_logic_vector(unsigned(select_ln226_5_reg_1397) + unsigned(p_01_rec_i_i_i6_reg_429));
    p_2_rec_i_i_i59_fu_867_p2 <= std_logic_vector(unsigned(zext_ln231_reg_1316) + unsigned(p_01_rec_i_i_i36_reg_383));
    p_2_rec_i_i_i_fu_1210_p2 <= std_logic_vector(unsigned(zext_ln231_2_reg_1486) + unsigned(p_01_rec_i_i_i_reg_464));
    partialBlock_10_fu_937_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_20_reg_1373));
    partialBlock_11_fu_1088_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(trunc_ln225_4_fu_1084_p1));
    partialBlock_12_fu_1113_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_22_fu_164));
    partialBlock_7_fu_735_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln225_fu_731_p1));
    partialBlock_8_fu_761_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(offset_assign_6_fu_156));
    partialBlock_9_fu_912_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(trunc_ln225_3_fu_908_p1));
    partialBlock_fu_648_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_fu_152));
    salt_0_address0 <= zext_ln234_5_fu_1166_p1(5 - 1 downto 0);

    salt_0_ce0_assign_proc : process(ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            salt_0_ce0 <= ap_const_logic_1;
        else 
            salt_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    seed_address0 <= zext_ln234_9_fu_823_p1(14 - 1 downto 0);

    seed_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            seed_ce0 <= ap_const_logic_1;
        else 
            seed_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln226_4_fu_767_p3 <= 
        partialBlock_8_fu_761_p2 when (icmp_ln226_2_fu_755_p2(0) = '1') else 
        zext_ln225_fu_746_p1;
    select_ln226_5_fu_942_p3 <= 
        partialBlock_10_fu_937_p2 when (icmp_ln226_3_fu_931_p2(0) = '1') else 
        zext_ln225_3_fu_923_p1;
    select_ln226_6_fu_1119_p3 <= 
        partialBlock_12_fu_1113_p2 when (icmp_ln226_fu_1107_p2(0) = '1') else 
        zext_ln225_4_fu_1098_p1;
    select_ln226_fu_654_p3 <= 
        partialBlock_fu_648_p2 when (icmp_ln226_1_fu_642_p2(0) = '1') else 
        ap_const_lv32_1;
        sext_ln234_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(loop_1_i_i_i22_reg_441),34));


    stateAsWords_1_address0_assign_proc : process(icmp_ln239_1_reg_1344, ap_CS_fsm_state19, grp_KeccakP1600OnWords_fu_519_state_address0, grp_fromWordsToBytes_fu_528_stateAsWords_address0, grp_fromBytesToWords_fu_534_stateAsWords_address0, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stateAsWords_1_address0 <= grp_fromBytesToWords_fu_534_stateAsWords_address0;
        elsif (((icmp_ln239_1_reg_1344 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            stateAsWords_1_address0 <= grp_fromWordsToBytes_fu_528_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_address0 <= grp_KeccakP1600OnWords_fu_519_state_address0;
        else 
            stateAsWords_1_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_1_ce0_assign_proc : process(icmp_ln239_1_reg_1344, ap_CS_fsm_state19, grp_KeccakP1600OnWords_fu_519_state_ce0, grp_fromWordsToBytes_fu_528_stateAsWords_ce0, grp_fromBytesToWords_fu_534_stateAsWords_ce0, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stateAsWords_1_ce0 <= grp_fromBytesToWords_fu_534_stateAsWords_ce0;
        elsif (((icmp_ln239_1_reg_1344 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            stateAsWords_1_ce0 <= grp_fromWordsToBytes_fu_528_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_ce0 <= grp_KeccakP1600OnWords_fu_519_state_ce0;
        else 
            stateAsWords_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_1_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_ce1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_ce1 <= grp_KeccakP1600OnWords_fu_519_state_ce1;
        else 
            stateAsWords_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_1_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_d0, grp_fromBytesToWords_fu_534_stateAsWords_d0, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stateAsWords_1_d0 <= grp_fromBytesToWords_fu_534_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_d0 <= grp_KeccakP1600OnWords_fu_519_state_d0;
        else 
            stateAsWords_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_1_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we0, grp_fromBytesToWords_fu_534_stateAsWords_we0, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            stateAsWords_1_we0 <= grp_fromBytesToWords_fu_534_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_we0 <= grp_KeccakP1600OnWords_fu_519_state_we0;
        else 
            stateAsWords_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_1_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            stateAsWords_1_we1 <= grp_KeccakP1600OnWords_fu_519_state_we1;
        else 
            stateAsWords_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_4_address0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_address0, grp_fromWordsToBytes_fu_528_stateAsWords_address0, grp_fromBytesToWords_fu_534_stateAsWords_address0, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            stateAsWords_4_address0 <= grp_fromBytesToWords_fu_534_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            stateAsWords_4_address0 <= grp_fromWordsToBytes_fu_528_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_4_address0 <= grp_KeccakP1600OnWords_fu_519_state_address0;
        else 
            stateAsWords_4_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_4_ce0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_ce0, grp_fromWordsToBytes_fu_528_stateAsWords_ce0, grp_fromBytesToWords_fu_534_stateAsWords_ce0, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            stateAsWords_4_ce0 <= grp_fromBytesToWords_fu_534_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            stateAsWords_4_ce0 <= grp_fromWordsToBytes_fu_528_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_4_ce0 <= grp_KeccakP1600OnWords_fu_519_state_ce0;
        else 
            stateAsWords_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_4_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_ce1, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_4_ce1 <= grp_KeccakP1600OnWords_fu_519_state_ce1;
        else 
            stateAsWords_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_4_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_d0, grp_fromBytesToWords_fu_534_stateAsWords_d0, ap_CS_fsm_state26, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            stateAsWords_4_d0 <= grp_fromBytesToWords_fu_534_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_4_d0 <= grp_KeccakP1600OnWords_fu_519_state_d0;
        else 
            stateAsWords_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_4_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we0, grp_fromBytesToWords_fu_534_stateAsWords_we0, ap_CS_fsm_state26, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            stateAsWords_4_we0 <= grp_fromBytesToWords_fu_534_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_4_we0 <= grp_KeccakP1600OnWords_fu_519_state_we0;
        else 
            stateAsWords_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_4_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we1, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            stateAsWords_4_we1 <= grp_KeccakP1600OnWords_fu_519_state_we1;
        else 
            stateAsWords_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_5_address0_assign_proc : process(icmp_ln239_2_reg_1428, ap_CS_fsm_state77, grp_KeccakP1600OnWords_fu_519_state_address0, grp_fromWordsToBytes_fu_528_stateAsWords_address0, grp_fromBytesToWords_fu_534_stateAsWords_address0, ap_CS_fsm_state75, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            stateAsWords_5_address0 <= grp_fromBytesToWords_fu_534_stateAsWords_address0;
        elsif (((icmp_ln239_2_reg_1428 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            stateAsWords_5_address0 <= grp_fromWordsToBytes_fu_528_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            stateAsWords_5_address0 <= grp_KeccakP1600OnWords_fu_519_state_address0;
        else 
            stateAsWords_5_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_5_ce0_assign_proc : process(icmp_ln239_2_reg_1428, ap_CS_fsm_state77, grp_KeccakP1600OnWords_fu_519_state_ce0, grp_fromWordsToBytes_fu_528_stateAsWords_ce0, grp_fromBytesToWords_fu_534_stateAsWords_ce0, ap_CS_fsm_state75, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            stateAsWords_5_ce0 <= grp_fromBytesToWords_fu_534_stateAsWords_ce0;
        elsif (((icmp_ln239_2_reg_1428 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            stateAsWords_5_ce0 <= grp_fromWordsToBytes_fu_528_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            stateAsWords_5_ce0 <= grp_KeccakP1600OnWords_fu_519_state_ce0;
        else 
            stateAsWords_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_5_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_ce1, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            stateAsWords_5_ce1 <= grp_KeccakP1600OnWords_fu_519_state_ce1;
        else 
            stateAsWords_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_5_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_d0, grp_fromBytesToWords_fu_534_stateAsWords_d0, ap_CS_fsm_state75, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            stateAsWords_5_d0 <= grp_fromBytesToWords_fu_534_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            stateAsWords_5_d0 <= grp_KeccakP1600OnWords_fu_519_state_d0;
        else 
            stateAsWords_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_5_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we0, grp_fromBytesToWords_fu_534_stateAsWords_we0, ap_CS_fsm_state75, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            stateAsWords_5_we0 <= grp_fromBytesToWords_fu_534_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            stateAsWords_5_we0 <= grp_KeccakP1600OnWords_fu_519_state_we0;
        else 
            stateAsWords_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_5_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we1, ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            stateAsWords_5_we1 <= grp_KeccakP1600OnWords_fu_519_state_we1;
        else 
            stateAsWords_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_6_address0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_address0, grp_fromWordsToBytes_fu_528_stateAsWords_address0, grp_fromBytesToWords_fu_534_stateAsWords_address0, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            stateAsWords_6_address0 <= grp_fromBytesToWords_fu_534_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            stateAsWords_6_address0 <= grp_fromWordsToBytes_fu_528_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            stateAsWords_6_address0 <= grp_KeccakP1600OnWords_fu_519_state_address0;
        else 
            stateAsWords_6_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_6_ce0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_ce0, grp_fromWordsToBytes_fu_528_stateAsWords_ce0, grp_fromBytesToWords_fu_534_stateAsWords_ce0, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            stateAsWords_6_ce0 <= grp_fromBytesToWords_fu_534_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            stateAsWords_6_ce0 <= grp_fromWordsToBytes_fu_528_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            stateAsWords_6_ce0 <= grp_KeccakP1600OnWords_fu_519_state_ce0;
        else 
            stateAsWords_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_6_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_ce1, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            stateAsWords_6_ce1 <= grp_KeccakP1600OnWords_fu_519_state_ce1;
        else 
            stateAsWords_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_6_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_d0, grp_fromBytesToWords_fu_534_stateAsWords_d0, ap_CS_fsm_state99, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            stateAsWords_6_d0 <= grp_fromBytesToWords_fu_534_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            stateAsWords_6_d0 <= grp_KeccakP1600OnWords_fu_519_state_d0;
        else 
            stateAsWords_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_6_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we0, grp_fromBytesToWords_fu_534_stateAsWords_we0, ap_CS_fsm_state99, ap_CS_fsm_state97)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            stateAsWords_6_we0 <= grp_fromBytesToWords_fu_534_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            stateAsWords_6_we0 <= grp_KeccakP1600OnWords_fu_519_state_we0;
        else 
            stateAsWords_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_6_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we1, ap_CS_fsm_state99)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            stateAsWords_6_we1 <= grp_KeccakP1600OnWords_fu_519_state_we1;
        else 
            stateAsWords_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_7_address0_assign_proc : process(icmp_ln239_3_reg_1514, ap_CS_fsm_state86, grp_KeccakP1600OnWords_fu_519_state_address0, grp_fromWordsToBytes_fu_528_stateAsWords_address0, grp_fromBytesToWords_fu_534_stateAsWords_address0, ap_CS_fsm_state84, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            stateAsWords_7_address0 <= grp_fromBytesToWords_fu_534_stateAsWords_address0;
        elsif (((icmp_ln239_3_reg_1514 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
            stateAsWords_7_address0 <= grp_fromWordsToBytes_fu_528_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            stateAsWords_7_address0 <= grp_KeccakP1600OnWords_fu_519_state_address0;
        else 
            stateAsWords_7_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_7_ce0_assign_proc : process(icmp_ln239_3_reg_1514, ap_CS_fsm_state86, grp_KeccakP1600OnWords_fu_519_state_ce0, grp_fromWordsToBytes_fu_528_stateAsWords_ce0, grp_fromBytesToWords_fu_534_stateAsWords_ce0, ap_CS_fsm_state84, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            stateAsWords_7_ce0 <= grp_fromBytesToWords_fu_534_stateAsWords_ce0;
        elsif (((icmp_ln239_3_reg_1514 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state86))) then 
            stateAsWords_7_ce0 <= grp_fromWordsToBytes_fu_528_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            stateAsWords_7_ce0 <= grp_KeccakP1600OnWords_fu_519_state_ce0;
        else 
            stateAsWords_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_7_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_ce1, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            stateAsWords_7_ce1 <= grp_KeccakP1600OnWords_fu_519_state_ce1;
        else 
            stateAsWords_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_7_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_d0, grp_fromBytesToWords_fu_534_stateAsWords_d0, ap_CS_fsm_state84, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            stateAsWords_7_d0 <= grp_fromBytesToWords_fu_534_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            stateAsWords_7_d0 <= grp_KeccakP1600OnWords_fu_519_state_d0;
        else 
            stateAsWords_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_7_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we0, grp_fromBytesToWords_fu_534_stateAsWords_we0, ap_CS_fsm_state84, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            stateAsWords_7_we0 <= grp_fromBytesToWords_fu_534_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            stateAsWords_7_we0 <= grp_KeccakP1600OnWords_fu_519_state_we0;
        else 
            stateAsWords_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_7_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we1, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            stateAsWords_7_we1 <= grp_KeccakP1600OnWords_fu_519_state_we1;
        else 
            stateAsWords_7_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_address0_assign_proc : process(icmp_ln239_reg_1288, ap_CS_fsm_state10, grp_KeccakP1600OnWords_fu_519_state_address0, grp_fromWordsToBytes_fu_528_stateAsWords_address0, grp_fromBytesToWords_fu_534_stateAsWords_address0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stateAsWords_address0 <= grp_fromBytesToWords_fu_534_stateAsWords_address0;
        elsif (((icmp_ln239_reg_1288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            stateAsWords_address0 <= grp_fromWordsToBytes_fu_528_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_address0 <= grp_KeccakP1600OnWords_fu_519_state_address0;
        else 
            stateAsWords_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_ce0_assign_proc : process(icmp_ln239_reg_1288, ap_CS_fsm_state10, grp_KeccakP1600OnWords_fu_519_state_ce0, grp_fromWordsToBytes_fu_528_stateAsWords_ce0, grp_fromBytesToWords_fu_534_stateAsWords_ce0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stateAsWords_ce0 <= grp_fromBytesToWords_fu_534_stateAsWords_ce0;
        elsif (((icmp_ln239_reg_1288 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            stateAsWords_ce0 <= grp_fromWordsToBytes_fu_528_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_ce0 <= grp_KeccakP1600OnWords_fu_519_state_ce0;
        else 
            stateAsWords_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_ce1 <= grp_KeccakP1600OnWords_fu_519_state_ce1;
        else 
            stateAsWords_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_d0, grp_fromBytesToWords_fu_534_stateAsWords_d0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stateAsWords_d0 <= grp_fromBytesToWords_fu_534_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_d0 <= grp_KeccakP1600OnWords_fu_519_state_d0;
        else 
            stateAsWords_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we0, grp_fromBytesToWords_fu_534_stateAsWords_we0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            stateAsWords_we0 <= grp_fromBytesToWords_fu_534_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_we0 <= grp_KeccakP1600OnWords_fu_519_state_we0;
        else 
            stateAsWords_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_519_state_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            stateAsWords_we1 <= grp_KeccakP1600OnWords_fu_519_state_we1;
        else 
            stateAsWords_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln234_fu_596_p2 <= std_logic_vector(unsigned(zext_ln234_7_fu_592_p1) - unsigned(zext_ln234_6_fu_580_p1));

    tape_0_address0_assign_proc : process(ap_CS_fsm_state71, grp_KeccakWidth1600_Spon_5_fu_487_data_0_address0, ap_CS_fsm_state30, ap_CS_fsm_state103, zext_ln234_4_fu_1031_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tape_0_address0 <= zext_ln234_4_fu_1031_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_0_address0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_0_address0;
        else 
            tape_0_address0 <= "XXXXXX";
        end if; 
    end process;


    tape_0_ce0_assign_proc : process(ap_CS_fsm_state71, grp_KeccakWidth1600_Spon_5_fu_487_data_0_ce0, ap_CS_fsm_state30, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tape_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_0_ce0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_0_ce0;
        else 
            tape_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tape_0_d0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_0_d0;

    tape_0_we0_assign_proc : process(grp_KeccakWidth1600_Spon_5_fu_487_data_0_we0, ap_CS_fsm_state30, ap_CS_fsm_state103)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_0_we0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_0_we0;
        else 
            tape_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tape_1_address0_assign_proc : process(ap_CS_fsm_state71, grp_KeccakWidth1600_Spon_5_fu_487_data_1_address0, ap_CS_fsm_state30, ap_CS_fsm_state103, zext_ln234_4_fu_1031_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tape_1_address0 <= zext_ln234_4_fu_1031_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_1_address0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_1_address0;
        else 
            tape_1_address0 <= "XXXXXX";
        end if; 
    end process;


    tape_1_ce0_assign_proc : process(ap_CS_fsm_state71, grp_KeccakWidth1600_Spon_5_fu_487_data_1_ce0, ap_CS_fsm_state30, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tape_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_1_ce0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_1_ce0;
        else 
            tape_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tape_1_d0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_1_d0;

    tape_1_we0_assign_proc : process(grp_KeccakWidth1600_Spon_5_fu_487_data_1_we0, ap_CS_fsm_state30, ap_CS_fsm_state103)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_1_we0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_1_we0;
        else 
            tape_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tape_2_address0_assign_proc : process(ap_CS_fsm_state71, grp_KeccakWidth1600_Spon_5_fu_487_data_2_address0, ap_CS_fsm_state30, ap_CS_fsm_state103, zext_ln234_4_fu_1031_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tape_2_address0 <= zext_ln234_4_fu_1031_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_2_address0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_2_address0;
        else 
            tape_2_address0 <= "XXXXXX";
        end if; 
    end process;


    tape_2_ce0_assign_proc : process(ap_CS_fsm_state71, grp_KeccakWidth1600_Spon_5_fu_487_data_2_ce0, ap_CS_fsm_state30, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tape_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_2_ce0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_2_ce0;
        else 
            tape_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tape_2_d0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_2_d0;

    tape_2_we0_assign_proc : process(grp_KeccakWidth1600_Spon_5_fu_487_data_2_we0, ap_CS_fsm_state30, ap_CS_fsm_state103)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_2_we0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_2_we0;
        else 
            tape_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tape_3_address0_assign_proc : process(ap_CS_fsm_state71, grp_KeccakWidth1600_Spon_5_fu_487_data_3_address0, ap_CS_fsm_state30, ap_CS_fsm_state103, zext_ln234_4_fu_1031_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tape_3_address0 <= zext_ln234_4_fu_1031_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_3_address0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_3_address0;
        else 
            tape_3_address0 <= "XXXXXX";
        end if; 
    end process;


    tape_3_ce0_assign_proc : process(ap_CS_fsm_state71, grp_KeccakWidth1600_Spon_5_fu_487_data_3_ce0, ap_CS_fsm_state30, ap_CS_fsm_state103)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            tape_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_3_ce0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_3_ce0;
        else 
            tape_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tape_3_d0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_3_d0;

    tape_3_we0_assign_proc : process(grp_KeccakWidth1600_Spon_5_fu_487_data_3_we0, ap_CS_fsm_state30, ap_CS_fsm_state103)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            tape_3_we0 <= grp_KeccakWidth1600_Spon_5_fu_487_data_3_we0;
        else 
            tape_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_47_cast_fu_608_p3 <= (add_ln234_10_fu_602_p2 & ap_const_lv4_0);
    tmp_52_fu_715_p4 <= i_0_i_i_i35_reg_371(32 downto 4);
    tmp_53_fu_892_p4 <= i_0_i_i_i5_reg_417(31 downto 5);
    tmp_54_fu_1068_p4 <= i_0_i_i_i_reg_452(32 downto 5);
    tmp_fu_584_p3 <= (seed_offset & ap_const_lv2_0);
    trunc_ln194_3_fu_1156_p1 <= p_01_rec_i_i_i_reg_464(7 - 1 downto 0);
    trunc_ln194_fu_804_p1 <= p_01_rec_i_i_i36_reg_383(6 - 1 downto 0);
    trunc_ln225_3_fu_908_p1 <= i_0_i_i_i5_reg_417(6 - 1 downto 0);
    trunc_ln225_4_fu_1084_p1 <= i_0_i_i_i_reg_452(6 - 1 downto 0);
    trunc_ln225_fu_731_p1 <= i_0_i_i_i35_reg_371(5 - 1 downto 0);
    trunc_ln234_3_fu_1152_p1 <= loop_1_i_i_i_reg_476(7 - 1 downto 0);
    trunc_ln234_fu_800_p1 <= loop_1_i_i_i52_reg_395(6 - 1 downto 0);
    xor_ln149_2_fu_860_p2 <= (seed_q0 xor ctx_sponge_state_q0);
    xor_ln149_5_fu_1056_p2 <= (ctx_sponge_state_q0 xor byte_assign_3_fu_1042_p6);
    xor_ln149_8_fu_1203_p2 <= (salt_0_q0 xor ctx_sponge_state_q0);
    xor_ln149_fu_703_p2 <= (ctx_sponge_state_q0 xor ap_const_lv8_2);
    zext_ln140_2_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i3_reg_406),64));
    zext_ln140_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i_reg_338),64));
    zext_ln149_1_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_assign_6_fu_156),64));
    zext_ln149_2_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_13_fu_828_p2),64));
    zext_ln149_5_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_14_fu_987_p2),64));
    zext_ln149_6_fu_1219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_HashUpdateIntLE_fu_507_ap_return),64));
    zext_ln149_7_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_15_fu_1171_p2),64));
    zext_ln149_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_11_fu_678_p2),64));
    zext_ln194_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_01_rec_i_i_i6_reg_429),34));
    zext_ln225_3_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_9_reg_1384),32));
    zext_ln225_4_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_11_reg_1465),32));
    zext_ln225_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_7_reg_1300),32));
    zext_ln231_2_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_6_fu_1119_p3),64));
    zext_ln231_4_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_4_fu_767_p3),33));
    zext_ln231_5_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_6_fu_1119_p3),33));
    zext_ln231_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_4_fu_767_p3),64));
    zext_ln234_4_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_981_p2),64));
    zext_ln234_5_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_6_fu_1160_p2),64));
    zext_ln234_6_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(seed_offset),11));
    zext_ln234_7_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_584_p3),11));
    zext_ln234_8_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_2_fu_808_p2),15));
    zext_ln234_9_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_12_fu_818_p2),64));
    zext_ln234_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(seed_offset1),11));
    zext_ln241_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(roundNumber),9));
    zext_ln242_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(playerNumber),9));
end behav;
