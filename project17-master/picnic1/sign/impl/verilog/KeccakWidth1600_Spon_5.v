// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module KeccakWidth1600_Spon_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        instance_state_address0,
        instance_state_ce0,
        instance_state_we0,
        instance_state_d0,
        instance_state_q0,
        data_0_address0,
        data_0_ce0,
        data_0_we0,
        data_0_d0,
        data_1_address0,
        data_1_ce0,
        data_1_we0,
        data_1_d0,
        data_2_address0,
        data_2_ce0,
        data_2_we0,
        data_2_d0,
        data_3_address0,
        data_3_ce0,
        data_3_we0,
        data_3_d0,
        dataByteLen
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_pp1_stage0 = 21'd256;
parameter    ap_ST_fsm_pp1_stage1 = 21'd512;
parameter    ap_ST_fsm_pp1_stage2 = 21'd1024;
parameter    ap_ST_fsm_state13 = 21'd2048;
parameter    ap_ST_fsm_state14 = 21'd4096;
parameter    ap_ST_fsm_state15 = 21'd8192;
parameter    ap_ST_fsm_state16 = 21'd16384;
parameter    ap_ST_fsm_state17 = 21'd32768;
parameter    ap_ST_fsm_state18 = 21'd65536;
parameter    ap_ST_fsm_pp2_stage0 = 21'd131072;
parameter    ap_ST_fsm_state22 = 21'd262144;
parameter    ap_ST_fsm_state23 = 21'd524288;
parameter    ap_ST_fsm_state24 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] instance_state_address0;
output   instance_state_ce0;
output   instance_state_we0;
output  [7:0] instance_state_d0;
input  [7:0] instance_state_q0;
output  [5:0] data_0_address0;
output   data_0_ce0;
output   data_0_we0;
output  [7:0] data_0_d0;
output  [5:0] data_1_address0;
output   data_1_ce0;
output   data_1_we0;
output  [7:0] data_1_d0;
output  [5:0] data_2_address0;
output   data_2_ce0;
output   data_2_we0;
output  [7:0] data_2_d0;
output  [5:0] data_3_address0;
output   data_3_ce0;
output   data_3_we0;
output  [7:0] data_3_d0;
input  [7:0] dataByteLen;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] instance_state_address0;
reg instance_state_ce0;
reg instance_state_we0;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] KeccakRhoOffsets_address0;
reg    KeccakRhoOffsets_ce0;
wire   [5:0] KeccakRhoOffsets_q0;
wire   [4:0] KeccakRoundConstants_address0;
reg    KeccakRoundConstants_ce0;
wire   [63:0] KeccakRoundConstants_q0;
reg   [4:0] indvar_flatten_reg_275;
reg   [2:0] x_0_i_reg_286;
reg   [2:0] y_0_i_reg_298;
reg   [7:0] indvar_flatten7_reg_309;
reg   [4:0] i_0_i2_reg_320;
reg   [3:0] j_0_i5_reg_331;
wire   [32:0] zext_ln304_fu_393_p1;
reg   [32:0] zext_ln304_reg_850;
wire   [31:0] zext_ln322_fu_397_p1;
reg   [31:0] zext_ln322_reg_855;
wire   [0:0] icmp_ln305_fu_406_p2;
reg   [0:0] icmp_ln305_reg_863;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln304_fu_401_p2;
wire   [0:0] icmp_ln269_fu_412_p2;
wire    ap_CS_fsm_state3;
wire   [4:0] i_19_fu_418_p2;
reg   [4:0] i_19_reg_871;
reg   [4:0] stateAsWords_addr_1_reg_876;
wire   [7:0] shl_ln_fu_429_p3;
reg   [7:0] shl_ln_reg_881;
wire   [3:0] j_fu_443_p2;
reg   [3:0] j_reg_889;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln271_fu_437_p2;
wire   [0:0] icmp_ln293_fu_496_p2;
wire    ap_CS_fsm_state7;
wire   [4:0] i_21_fu_502_p2;
reg   [4:0] i_21_reg_903;
wire   [0:0] icmp_ln352_fu_508_p2;
reg   [0:0] icmp_ln352_reg_908;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [4:0] add_ln352_fu_514_p2;
reg   [4:0] add_ln352_reg_912;
reg    ap_enable_reg_pp1_iter0;
wire   [2:0] x_fu_520_p2;
reg   [2:0] x_reg_917;
wire   [0:0] icmp_ln352_1_fu_526_p2;
reg   [0:0] icmp_ln352_1_reg_922;
wire   [2:0] select_ln353_1_fu_532_p3;
reg   [2:0] select_ln353_1_reg_927;
wire   [2:0] select_ln353_2_fu_540_p3;
reg   [2:0] select_ln353_2_reg_935;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state10_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire   [0:0] icmp_ln353_fu_621_p2;
reg   [0:0] icmp_ln353_reg_945;
reg   [4:0] stateAsWords_addr_3_reg_950;
wire   [63:0] select_ln353_fu_663_p3;
reg   [63:0] select_ln353_reg_956;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state11_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [2:0] y_fu_670_p2;
reg   [2:0] y_reg_961;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln280_fu_687_p2;
reg   [0:0] icmp_ln280_reg_971;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state19_pp2_stage0_iter0;
wire    ap_block_state20_pp2_stage0_iter1;
wire    ap_block_state21_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln280_reg_971_pp2_iter1_reg;
wire   [7:0] add_ln280_fu_693_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [3:0] select_ln280_fu_711_p3;
reg   [3:0] select_ln280_reg_980;
reg   [3:0] select_ln280_reg_980_pp2_iter1_reg;
wire   [4:0] select_ln280_2_fu_719_p3;
reg   [4:0] select_ln280_2_reg_985;
reg   [4:0] select_ln280_2_reg_985_pp2_iter1_reg;
wire   [2:0] trunc_ln282_fu_732_p1;
reg   [2:0] trunc_ln282_reg_996;
wire   [3:0] j_9_fu_736_p2;
wire   [7:0] trunc_ln282_2_fu_759_p1;
reg   [7:0] trunc_ln282_2_reg_1006;
wire   [31:0] partialBlock_fu_788_p2;
reg   [31:0] partialBlock_reg_1011;
wire    ap_CS_fsm_state22;
wire   [31:0] partialBlock_21_fu_810_p3;
reg   [31:0] partialBlock_21_reg_1017;
wire    ap_CS_fsm_state23;
wire   [32:0] i_fu_826_p2;
reg   [32:0] i_reg_1022;
wire   [31:0] add_ln332_fu_832_p2;
reg   [31:0] add_ln332_reg_1027;
wire   [63:0] add_ln331_fu_838_p2;
reg   [63:0] add_ln331_reg_1032;
wire    ap_CS_fsm_state8;
wire    grp_theta_fu_379_ap_ready;
wire    grp_theta_fu_379_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state19;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg   [4:0] stateAsWords_address0;
reg    stateAsWords_ce0;
reg    stateAsWords_we0;
reg   [63:0] stateAsWords_d0;
wire   [63:0] stateAsWords_q0;
reg   [4:0] stateAsWords_address1;
reg    stateAsWords_ce1;
reg    stateAsWords_we1;
reg   [63:0] stateAsWords_d1;
wire   [63:0] stateAsWords_q1;
wire    grp_KeccakP1600_ExtractB_fu_355_ap_start;
wire    grp_KeccakP1600_ExtractB_fu_355_ap_done;
wire    grp_KeccakP1600_ExtractB_fu_355_ap_idle;
wire    grp_KeccakP1600_ExtractB_fu_355_ap_ready;
wire   [7:0] grp_KeccakP1600_ExtractB_fu_355_state_address0;
wire    grp_KeccakP1600_ExtractB_fu_355_state_ce0;
wire   [5:0] grp_KeccakP1600_ExtractB_fu_355_data_0_address0;
wire    grp_KeccakP1600_ExtractB_fu_355_data_0_ce0;
wire    grp_KeccakP1600_ExtractB_fu_355_data_0_we0;
wire   [7:0] grp_KeccakP1600_ExtractB_fu_355_data_0_d0;
wire   [5:0] grp_KeccakP1600_ExtractB_fu_355_data_1_address0;
wire    grp_KeccakP1600_ExtractB_fu_355_data_1_ce0;
wire    grp_KeccakP1600_ExtractB_fu_355_data_1_we0;
wire   [7:0] grp_KeccakP1600_ExtractB_fu_355_data_1_d0;
wire   [5:0] grp_KeccakP1600_ExtractB_fu_355_data_2_address0;
wire    grp_KeccakP1600_ExtractB_fu_355_data_2_ce0;
wire    grp_KeccakP1600_ExtractB_fu_355_data_2_we0;
wire   [7:0] grp_KeccakP1600_ExtractB_fu_355_data_2_d0;
wire   [5:0] grp_KeccakP1600_ExtractB_fu_355_data_3_address0;
wire    grp_KeccakP1600_ExtractB_fu_355_data_3_ce0;
wire    grp_KeccakP1600_ExtractB_fu_355_data_3_we0;
wire   [7:0] grp_KeccakP1600_ExtractB_fu_355_data_3_d0;
wire    grp_pi_fu_374_ap_start;
wire    grp_pi_fu_374_ap_done;
wire    grp_pi_fu_374_ap_idle;
wire    grp_pi_fu_374_ap_ready;
wire   [4:0] grp_pi_fu_374_A_address0;
wire    grp_pi_fu_374_A_ce0;
wire    grp_pi_fu_374_A_we0;
wire   [63:0] grp_pi_fu_374_A_d0;
wire   [4:0] grp_pi_fu_374_A_address1;
wire    grp_pi_fu_374_A_ce1;
wire    grp_pi_fu_374_A_we1;
wire   [63:0] grp_pi_fu_374_A_d1;
wire    grp_theta_fu_379_ap_start;
wire    grp_theta_fu_379_ap_idle;
wire   [4:0] grp_theta_fu_379_A_address0;
wire    grp_theta_fu_379_A_ce0;
wire   [4:0] grp_theta_fu_379_A_address1;
wire    grp_theta_fu_379_A_ce1;
wire    grp_theta_fu_379_A_we1;
wire   [63:0] grp_theta_fu_379_A_d1;
wire    grp_chi_fu_384_ap_start;
wire    grp_chi_fu_384_ap_done;
wire    grp_chi_fu_384_ap_idle;
wire    grp_chi_fu_384_ap_ready;
wire   [4:0] grp_chi_fu_384_A_address0;
wire    grp_chi_fu_384_A_ce0;
wire   [4:0] grp_chi_fu_384_A_address1;
wire    grp_chi_fu_384_A_ce1;
wire    grp_chi_fu_384_A_we1;
wire   [63:0] grp_chi_fu_384_A_d1;
reg   [31:0] instance_byteIOIndex_1_reg_204;
wire    ap_CS_fsm_state24;
reg   [32:0] i_0_reg_216;
reg   [63:0] curData_0_idx_reg_228;
reg   [4:0] i_0_i_reg_240;
wire    ap_CS_fsm_state6;
reg   [3:0] j_0_i_reg_251;
wire    ap_CS_fsm_state5;
reg   [4:0] indexRound_assign_reg_263;
wire    ap_CS_fsm_state18;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_279_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_x_0_i_phi_fu_290_p4;
reg   [2:0] ap_phi_mux_y_0_i_phi_fu_302_p4;
reg   [4:0] ap_phi_mux_i_0_i2_phi_fu_324_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] instance_byteIOIndex_2_reg_342;
reg    grp_KeccakP1600_ExtractB_fu_355_ap_start_reg;
reg    grp_pi_fu_374_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_theta_fu_379_ap_start_reg;
reg    grp_chi_fu_384_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln270_fu_424_p1;
wire   [63:0] zext_ln272_fu_458_p1;
wire   [63:0] zext_ln353_3_fu_615_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln382_fu_675_p1;
wire   [63:0] zext_ln280_fu_727_p1;
wire   [63:0] zext_ln282_2_fu_779_p1;
wire   [63:0] or_ln272_fu_489_p2;
wire   [63:0] xor_ln382_fu_680_p2;
wire  signed [8:0] dataByteLen_cast_fu_389_p1;
wire   [7:0] zext_ln271_fu_449_p1;
wire   [7:0] add_ln272_fu_453_p2;
wire   [2:0] trunc_ln272_fu_467_p1;
wire   [5:0] shl_ln272_9_fu_471_p3;
wire   [63:0] zext_ln272_3_fu_463_p1;
wire   [63:0] zext_ln272_4_fu_479_p1;
wire   [63:0] shl_ln272_fu_483_p2;
wire   [0:0] icmp_ln353_1_fu_546_p2;
wire   [2:0] add_ln353_1_fu_552_p2;
wire   [2:0] select_ln353_3_fu_558_p3;
wire   [0:0] icmp_ln353_2_fu_570_p2;
wire   [2:0] add_ln353_2_fu_575_p2;
wire   [2:0] select_ln353_4_fu_580_p3;
wire   [3:0] zext_ln353_fu_566_p1;
wire   [3:0] zext_ln353_1_fu_587_p1;
wire   [3:0] add_ln353_fu_599_p2;
wire   [4:0] shl_ln2_fu_591_p3;
wire   [4:0] zext_ln353_2_fu_605_p1;
wire   [4:0] add_ln353_3_fu_609_p2;
wire    ap_block_pp1_stage2;
wire   [63:0] zext_ln353_5_fu_631_p1;
wire   [6:0] zext_ln353_4_fu_627_p1;
wire   [6:0] sub_ln353_fu_641_p2;
wire   [63:0] zext_ln353_6_fu_647_p1;
wire   [63:0] lshr_ln353_fu_651_p2;
wire   [63:0] shl_ln353_fu_635_p2;
wire   [63:0] xor_ln353_fu_657_p2;
wire   [0:0] icmp_ln281_fu_705_p2;
wire   [4:0] i_20_fu_699_p2;
wire   [5:0] shl_ln282_5_fu_742_p3;
wire   [63:0] zext_ln282_fu_749_p1;
wire   [63:0] lshr_ln282_fu_753_p2;
wire   [7:0] zext_ln281_fu_770_p1;
wire   [7:0] shl_ln282_mid2_fu_763_p3;
wire   [7:0] add_ln282_fu_773_p2;
wire   [31:0] trunc_ln322_fu_784_p1;
wire   [31:0] add_ln323_fu_793_p2;
wire   [0:0] icmp_ln323_fu_798_p2;
wire   [31:0] partialBlock_20_fu_804_p2;
wire   [32:0] zext_ln325_1_fu_822_p1;
wire   [63:0] zext_ln325_fu_818_p1;
reg   [20:0] ap_NS_fsm;
wire    ap_block_pp1_stage1_subdone;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 grp_KeccakP1600_ExtractB_fu_355_ap_start_reg = 1'b0;
#0 grp_pi_fu_374_ap_start_reg = 1'b0;
#0 grp_theta_fu_379_ap_start_reg = 1'b0;
#0 grp_chi_fu_384_ap_start_reg = 1'b0;
end

KeccakP1600OnWordeOg #(
    .DataWidth( 6 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
KeccakRhoOffsets_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(KeccakRhoOffsets_address0),
    .ce0(KeccakRhoOffsets_ce0),
    .q0(KeccakRhoOffsets_q0)
);

KeccakP1600OnWordfYi #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
KeccakRoundConstants_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(KeccakRoundConstants_address0),
    .ce0(KeccakRoundConstants_ce0),
    .q0(KeccakRoundConstants_q0)
);

pi_tempA #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
stateAsWords_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stateAsWords_address0),
    .ce0(stateAsWords_ce0),
    .we0(stateAsWords_we0),
    .d0(stateAsWords_d0),
    .q0(stateAsWords_q0),
    .address1(stateAsWords_address1),
    .ce1(stateAsWords_ce1),
    .we1(stateAsWords_we1),
    .d1(stateAsWords_d1),
    .q1(stateAsWords_q1)
);

KeccakP1600_ExtractB grp_KeccakP1600_ExtractB_fu_355(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakP1600_ExtractB_fu_355_ap_start),
    .ap_done(grp_KeccakP1600_ExtractB_fu_355_ap_done),
    .ap_idle(grp_KeccakP1600_ExtractB_fu_355_ap_idle),
    .ap_ready(grp_KeccakP1600_ExtractB_fu_355_ap_ready),
    .state_address0(grp_KeccakP1600_ExtractB_fu_355_state_address0),
    .state_ce0(grp_KeccakP1600_ExtractB_fu_355_state_ce0),
    .state_q0(instance_state_q0),
    .data_0_address0(grp_KeccakP1600_ExtractB_fu_355_data_0_address0),
    .data_0_ce0(grp_KeccakP1600_ExtractB_fu_355_data_0_ce0),
    .data_0_we0(grp_KeccakP1600_ExtractB_fu_355_data_0_we0),
    .data_0_d0(grp_KeccakP1600_ExtractB_fu_355_data_0_d0),
    .data_1_address0(grp_KeccakP1600_ExtractB_fu_355_data_1_address0),
    .data_1_ce0(grp_KeccakP1600_ExtractB_fu_355_data_1_ce0),
    .data_1_we0(grp_KeccakP1600_ExtractB_fu_355_data_1_we0),
    .data_1_d0(grp_KeccakP1600_ExtractB_fu_355_data_1_d0),
    .data_2_address0(grp_KeccakP1600_ExtractB_fu_355_data_2_address0),
    .data_2_ce0(grp_KeccakP1600_ExtractB_fu_355_data_2_ce0),
    .data_2_we0(grp_KeccakP1600_ExtractB_fu_355_data_2_we0),
    .data_2_d0(grp_KeccakP1600_ExtractB_fu_355_data_2_d0),
    .data_3_address0(grp_KeccakP1600_ExtractB_fu_355_data_3_address0),
    .data_3_ce0(grp_KeccakP1600_ExtractB_fu_355_data_3_ce0),
    .data_3_we0(grp_KeccakP1600_ExtractB_fu_355_data_3_we0),
    .data_3_d0(grp_KeccakP1600_ExtractB_fu_355_data_3_d0),
    .data_offset(curData_0_idx_reg_228),
    .offset(instance_byteIOIndex_2_reg_342),
    .length_r(partialBlock_21_reg_1017)
);

pi grp_pi_fu_374(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pi_fu_374_ap_start),
    .ap_done(grp_pi_fu_374_ap_done),
    .ap_idle(grp_pi_fu_374_ap_idle),
    .ap_ready(grp_pi_fu_374_ap_ready),
    .A_address0(grp_pi_fu_374_A_address0),
    .A_ce0(grp_pi_fu_374_A_ce0),
    .A_we0(grp_pi_fu_374_A_we0),
    .A_d0(grp_pi_fu_374_A_d0),
    .A_q0(stateAsWords_q0),
    .A_address1(grp_pi_fu_374_A_address1),
    .A_ce1(grp_pi_fu_374_A_ce1),
    .A_we1(grp_pi_fu_374_A_we1),
    .A_d1(grp_pi_fu_374_A_d1),
    .A_q1(stateAsWords_q1)
);

theta grp_theta_fu_379(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_theta_fu_379_ap_start),
    .ap_done(grp_theta_fu_379_ap_done),
    .ap_idle(grp_theta_fu_379_ap_idle),
    .ap_ready(grp_theta_fu_379_ap_ready),
    .A_address0(grp_theta_fu_379_A_address0),
    .A_ce0(grp_theta_fu_379_A_ce0),
    .A_q0(stateAsWords_q0),
    .A_address1(grp_theta_fu_379_A_address1),
    .A_ce1(grp_theta_fu_379_A_ce1),
    .A_we1(grp_theta_fu_379_A_we1),
    .A_d1(grp_theta_fu_379_A_d1),
    .A_q1(stateAsWords_q1)
);

chi grp_chi_fu_384(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_chi_fu_384_ap_start),
    .ap_done(grp_chi_fu_384_ap_done),
    .ap_idle(grp_chi_fu_384_ap_idle),
    .ap_ready(grp_chi_fu_384_ap_ready),
    .A_address0(grp_chi_fu_384_A_address0),
    .A_ce0(grp_chi_fu_384_A_ce0),
    .A_q0(stateAsWords_q0),
    .A_address1(grp_chi_fu_384_A_address1),
    .A_ce1(grp_chi_fu_384_A_ce1),
    .A_we1(grp_chi_fu_384_A_we1),
    .A_d1(grp_chi_fu_384_A_d1),
    .A_q1(stateAsWords_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((grp_theta_fu_379_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((grp_theta_fu_379_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln293_fu_496_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state19)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln293_fu_496_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakP1600_ExtractB_fu_355_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            grp_KeccakP1600_ExtractB_fu_355_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakP1600_ExtractB_fu_355_ap_ready == 1'b1)) begin
            grp_KeccakP1600_ExtractB_fu_355_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_chi_fu_384_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_chi_fu_384_ap_start_reg <= 1'b1;
        end else if ((grp_chi_fu_384_ap_ready == 1'b1)) begin
            grp_chi_fu_384_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pi_fu_374_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_pi_fu_374_ap_start_reg <= 1'b1;
        end else if ((grp_pi_fu_374_ap_ready == 1'b1)) begin
            grp_pi_fu_374_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_theta_fu_379_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln293_fu_496_p2 == 1'd0))) begin
            grp_theta_fu_379_ap_start_reg <= 1'b1;
        end else if ((grp_theta_fu_379_ap_ready == 1'b1)) begin
            grp_theta_fu_379_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeccakP1600_ExtractB_fu_355_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        curData_0_idx_reg_228 <= add_ln331_reg_1032;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        curData_0_idx_reg_228 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln293_fu_496_p2 == 1'd1))) begin
        i_0_i2_reg_320 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_reg_971 == 1'd0))) begin
        i_0_i2_reg_320 <= select_ln280_2_reg_985;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i_reg_240 <= i_19_reg_871;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_401_p2 == 1'd1) & (icmp_ln305_fu_406_p2 == 1'd1))) begin
        i_0_i_reg_240 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeccakP1600_ExtractB_fu_355_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_0_reg_216 <= i_reg_1022;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_216 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln269_fu_412_p2 == 1'd1))) begin
        indexRound_assign_reg_263 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        indexRound_assign_reg_263 <= i_21_reg_903;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln293_fu_496_p2 == 1'd1))) begin
        indvar_flatten7_reg_309 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_fu_687_p2 == 1'd0))) begin
        indvar_flatten7_reg_309 <= add_ln280_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_reg_908 == 1'd0))) begin
        indvar_flatten_reg_275 <= add_ln352_reg_912;
    end else if (((grp_theta_fu_379_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_flatten_reg_275 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_KeccakP1600_ExtractB_fu_355_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        instance_byteIOIndex_1_reg_204 <= add_ln332_reg_1027;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        instance_byteIOIndex_1_reg_204 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln305_reg_863 == 1'd1))) begin
        instance_byteIOIndex_2_reg_342 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_401_p2 == 1'd1) & (icmp_ln305_fu_406_p2 == 1'd0))) begin
        instance_byteIOIndex_2_reg_342 <= instance_byteIOIndex_1_reg_204;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln293_fu_496_p2 == 1'd1))) begin
        j_0_i5_reg_331 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_fu_687_p2 == 1'd0))) begin
        j_0_i5_reg_331 <= j_9_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_0_i_reg_251 <= j_reg_889;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln269_fu_412_p2 == 1'd0))) begin
        j_0_i_reg_251 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_reg_908 == 1'd0))) begin
        x_0_i_reg_286 <= select_ln353_2_reg_935;
    end else if (((grp_theta_fu_379_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        x_0_i_reg_286 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_reg_908 == 1'd0))) begin
        y_0_i_reg_298 <= y_reg_961;
    end else if (((grp_theta_fu_379_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        y_0_i_reg_298 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        add_ln331_reg_1032 <= add_ln331_fu_838_p2;
        add_ln332_reg_1027 <= add_ln332_fu_832_p2;
        i_reg_1022 <= i_fu_826_p2;
        partialBlock_21_reg_1017 <= partialBlock_21_fu_810_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln352_reg_912 <= add_ln352_fu_514_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_19_reg_871 <= i_19_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_21_reg_903 <= i_21_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln280_reg_971 <= icmp_ln280_fu_687_p2;
        icmp_ln280_reg_971_pp2_iter1_reg <= icmp_ln280_reg_971;
        select_ln280_2_reg_985_pp2_iter1_reg <= select_ln280_2_reg_985;
        select_ln280_reg_980_pp2_iter1_reg <= select_ln280_reg_980;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_401_p2 == 1'd1))) begin
        icmp_ln305_reg_863 <= icmp_ln305_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_fu_508_p2 == 1'd0))) begin
        icmp_ln352_1_reg_922 <= icmp_ln352_1_fu_526_p2;
        select_ln353_1_reg_927 <= select_ln353_1_fu_532_p3;
        x_reg_917 <= x_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln352_reg_908 <= icmp_ln352_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln352_reg_908 == 1'd0))) begin
        icmp_ln353_reg_945 <= icmp_ln353_fu_621_p2;
        stateAsWords_addr_3_reg_950 <= zext_ln353_3_fu_615_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_889 <= j_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        partialBlock_reg_1011 <= partialBlock_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_fu_687_p2 == 1'd0))) begin
        select_ln280_2_reg_985 <= select_ln280_2_fu_719_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_fu_687_p2 == 1'd0))) begin
        select_ln280_reg_980 <= select_ln280_fu_711_p3;
        trunc_ln282_reg_996 <= trunc_ln282_fu_732_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln352_reg_908 == 1'd0))) begin
        select_ln353_2_reg_935 <= select_ln353_2_fu_540_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln352_reg_908 == 1'd0))) begin
        select_ln353_reg_956 <= select_ln353_fu_663_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln269_fu_412_p2 == 1'd0))) begin
        shl_ln_reg_881[7 : 3] <= shl_ln_fu_429_p3[7 : 3];
        stateAsWords_addr_1_reg_876 <= zext_ln270_fu_424_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_reg_971 == 1'd0))) begin
        trunc_ln282_2_reg_1006 <= trunc_ln282_2_fu_759_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln352_reg_908 == 1'd0))) begin
        y_reg_961 <= y_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        zext_ln304_reg_850[8 : 0] <= zext_ln304_fu_393_p1[8 : 0];
        zext_ln322_reg_855[8 : 0] <= zext_ln322_fu_397_p1[8 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        KeccakRhoOffsets_ce0 = 1'b1;
    end else begin
        KeccakRhoOffsets_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        KeccakRoundConstants_ce0 = 1'b1;
    end else begin
        KeccakRoundConstants_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln352_fu_508_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln280_fu_687_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_401_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_reg_971 == 1'd0))) begin
        ap_phi_mux_i_0_i2_phi_fu_324_p4 = select_ln280_2_reg_985;
    end else begin
        ap_phi_mux_i_0_i2_phi_fu_324_p4 = i_0_i2_reg_320;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln352_reg_908 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_279_p4 = add_ln352_reg_912;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_279_p4 = indvar_flatten_reg_275;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln352_reg_908 == 1'd0))) begin
        ap_phi_mux_x_0_i_phi_fu_290_p4 = select_ln353_2_reg_935;
    end else begin
        ap_phi_mux_x_0_i_phi_fu_290_p4 = x_0_i_reg_286;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln352_reg_908 == 1'd0))) begin
        ap_phi_mux_y_0_i_phi_fu_302_p4 = y_reg_961;
    end else begin
        ap_phi_mux_y_0_i_phi_fu_302_p4 = y_0_i_reg_298;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_401_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        instance_state_address0 = zext_ln282_2_fu_779_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        instance_state_address0 = zext_ln272_fu_458_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        instance_state_address0 = grp_KeccakP1600_ExtractB_fu_355_state_address0;
    end else begin
        instance_state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        instance_state_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        instance_state_ce0 = grp_KeccakP1600_ExtractB_fu_355_state_ce0;
    end else begin
        instance_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln280_reg_971_pp2_iter1_reg == 1'd0))) begin
        instance_state_we0 = 1'b1;
    end else begin
        instance_state_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stateAsWords_address0 = stateAsWords_addr_3_reg_950;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        stateAsWords_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        stateAsWords_address0 = stateAsWords_addr_1_reg_876;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        stateAsWords_address0 = zext_ln270_fu_424_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_address0 = grp_chi_fu_384_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_address0 = grp_theta_fu_379_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_address0 = grp_pi_fu_374_A_address0;
    end else begin
        stateAsWords_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        stateAsWords_address1 = zext_ln280_fu_727_p1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        stateAsWords_address1 = 64'd0;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        stateAsWords_address1 = zext_ln353_3_fu_615_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_address1 = grp_chi_fu_384_A_address1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_address1 = grp_theta_fu_379_A_address1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_address1 = grp_pi_fu_374_A_address1;
    end else begin
        stateAsWords_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        stateAsWords_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_ce0 = grp_chi_fu_384_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_ce0 = grp_theta_fu_379_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_ce0 = grp_pi_fu_374_A_ce0;
    end else begin
        stateAsWords_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        stateAsWords_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_ce1 = grp_chi_fu_384_A_ce1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_ce1 = grp_theta_fu_379_A_ce1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_ce1 = grp_pi_fu_374_A_ce1;
    end else begin
        stateAsWords_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stateAsWords_d0 = select_ln353_reg_956;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stateAsWords_d0 = or_ln272_fu_489_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        stateAsWords_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_d0 = grp_pi_fu_374_A_d0;
    end else begin
        stateAsWords_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        stateAsWords_d1 = xor_ln382_fu_680_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_d1 = grp_chi_fu_384_A_d1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_d1 = grp_theta_fu_379_A_d1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_d1 = grp_pi_fu_374_A_d1;
    end else begin
        stateAsWords_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_reg_908 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln269_fu_412_p2 == 1'd0)))) begin
        stateAsWords_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_we0 = grp_pi_fu_374_A_we0;
    end else begin
        stateAsWords_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        stateAsWords_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_we1 = grp_chi_fu_384_A_we1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_we1 = grp_theta_fu_379_A_we1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_we1 = grp_pi_fu_374_A_we1;
    end else begin
        stateAsWords_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_401_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_401_p2 == 1'd1) & (icmp_ln305_fu_406_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln269_fu_412_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln271_fu_437_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln293_fu_496_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((grp_theta_fu_379_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln352_fu_508_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln352_fu_508_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_pi_fu_374_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_chi_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln280_fu_687_p2 == 1'd1)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln280_fu_687_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_KeccakP1600_ExtractB_fu_355_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign KeccakRhoOffsets_address0 = zext_ln353_3_fu_615_p1;

assign KeccakRoundConstants_address0 = zext_ln382_fu_675_p1;

assign add_ln272_fu_453_p2 = (shl_ln_reg_881 + zext_ln271_fu_449_p1);

assign add_ln280_fu_693_p2 = (indvar_flatten7_reg_309 + 8'd1);

assign add_ln282_fu_773_p2 = (zext_ln281_fu_770_p1 + shl_ln282_mid2_fu_763_p3);

assign add_ln323_fu_793_p2 = (partialBlock_reg_1011 + instance_byteIOIndex_2_reg_342);

assign add_ln331_fu_838_p2 = (curData_0_idx_reg_228 + zext_ln325_fu_818_p1);

assign add_ln332_fu_832_p2 = (partialBlock_21_fu_810_p3 + instance_byteIOIndex_2_reg_342);

assign add_ln352_fu_514_p2 = (ap_phi_mux_indvar_flatten_phi_fu_279_p4 + 5'd1);

assign add_ln353_1_fu_552_p2 = (select_ln353_2_fu_540_p3 + 3'd3);

assign add_ln353_2_fu_575_p2 = (select_ln353_1_reg_927 + 3'd3);

assign add_ln353_3_fu_609_p2 = (shl_ln2_fu_591_p3 + zext_ln353_2_fu_605_p1);

assign add_ln353_fu_599_p2 = (zext_ln353_fu_566_p1 + zext_ln353_1_fu_587_p1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign dataByteLen_cast_fu_389_p1 = $signed(dataByteLen);

assign data_0_address0 = grp_KeccakP1600_ExtractB_fu_355_data_0_address0;

assign data_0_ce0 = grp_KeccakP1600_ExtractB_fu_355_data_0_ce0;

assign data_0_d0 = grp_KeccakP1600_ExtractB_fu_355_data_0_d0;

assign data_0_we0 = grp_KeccakP1600_ExtractB_fu_355_data_0_we0;

assign data_1_address0 = grp_KeccakP1600_ExtractB_fu_355_data_1_address0;

assign data_1_ce0 = grp_KeccakP1600_ExtractB_fu_355_data_1_ce0;

assign data_1_d0 = grp_KeccakP1600_ExtractB_fu_355_data_1_d0;

assign data_1_we0 = grp_KeccakP1600_ExtractB_fu_355_data_1_we0;

assign data_2_address0 = grp_KeccakP1600_ExtractB_fu_355_data_2_address0;

assign data_2_ce0 = grp_KeccakP1600_ExtractB_fu_355_data_2_ce0;

assign data_2_d0 = grp_KeccakP1600_ExtractB_fu_355_data_2_d0;

assign data_2_we0 = grp_KeccakP1600_ExtractB_fu_355_data_2_we0;

assign data_3_address0 = grp_KeccakP1600_ExtractB_fu_355_data_3_address0;

assign data_3_ce0 = grp_KeccakP1600_ExtractB_fu_355_data_3_ce0;

assign data_3_d0 = grp_KeccakP1600_ExtractB_fu_355_data_3_d0;

assign data_3_we0 = grp_KeccakP1600_ExtractB_fu_355_data_3_we0;

assign grp_KeccakP1600_ExtractB_fu_355_ap_start = grp_KeccakP1600_ExtractB_fu_355_ap_start_reg;

assign grp_chi_fu_384_ap_start = grp_chi_fu_384_ap_start_reg;

assign grp_pi_fu_374_ap_start = grp_pi_fu_374_ap_start_reg;

assign grp_theta_fu_379_ap_start = grp_theta_fu_379_ap_start_reg;

assign i_19_fu_418_p2 = (i_0_i_reg_240 + 5'd1);

assign i_20_fu_699_p2 = (5'd1 + ap_phi_mux_i_0_i2_phi_fu_324_p4);

assign i_21_fu_502_p2 = (indexRound_assign_reg_263 + 5'd1);

assign i_fu_826_p2 = (i_0_reg_216 + zext_ln325_1_fu_822_p1);

assign icmp_ln269_fu_412_p2 = ((i_0_i_reg_240 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_437_p2 = ((j_0_i_reg_251 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln280_fu_687_p2 = ((indvar_flatten7_reg_309 == 8'd200) ? 1'b1 : 1'b0);

assign icmp_ln281_fu_705_p2 = ((j_0_i5_reg_331 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln293_fu_496_p2 = ((indexRound_assign_reg_263 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln304_fu_401_p2 = ((i_0_reg_216 < zext_ln304_reg_850) ? 1'b1 : 1'b0);

assign icmp_ln305_fu_406_p2 = ((instance_byteIOIndex_1_reg_204 == 32'd168) ? 1'b1 : 1'b0);

assign icmp_ln323_fu_798_p2 = ((add_ln323_fu_793_p2 > 32'd168) ? 1'b1 : 1'b0);

assign icmp_ln352_1_fu_526_p2 = ((ap_phi_mux_y_0_i_phi_fu_302_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln352_fu_508_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_279_p4 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln353_1_fu_546_p2 = ((select_ln353_2_fu_540_p3 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln353_2_fu_570_p2 = ((select_ln353_1_reg_927 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln353_fu_621_p2 = ((add_ln353_3_fu_609_p2 == 5'd0) ? 1'b1 : 1'b0);

assign instance_state_d0 = trunc_ln282_2_reg_1006;

assign j_9_fu_736_p2 = (4'd1 + select_ln280_fu_711_p3);

assign j_fu_443_p2 = (j_0_i_reg_251 + 4'd1);

assign lshr_ln282_fu_753_p2 = stateAsWords_q1 >> zext_ln282_fu_749_p1;

assign lshr_ln353_fu_651_p2 = stateAsWords_q1 >> zext_ln353_6_fu_647_p1;

assign or_ln272_fu_489_p2 = (stateAsWords_q0 | shl_ln272_fu_483_p2);

assign partialBlock_20_fu_804_p2 = (32'd168 - instance_byteIOIndex_2_reg_342);

assign partialBlock_21_fu_810_p3 = ((icmp_ln323_fu_798_p2[0:0] === 1'b1) ? partialBlock_20_fu_804_p2 : partialBlock_reg_1011);

assign partialBlock_fu_788_p2 = (zext_ln322_reg_855 - trunc_ln322_fu_784_p1);

assign select_ln280_2_fu_719_p3 = ((icmp_ln281_fu_705_p2[0:0] === 1'b1) ? i_20_fu_699_p2 : ap_phi_mux_i_0_i2_phi_fu_324_p4);

assign select_ln280_fu_711_p3 = ((icmp_ln281_fu_705_p2[0:0] === 1'b1) ? 4'd0 : j_0_i5_reg_331);

assign select_ln353_1_fu_532_p3 = ((icmp_ln352_1_fu_526_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_y_0_i_phi_fu_302_p4);

assign select_ln353_2_fu_540_p3 = ((icmp_ln352_1_reg_922[0:0] === 1'b1) ? x_reg_917 : x_0_i_reg_286);

assign select_ln353_3_fu_558_p3 = ((icmp_ln353_1_fu_546_p2[0:0] === 1'b1) ? select_ln353_2_fu_540_p3 : add_ln353_1_fu_552_p2);

assign select_ln353_4_fu_580_p3 = ((icmp_ln353_2_fu_570_p2[0:0] === 1'b1) ? select_ln353_1_reg_927 : add_ln353_2_fu_575_p2);

assign select_ln353_fu_663_p3 = ((icmp_ln353_reg_945[0:0] === 1'b1) ? stateAsWords_q0 : xor_ln353_fu_657_p2);

assign shl_ln272_9_fu_471_p3 = {{trunc_ln272_fu_467_p1}, {3'd0}};

assign shl_ln272_fu_483_p2 = zext_ln272_3_fu_463_p1 << zext_ln272_4_fu_479_p1;

assign shl_ln282_5_fu_742_p3 = {{trunc_ln282_reg_996}, {3'd0}};

assign shl_ln282_mid2_fu_763_p3 = {{select_ln280_2_reg_985_pp2_iter1_reg}, {3'd0}};

assign shl_ln2_fu_591_p3 = {{select_ln353_4_fu_580_p3}, {2'd0}};

assign shl_ln353_fu_635_p2 = stateAsWords_q1 << zext_ln353_5_fu_631_p1;

assign shl_ln_fu_429_p3 = {{i_0_i_reg_240}, {3'd0}};

assign sub_ln353_fu_641_p2 = ($signed(7'd64) - $signed(zext_ln353_4_fu_627_p1));

assign trunc_ln272_fu_467_p1 = j_0_i_reg_251[2:0];

assign trunc_ln282_2_fu_759_p1 = lshr_ln282_fu_753_p2[7:0];

assign trunc_ln282_fu_732_p1 = select_ln280_fu_711_p3[2:0];

assign trunc_ln322_fu_784_p1 = i_0_reg_216[31:0];

assign x_fu_520_p2 = (ap_phi_mux_x_0_i_phi_fu_290_p4 + 3'd1);

assign xor_ln353_fu_657_p2 = (shl_ln353_fu_635_p2 ^ lshr_ln353_fu_651_p2);

assign xor_ln382_fu_680_p2 = (stateAsWords_q1 ^ KeccakRoundConstants_q0);

assign y_fu_670_p2 = (select_ln353_1_reg_927 + 3'd1);

assign zext_ln270_fu_424_p1 = i_0_i_reg_240;

assign zext_ln271_fu_449_p1 = j_0_i_reg_251;

assign zext_ln272_3_fu_463_p1 = instance_state_q0;

assign zext_ln272_4_fu_479_p1 = shl_ln272_9_fu_471_p3;

assign zext_ln272_fu_458_p1 = add_ln272_fu_453_p2;

assign zext_ln280_fu_727_p1 = select_ln280_2_fu_719_p3;

assign zext_ln281_fu_770_p1 = select_ln280_reg_980_pp2_iter1_reg;

assign zext_ln282_2_fu_779_p1 = add_ln282_fu_773_p2;

assign zext_ln282_fu_749_p1 = shl_ln282_5_fu_742_p3;

assign zext_ln304_fu_393_p1 = $unsigned(dataByteLen_cast_fu_389_p1);

assign zext_ln322_fu_397_p1 = $unsigned(dataByteLen_cast_fu_389_p1);

assign zext_ln325_1_fu_822_p1 = partialBlock_21_fu_810_p3;

assign zext_ln325_fu_818_p1 = partialBlock_21_fu_810_p3;

assign zext_ln353_1_fu_587_p1 = select_ln353_4_fu_580_p3;

assign zext_ln353_2_fu_605_p1 = add_ln353_fu_599_p2;

assign zext_ln353_3_fu_615_p1 = add_ln353_3_fu_609_p2;

assign zext_ln353_4_fu_627_p1 = KeccakRhoOffsets_q0;

assign zext_ln353_5_fu_631_p1 = KeccakRhoOffsets_q0;

assign zext_ln353_6_fu_647_p1 = sub_ln353_fu_641_p2;

assign zext_ln353_fu_566_p1 = select_ln353_3_fu_558_p3;

assign zext_ln382_fu_675_p1 = indexRound_assign_reg_263;

always @ (posedge ap_clk) begin
    zext_ln304_reg_850[32:9] <= 24'b000000000000000000000000;
    zext_ln322_reg_855[31:9] <= 23'b00000000000000000000000;
    shl_ln_reg_881[2:0] <= 3'b000;
end

endmodule //KeccakWidth1600_Spon_5
