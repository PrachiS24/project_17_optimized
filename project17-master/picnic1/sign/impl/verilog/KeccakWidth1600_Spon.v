// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module KeccakWidth1600_Spon (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        instance_state_address0,
        instance_state_ce0,
        instance_state_we0,
        instance_state_d0,
        instance_state_q0,
        data_address0,
        data_ce0,
        data_we0,
        data_d0,
        data_offset,
        data_offset1
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_pp1_stage0 = 22'd256;
parameter    ap_ST_fsm_pp1_stage1 = 22'd512;
parameter    ap_ST_fsm_pp1_stage2 = 22'd1024;
parameter    ap_ST_fsm_state13 = 22'd2048;
parameter    ap_ST_fsm_state14 = 22'd4096;
parameter    ap_ST_fsm_state15 = 22'd8192;
parameter    ap_ST_fsm_state16 = 22'd16384;
parameter    ap_ST_fsm_state17 = 22'd32768;
parameter    ap_ST_fsm_state18 = 22'd65536;
parameter    ap_ST_fsm_pp2_stage0 = 22'd131072;
parameter    ap_ST_fsm_state22 = 22'd262144;
parameter    ap_ST_fsm_state23 = 22'd524288;
parameter    ap_ST_fsm_state24 = 22'd1048576;
parameter    ap_ST_fsm_state25 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] instance_state_address0;
output   instance_state_ce0;
output   instance_state_we0;
output  [7:0] instance_state_d0;
input  [7:0] instance_state_q0;
output  [14:0] data_address0;
output   data_ce0;
output   data_we0;
output  [7:0] data_d0;
input  [7:0] data_offset;
input  [1:0] data_offset1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] instance_state_address0;
reg instance_state_ce0;
reg instance_state_we0;
reg data_ce0;
reg data_we0;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] KeccakRhoOffsets_address0;
reg    KeccakRhoOffsets_ce0;
wire   [5:0] KeccakRhoOffsets_q0;
wire   [4:0] KeccakRoundConstants_address0;
reg    KeccakRoundConstants_ce0;
wire   [63:0] KeccakRoundConstants_q0;
reg   [4:0] indvar_flatten_reg_313;
reg   [2:0] x_0_i_reg_324;
reg   [2:0] y_0_i_reg_336;
reg   [7:0] indvar_flatten7_reg_347;
reg   [4:0] i_0_i2_reg_358;
reg   [3:0] j_0_i5_reg_369;
wire   [15:0] tmp_54_cast_fu_451_p3;
reg   [15:0] tmp_54_cast_reg_964;
wire   [6:0] trunc_ln304_fu_475_p1;
reg   [6:0] trunc_ln304_reg_978;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln304_fu_469_p2;
wire   [0:0] icmp_ln305_fu_479_p2;
reg   [0:0] icmp_ln305_reg_983;
wire   [0:0] icmp_ln269_fu_485_p2;
wire    ap_CS_fsm_state3;
wire   [4:0] i_30_fu_491_p2;
reg   [4:0] i_30_reg_991;
reg   [4:0] stateAsWords_addr_10_reg_996;
wire   [7:0] shl_ln_fu_502_p3;
reg   [7:0] shl_ln_reg_1001;
wire   [3:0] j_fu_516_p2;
reg   [3:0] j_reg_1009;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln271_fu_510_p2;
wire   [0:0] icmp_ln293_fu_569_p2;
wire    ap_CS_fsm_state7;
wire   [4:0] i_32_fu_575_p2;
reg   [4:0] i_32_reg_1023;
wire   [0:0] icmp_ln352_fu_581_p2;
reg   [0:0] icmp_ln352_reg_1028;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [4:0] add_ln352_fu_587_p2;
reg   [4:0] add_ln352_reg_1032;
reg    ap_enable_reg_pp1_iter0;
wire   [2:0] x_fu_593_p2;
reg   [2:0] x_reg_1037;
wire   [0:0] icmp_ln352_3_fu_599_p2;
reg   [0:0] icmp_ln352_3_reg_1042;
wire   [2:0] select_ln353_13_fu_605_p3;
reg   [2:0] select_ln353_13_reg_1047;
wire   [2:0] select_ln353_14_fu_613_p3;
reg   [2:0] select_ln353_14_reg_1055;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state10_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire   [0:0] icmp_ln353_fu_694_p2;
reg   [0:0] icmp_ln353_reg_1065;
reg   [4:0] stateAsWords_addr_12_reg_1070;
wire   [63:0] select_ln353_fu_736_p3;
reg   [63:0] select_ln353_reg_1076;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state11_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [2:0] y_fu_743_p2;
reg   [2:0] y_reg_1081;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln280_fu_760_p2;
reg   [0:0] icmp_ln280_reg_1091;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state19_pp2_stage0_iter0;
wire    ap_block_state20_pp2_stage0_iter1;
wire    ap_block_state21_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln280_reg_1091_pp2_iter1_reg;
wire   [7:0] add_ln280_fu_766_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [3:0] select_ln280_fu_784_p3;
reg   [3:0] select_ln280_reg_1100;
reg   [3:0] select_ln280_reg_1100_pp2_iter1_reg;
wire   [4:0] select_ln280_5_fu_792_p3;
reg   [4:0] select_ln280_5_reg_1105;
reg   [4:0] select_ln280_5_reg_1105_pp2_iter1_reg;
wire   [2:0] trunc_ln282_fu_805_p1;
reg   [2:0] trunc_ln282_reg_1116;
wire   [3:0] j_12_fu_809_p2;
wire   [7:0] trunc_ln282_5_fu_832_p1;
reg   [7:0] trunc_ln282_5_reg_1126;
wire   [5:0] partialBlock_fu_861_p2;
reg   [5:0] partialBlock_reg_1131;
wire    ap_CS_fsm_state22;
wire   [31:0] partialBlock_31_fu_888_p3;
reg   [31:0] partialBlock_31_reg_1136;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln325_fu_896_p1;
reg   [63:0] zext_ln325_reg_1142;
wire   [32:0] i_fu_904_p2;
reg   [32:0] i_reg_1147;
wire   [31:0] loop_fu_915_p2;
reg   [31:0] loop_reg_1155;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln393_fu_910_p2;
wire   [15:0] add_ln394_8_fu_945_p2;
reg   [15:0] add_ln394_8_reg_1165;
wire   [31:0] add_ln332_fu_950_p2;
wire   [63:0] add_ln331_fu_955_p2;
wire    ap_CS_fsm_state8;
wire    grp_theta_fu_409_ap_ready;
wire    grp_theta_fu_409_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state19;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg   [4:0] stateAsWords_address0;
reg    stateAsWords_ce0;
reg    stateAsWords_we0;
reg   [63:0] stateAsWords_d0;
wire   [63:0] stateAsWords_q0;
reg   [4:0] stateAsWords_address1;
reg    stateAsWords_ce1;
reg    stateAsWords_we1;
reg   [63:0] stateAsWords_d1;
wire   [63:0] stateAsWords_q1;
wire    grp_pi_fu_404_ap_start;
wire    grp_pi_fu_404_ap_done;
wire    grp_pi_fu_404_ap_idle;
wire    grp_pi_fu_404_ap_ready;
wire   [4:0] grp_pi_fu_404_A_address0;
wire    grp_pi_fu_404_A_ce0;
wire    grp_pi_fu_404_A_we0;
wire   [63:0] grp_pi_fu_404_A_d0;
wire   [4:0] grp_pi_fu_404_A_address1;
wire    grp_pi_fu_404_A_ce1;
wire    grp_pi_fu_404_A_we1;
wire   [63:0] grp_pi_fu_404_A_d1;
wire    grp_theta_fu_409_ap_start;
wire    grp_theta_fu_409_ap_idle;
wire   [4:0] grp_theta_fu_409_A_address0;
wire    grp_theta_fu_409_A_ce0;
wire   [4:0] grp_theta_fu_409_A_address1;
wire    grp_theta_fu_409_A_ce1;
wire    grp_theta_fu_409_A_we1;
wire   [63:0] grp_theta_fu_409_A_d1;
wire    grp_chi_fu_414_ap_start;
wire    grp_chi_fu_414_ap_done;
wire    grp_chi_fu_414_ap_idle;
wire    grp_chi_fu_414_ap_ready;
wire   [4:0] grp_chi_fu_414_A_address0;
wire    grp_chi_fu_414_A_ce0;
wire   [4:0] grp_chi_fu_414_A_address1;
wire    grp_chi_fu_414_A_ce1;
wire    grp_chi_fu_414_A_we1;
wire   [63:0] grp_chi_fu_414_A_d1;
reg   [31:0] instance_byteIOIndex_1_reg_242;
reg   [32:0] i_0_reg_254;
reg   [63:0] curData_0_idx_reg_266;
reg   [4:0] i_0_i_reg_278;
wire    ap_CS_fsm_state6;
reg   [3:0] j_0_i_reg_289;
wire    ap_CS_fsm_state5;
reg   [4:0] indexRound_assign_reg_301;
wire    ap_CS_fsm_state18;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_317_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_x_0_i_phi_fu_328_p4;
reg   [2:0] ap_phi_mux_y_0_i_phi_fu_340_p4;
reg   [4:0] ap_phi_mux_i_0_i2_phi_fu_362_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] offset_assign_reg_380;
reg   [31:0] loop_0_i11_reg_393;
wire    ap_CS_fsm_state25;
reg    grp_pi_fu_404_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_theta_fu_409_ap_start_reg;
reg    grp_chi_fu_414_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln270_fu_497_p1;
wire   [63:0] zext_ln272_fu_531_p1;
wire   [63:0] zext_ln353_4_fu_688_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln382_fu_748_p1;
wire   [63:0] zext_ln280_fu_800_p1;
wire   [63:0] zext_ln282_4_fu_852_p1;
wire   [63:0] zext_ln394_fu_927_p1;
wire   [63:0] zext_ln394_13_fu_960_p1;
wire   [63:0] or_ln272_fu_562_p2;
wire   [63:0] xor_ln382_fu_753_p2;
wire   [9:0] tmp_fu_427_p3;
wire   [10:0] zext_ln394_11_fu_435_p1;
wire   [10:0] zext_ln394_10_fu_423_p1;
wire   [10:0] sub_ln394_fu_439_p2;
wire   [10:0] zext_ln394_9_fu_419_p1;
wire   [10:0] add_ln394_7_fu_445_p2;
wire   [27:0] tmp_62_fu_459_p4;
wire   [7:0] zext_ln271_fu_522_p1;
wire   [7:0] add_ln272_fu_526_p2;
wire   [2:0] trunc_ln272_fu_540_p1;
wire   [5:0] shl_ln272_3_fu_544_p3;
wire   [63:0] zext_ln272_3_fu_536_p1;
wire   [63:0] zext_ln272_4_fu_552_p1;
wire   [63:0] shl_ln272_fu_556_p2;
wire   [0:0] icmp_ln353_7_fu_619_p2;
wire   [2:0] add_ln353_8_fu_625_p2;
wire   [2:0] select_ln353_15_fu_631_p3;
wire   [0:0] icmp_ln353_8_fu_643_p2;
wire   [2:0] add_ln353_9_fu_648_p2;
wire   [2:0] select_ln353_16_fu_653_p3;
wire   [3:0] zext_ln353_fu_639_p1;
wire   [3:0] zext_ln353_1_fu_660_p1;
wire   [3:0] add_ln353_fu_672_p2;
wire   [4:0] shl_ln5_fu_664_p3;
wire   [4:0] zext_ln353_3_fu_678_p1;
wire   [4:0] add_ln353_1_fu_682_p2;
wire    ap_block_pp1_stage2;
wire   [63:0] zext_ln353_6_fu_704_p1;
wire   [6:0] zext_ln353_5_fu_700_p1;
wire   [6:0] sub_ln353_fu_714_p2;
wire   [63:0] zext_ln353_7_fu_720_p1;
wire   [63:0] lshr_ln353_fu_724_p2;
wire   [63:0] shl_ln353_fu_708_p2;
wire   [63:0] xor_ln353_fu_730_p2;
wire   [0:0] icmp_ln281_fu_778_p2;
wire   [4:0] i_31_fu_772_p2;
wire   [5:0] shl_ln282_2_fu_815_p3;
wire   [63:0] zext_ln282_3_fu_822_p1;
wire   [63:0] lshr_ln282_fu_826_p2;
wire   [7:0] zext_ln281_fu_843_p1;
wire   [7:0] shl_ln282_mid2_fu_836_p3;
wire   [7:0] add_ln282_fu_846_p2;
wire   [5:0] trunc_ln322_fu_857_p1;
wire   [31:0] zext_ln322_fu_867_p1;
wire   [31:0] add_ln323_fu_870_p2;
wire   [0:0] icmp_ln323_fu_876_p2;
wire   [31:0] partialBlock_30_fu_882_p2;
wire   [32:0] zext_ln325_1_fu_900_p1;
wire   [31:0] add_ln394_fu_921_p2;
wire   [6:0] trunc_ln394_fu_932_p1;
wire   [6:0] add_ln394_1_fu_936_p2;
wire   [15:0] zext_ln394_12_fu_941_p1;
reg   [21:0] ap_NS_fsm;
wire    ap_block_pp1_stage1_subdone;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 grp_pi_fu_404_ap_start_reg = 1'b0;
#0 grp_theta_fu_409_ap_start_reg = 1'b0;
#0 grp_chi_fu_414_ap_start_reg = 1'b0;
end

KeccakP1600OnWordeOg #(
    .DataWidth( 6 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
KeccakRhoOffsets_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(KeccakRhoOffsets_address0),
    .ce0(KeccakRhoOffsets_ce0),
    .q0(KeccakRhoOffsets_q0)
);

KeccakP1600OnWordfYi #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
KeccakRoundConstants_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(KeccakRoundConstants_address0),
    .ce0(KeccakRoundConstants_ce0),
    .q0(KeccakRoundConstants_q0)
);

pi_tempA #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
stateAsWords_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stateAsWords_address0),
    .ce0(stateAsWords_ce0),
    .we0(stateAsWords_we0),
    .d0(stateAsWords_d0),
    .q0(stateAsWords_q0),
    .address1(stateAsWords_address1),
    .ce1(stateAsWords_ce1),
    .we1(stateAsWords_we1),
    .d1(stateAsWords_d1),
    .q1(stateAsWords_q1)
);

pi grp_pi_fu_404(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pi_fu_404_ap_start),
    .ap_done(grp_pi_fu_404_ap_done),
    .ap_idle(grp_pi_fu_404_ap_idle),
    .ap_ready(grp_pi_fu_404_ap_ready),
    .A_address0(grp_pi_fu_404_A_address0),
    .A_ce0(grp_pi_fu_404_A_ce0),
    .A_we0(grp_pi_fu_404_A_we0),
    .A_d0(grp_pi_fu_404_A_d0),
    .A_q0(stateAsWords_q0),
    .A_address1(grp_pi_fu_404_A_address1),
    .A_ce1(grp_pi_fu_404_A_ce1),
    .A_we1(grp_pi_fu_404_A_we1),
    .A_d1(grp_pi_fu_404_A_d1),
    .A_q1(stateAsWords_q1)
);

theta grp_theta_fu_409(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_theta_fu_409_ap_start),
    .ap_done(grp_theta_fu_409_ap_done),
    .ap_idle(grp_theta_fu_409_ap_idle),
    .ap_ready(grp_theta_fu_409_ap_ready),
    .A_address0(grp_theta_fu_409_A_address0),
    .A_ce0(grp_theta_fu_409_A_ce0),
    .A_q0(stateAsWords_q0),
    .A_address1(grp_theta_fu_409_A_address1),
    .A_ce1(grp_theta_fu_409_A_ce1),
    .A_we1(grp_theta_fu_409_A_we1),
    .A_d1(grp_theta_fu_409_A_d1),
    .A_q1(stateAsWords_q1)
);

chi grp_chi_fu_414(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_chi_fu_414_ap_start),
    .ap_done(grp_chi_fu_414_ap_done),
    .ap_idle(grp_chi_fu_414_ap_idle),
    .ap_ready(grp_chi_fu_414_ap_ready),
    .A_address0(grp_chi_fu_414_A_address0),
    .A_ce0(grp_chi_fu_414_A_ce0),
    .A_q0(stateAsWords_q0),
    .A_address1(grp_chi_fu_414_A_address1),
    .A_ce1(grp_chi_fu_414_A_ce1),
    .A_we1(grp_chi_fu_414_A_we1),
    .A_d1(grp_chi_fu_414_A_d1),
    .A_q1(stateAsWords_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((grp_theta_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((grp_theta_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln293_fu_569_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state19)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((icmp_ln293_fu_569_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_chi_fu_414_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_chi_fu_414_ap_start_reg <= 1'b1;
        end else if ((grp_chi_fu_414_ap_ready == 1'b1)) begin
            grp_chi_fu_414_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pi_fu_404_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_pi_fu_404_ap_start_reg <= 1'b1;
        end else if ((grp_pi_fu_404_ap_ready == 1'b1)) begin
            grp_pi_fu_404_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_theta_fu_409_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln293_fu_569_p2 == 1'd0))) begin
            grp_theta_fu_409_ap_start_reg <= 1'b1;
        end else if ((grp_theta_fu_409_ap_ready == 1'b1)) begin
            grp_theta_fu_409_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln393_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        curData_0_idx_reg_266 <= add_ln331_fu_955_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        curData_0_idx_reg_266 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_569_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_0_i2_reg_358 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_reg_1091 == 1'd0))) begin
        i_0_i2_reg_358 <= select_ln280_5_reg_1105;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i_reg_278 <= i_30_reg_991;
    end else if (((icmp_ln305_fu_479_p2 == 1'd1) & (icmp_ln304_fu_469_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_i_reg_278 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln393_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_0_reg_254 <= i_reg_1147;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_254 <= 33'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln269_fu_485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indexRound_assign_reg_301 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        indexRound_assign_reg_301 <= i_32_reg_1023;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_569_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten7_reg_347 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_fu_760_p2 == 1'd0))) begin
        indvar_flatten7_reg_347 <= add_ln280_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_reg_1028 == 1'd0))) begin
        indvar_flatten_reg_313 <= add_ln352_reg_1032;
    end else if (((grp_theta_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_flatten_reg_313 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln393_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        instance_byteIOIndex_1_reg_242 <= add_ln332_fu_950_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        instance_byteIOIndex_1_reg_242 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_569_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        j_0_i5_reg_369 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_fu_760_p2 == 1'd0))) begin
        j_0_i5_reg_369 <= j_12_fu_809_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_0_i_reg_289 <= j_reg_1009;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln269_fu_485_p2 == 1'd0))) begin
        j_0_i_reg_289 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        loop_0_i11_reg_393 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        loop_0_i11_reg_393 <= loop_reg_1155;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_983 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        offset_assign_reg_380 <= 32'd0;
    end else if (((icmp_ln304_fu_469_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln305_fu_479_p2 == 1'd0))) begin
        offset_assign_reg_380 <= instance_byteIOIndex_1_reg_242;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_reg_1028 == 1'd0))) begin
        x_0_i_reg_324 <= select_ln353_14_reg_1055;
    end else if (((grp_theta_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        x_0_i_reg_324 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_reg_1028 == 1'd0))) begin
        y_0_i_reg_336 <= y_reg_1081;
    end else if (((grp_theta_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        y_0_i_reg_336 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln352_reg_1032 <= add_ln352_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln393_fu_910_p2 == 1'd0))) begin
        add_ln394_8_reg_1165 <= add_ln394_8_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_30_reg_991 <= i_30_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_32_reg_1023 <= i_32_fu_575_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_reg_1147 <= i_fu_904_p2;
        partialBlock_31_reg_1136 <= partialBlock_31_fu_888_p3;
        zext_ln325_reg_1142[31 : 0] <= zext_ln325_fu_896_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln280_reg_1091 <= icmp_ln280_fu_760_p2;
        icmp_ln280_reg_1091_pp2_iter1_reg <= icmp_ln280_reg_1091;
        select_ln280_5_reg_1105_pp2_iter1_reg <= select_ln280_5_reg_1105;
        select_ln280_reg_1100_pp2_iter1_reg <= select_ln280_reg_1100;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln304_fu_469_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln305_reg_983 <= icmp_ln305_fu_479_p2;
        trunc_ln304_reg_978 <= trunc_ln304_fu_475_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_fu_581_p2 == 1'd0))) begin
        icmp_ln352_3_reg_1042 <= icmp_ln352_3_fu_599_p2;
        select_ln353_13_reg_1047 <= select_ln353_13_fu_605_p3;
        x_reg_1037 <= x_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln352_reg_1028 <= icmp_ln352_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln352_reg_1028 == 1'd0))) begin
        icmp_ln353_reg_1065 <= icmp_ln353_fu_694_p2;
        stateAsWords_addr_12_reg_1070 <= zext_ln353_4_fu_688_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_1009 <= j_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        loop_reg_1155 <= loop_fu_915_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        partialBlock_reg_1131 <= partialBlock_fu_861_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_fu_760_p2 == 1'd0))) begin
        select_ln280_5_reg_1105 <= select_ln280_5_fu_792_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_fu_760_p2 == 1'd0))) begin
        select_ln280_reg_1100 <= select_ln280_fu_784_p3;
        trunc_ln282_reg_1116 <= trunc_ln282_fu_805_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln352_reg_1028 == 1'd0))) begin
        select_ln353_14_reg_1055 <= select_ln353_14_fu_613_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln352_reg_1028 == 1'd0))) begin
        select_ln353_reg_1076 <= select_ln353_fu_736_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln269_fu_485_p2 == 1'd0))) begin
        shl_ln_reg_1001[7 : 3] <= shl_ln_fu_502_p3[7 : 3];
        stateAsWords_addr_10_reg_996 <= zext_ln270_fu_497_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_54_cast_reg_964[15 : 5] <= tmp_54_cast_fu_451_p3[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_reg_1091 == 1'd0))) begin
        trunc_ln282_5_reg_1126 <= trunc_ln282_5_fu_832_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln352_reg_1028 == 1'd0))) begin
        y_reg_1081 <= y_fu_743_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        KeccakRhoOffsets_ce0 = 1'b1;
    end else begin
        KeccakRhoOffsets_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        KeccakRoundConstants_ce0 = 1'b1;
    end else begin
        KeccakRoundConstants_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln352_fu_581_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln280_fu_760_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln304_fu_469_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln280_reg_1091 == 1'd0))) begin
        ap_phi_mux_i_0_i2_phi_fu_362_p4 = select_ln280_5_reg_1105;
    end else begin
        ap_phi_mux_i_0_i2_phi_fu_362_p4 = i_0_i2_reg_358;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln352_reg_1028 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_317_p4 = add_ln352_reg_1032;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_317_p4 = indvar_flatten_reg_313;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln352_reg_1028 == 1'd0))) begin
        ap_phi_mux_x_0_i_phi_fu_328_p4 = select_ln353_14_reg_1055;
    end else begin
        ap_phi_mux_x_0_i_phi_fu_328_p4 = x_0_i_reg_324;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln352_reg_1028 == 1'd0))) begin
        ap_phi_mux_y_0_i_phi_fu_340_p4 = y_reg_1081;
    end else begin
        ap_phi_mux_y_0_i_phi_fu_340_p4 = y_0_i_reg_336;
    end
end

always @ (*) begin
    if (((icmp_ln304_fu_469_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        data_we0 = 1'b1;
    end else begin
        data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        instance_state_address0 = zext_ln394_fu_927_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        instance_state_address0 = zext_ln282_4_fu_852_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        instance_state_address0 = zext_ln272_fu_531_p1;
    end else begin
        instance_state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        instance_state_ce0 = 1'b1;
    end else begin
        instance_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln280_reg_1091_pp2_iter1_reg == 1'd0))) begin
        instance_state_we0 = 1'b1;
    end else begin
        instance_state_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stateAsWords_address0 = stateAsWords_addr_12_reg_1070;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        stateAsWords_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        stateAsWords_address0 = stateAsWords_addr_10_reg_996;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        stateAsWords_address0 = zext_ln270_fu_497_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_address0 = grp_chi_fu_414_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_address0 = grp_theta_fu_409_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_address0 = grp_pi_fu_404_A_address0;
    end else begin
        stateAsWords_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        stateAsWords_address1 = zext_ln280_fu_800_p1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        stateAsWords_address1 = 64'd0;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        stateAsWords_address1 = zext_ln353_4_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_address1 = grp_chi_fu_414_A_address1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_address1 = grp_theta_fu_409_A_address1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_address1 = grp_pi_fu_404_A_address1;
    end else begin
        stateAsWords_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        stateAsWords_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_ce0 = grp_chi_fu_414_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_ce0 = grp_theta_fu_409_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_ce0 = grp_pi_fu_404_A_ce0;
    end else begin
        stateAsWords_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        stateAsWords_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_ce1 = grp_chi_fu_414_A_ce1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_ce1 = grp_theta_fu_409_A_ce1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_ce1 = grp_pi_fu_404_A_ce1;
    end else begin
        stateAsWords_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        stateAsWords_d0 = select_ln353_reg_1076;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        stateAsWords_d0 = or_ln272_fu_562_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        stateAsWords_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_d0 = grp_pi_fu_404_A_d0;
    end else begin
        stateAsWords_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        stateAsWords_d1 = xor_ln382_fu_753_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_d1 = grp_chi_fu_414_A_d1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_d1 = grp_theta_fu_409_A_d1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_d1 = grp_pi_fu_404_A_d1;
    end else begin
        stateAsWords_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln352_reg_1028 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln269_fu_485_p2 == 1'd0)))) begin
        stateAsWords_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_we0 = grp_pi_fu_404_A_we0;
    end else begin
        stateAsWords_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        stateAsWords_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        stateAsWords_we1 = grp_chi_fu_414_A_we1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        stateAsWords_we1 = grp_theta_fu_409_A_we1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        stateAsWords_we1 = grp_pi_fu_404_A_we1;
    end else begin
        stateAsWords_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln304_fu_469_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln305_fu_479_p2 == 1'd1) & (icmp_ln304_fu_469_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln269_fu_485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln271_fu_510_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln293_fu_569_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((grp_theta_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln352_fu_581_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((icmp_ln352_fu_581_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_pi_fu_404_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_chi_fu_414_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln280_fu_760_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((icmp_ln280_fu_760_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln393_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign KeccakRhoOffsets_address0 = zext_ln353_4_fu_688_p1;

assign KeccakRoundConstants_address0 = zext_ln382_fu_748_p1;

assign add_ln272_fu_526_p2 = (shl_ln_reg_1001 + zext_ln271_fu_522_p1);

assign add_ln280_fu_766_p2 = (indvar_flatten7_reg_347 + 8'd1);

assign add_ln282_fu_846_p2 = (zext_ln281_fu_843_p1 + shl_ln282_mid2_fu_836_p3);

assign add_ln323_fu_870_p2 = (offset_assign_reg_380 + zext_ln322_fu_867_p1);

assign add_ln331_fu_955_p2 = (zext_ln325_reg_1142 + curData_0_idx_reg_266);

assign add_ln332_fu_950_p2 = (offset_assign_reg_380 + partialBlock_31_reg_1136);

assign add_ln352_fu_587_p2 = (ap_phi_mux_indvar_flatten_phi_fu_317_p4 + 5'd1);

assign add_ln353_1_fu_682_p2 = (shl_ln5_fu_664_p3 + zext_ln353_3_fu_678_p1);

assign add_ln353_8_fu_625_p2 = (select_ln353_14_fu_613_p3 + 3'd3);

assign add_ln353_9_fu_648_p2 = (select_ln353_13_reg_1047 + 3'd3);

assign add_ln353_fu_672_p2 = (zext_ln353_fu_639_p1 + zext_ln353_1_fu_660_p1);

assign add_ln394_1_fu_936_p2 = (trunc_ln394_fu_932_p1 + trunc_ln304_reg_978);

assign add_ln394_7_fu_445_p2 = (sub_ln394_fu_439_p2 + zext_ln394_9_fu_419_p1);

assign add_ln394_8_fu_945_p2 = (tmp_54_cast_reg_964 + zext_ln394_12_fu_941_p1);

assign add_ln394_fu_921_p2 = (offset_assign_reg_380 + loop_0_i11_reg_393);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign data_address0 = zext_ln394_13_fu_960_p1;

assign data_d0 = instance_state_q0;

assign grp_chi_fu_414_ap_start = grp_chi_fu_414_ap_start_reg;

assign grp_pi_fu_404_ap_start = grp_pi_fu_404_ap_start_reg;

assign grp_theta_fu_409_ap_start = grp_theta_fu_409_ap_start_reg;

assign i_30_fu_491_p2 = (i_0_i_reg_278 + 5'd1);

assign i_31_fu_772_p2 = (5'd1 + ap_phi_mux_i_0_i2_phi_fu_362_p4);

assign i_32_fu_575_p2 = (indexRound_assign_reg_301 + 5'd1);

assign i_fu_904_p2 = (zext_ln325_1_fu_900_p1 + i_0_reg_254);

assign icmp_ln269_fu_485_p2 = ((i_0_i_reg_278 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_510_p2 = ((j_0_i_reg_289 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln280_fu_760_p2 = ((indvar_flatten7_reg_347 == 8'd200) ? 1'b1 : 1'b0);

assign icmp_ln281_fu_778_p2 = ((j_0_i5_reg_369 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln293_fu_569_p2 = ((indexRound_assign_reg_301 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln304_fu_469_p2 = ((tmp_62_fu_459_p4 == 28'd0) ? 1'b1 : 1'b0);

assign icmp_ln305_fu_479_p2 = ((instance_byteIOIndex_1_reg_242 == 32'd168) ? 1'b1 : 1'b0);

assign icmp_ln323_fu_876_p2 = ((add_ln323_fu_870_p2 > 32'd168) ? 1'b1 : 1'b0);

assign icmp_ln352_3_fu_599_p2 = ((ap_phi_mux_y_0_i_phi_fu_340_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln352_fu_581_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_317_p4 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln353_7_fu_619_p2 = ((select_ln353_14_fu_613_p3 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln353_8_fu_643_p2 = ((select_ln353_13_reg_1047 < 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln353_fu_694_p2 = ((add_ln353_1_fu_682_p2 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln393_fu_910_p2 = ((loop_0_i11_reg_393 == partialBlock_31_reg_1136) ? 1'b1 : 1'b0);

assign instance_state_d0 = trunc_ln282_5_reg_1126;

assign j_12_fu_809_p2 = (4'd1 + select_ln280_fu_784_p3);

assign j_fu_516_p2 = (j_0_i_reg_289 + 4'd1);

assign loop_fu_915_p2 = (loop_0_i11_reg_393 + 32'd1);

assign lshr_ln282_fu_826_p2 = stateAsWords_q1 >> zext_ln282_3_fu_822_p1;

assign lshr_ln353_fu_724_p2 = stateAsWords_q1 >> zext_ln353_7_fu_720_p1;

assign or_ln272_fu_562_p2 = (stateAsWords_q0 | shl_ln272_fu_556_p2);

assign partialBlock_30_fu_882_p2 = (32'd168 - offset_assign_reg_380);

assign partialBlock_31_fu_888_p3 = ((icmp_ln323_fu_876_p2[0:0] === 1'b1) ? partialBlock_30_fu_882_p2 : zext_ln322_fu_867_p1);

assign partialBlock_fu_861_p2 = ($signed(6'd32) - $signed(trunc_ln322_fu_857_p1));

assign select_ln280_5_fu_792_p3 = ((icmp_ln281_fu_778_p2[0:0] === 1'b1) ? i_31_fu_772_p2 : ap_phi_mux_i_0_i2_phi_fu_362_p4);

assign select_ln280_fu_784_p3 = ((icmp_ln281_fu_778_p2[0:0] === 1'b1) ? 4'd0 : j_0_i5_reg_369);

assign select_ln353_13_fu_605_p3 = ((icmp_ln352_3_fu_599_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_y_0_i_phi_fu_340_p4);

assign select_ln353_14_fu_613_p3 = ((icmp_ln352_3_reg_1042[0:0] === 1'b1) ? x_reg_1037 : x_0_i_reg_324);

assign select_ln353_15_fu_631_p3 = ((icmp_ln353_7_fu_619_p2[0:0] === 1'b1) ? select_ln353_14_fu_613_p3 : add_ln353_8_fu_625_p2);

assign select_ln353_16_fu_653_p3 = ((icmp_ln353_8_fu_643_p2[0:0] === 1'b1) ? select_ln353_13_reg_1047 : add_ln353_9_fu_648_p2);

assign select_ln353_fu_736_p3 = ((icmp_ln353_reg_1065[0:0] === 1'b1) ? stateAsWords_q0 : xor_ln353_fu_730_p2);

assign shl_ln272_3_fu_544_p3 = {{trunc_ln272_fu_540_p1}, {3'd0}};

assign shl_ln272_fu_556_p2 = zext_ln272_3_fu_536_p1 << zext_ln272_4_fu_552_p1;

assign shl_ln282_2_fu_815_p3 = {{trunc_ln282_reg_1116}, {3'd0}};

assign shl_ln282_mid2_fu_836_p3 = {{select_ln280_5_reg_1105_pp2_iter1_reg}, {3'd0}};

assign shl_ln353_fu_708_p2 = stateAsWords_q1 << zext_ln353_6_fu_704_p1;

assign shl_ln5_fu_664_p3 = {{select_ln353_16_fu_653_p3}, {2'd0}};

assign shl_ln_fu_502_p3 = {{i_0_i_reg_278}, {3'd0}};

assign sub_ln353_fu_714_p2 = ($signed(7'd64) - $signed(zext_ln353_5_fu_700_p1));

assign sub_ln394_fu_439_p2 = (zext_ln394_11_fu_435_p1 - zext_ln394_10_fu_423_p1);

assign tmp_54_cast_fu_451_p3 = {{add_ln394_7_fu_445_p2}, {5'd0}};

assign tmp_62_fu_459_p4 = {{i_0_reg_254[32:5]}};

assign tmp_fu_427_p3 = {{data_offset}, {2'd0}};

assign trunc_ln272_fu_540_p1 = j_0_i_reg_289[2:0];

assign trunc_ln282_5_fu_832_p1 = lshr_ln282_fu_826_p2[7:0];

assign trunc_ln282_fu_805_p1 = select_ln280_fu_784_p3[2:0];

assign trunc_ln304_fu_475_p1 = curData_0_idx_reg_266[6:0];

assign trunc_ln322_fu_857_p1 = i_0_reg_254[5:0];

assign trunc_ln394_fu_932_p1 = loop_0_i11_reg_393[6:0];

assign x_fu_593_p2 = (ap_phi_mux_x_0_i_phi_fu_328_p4 + 3'd1);

assign xor_ln353_fu_730_p2 = (shl_ln353_fu_708_p2 ^ lshr_ln353_fu_724_p2);

assign xor_ln382_fu_753_p2 = (stateAsWords_q1 ^ KeccakRoundConstants_q0);

assign y_fu_743_p2 = (select_ln353_13_reg_1047 + 3'd1);

assign zext_ln270_fu_497_p1 = i_0_i_reg_278;

assign zext_ln271_fu_522_p1 = j_0_i_reg_289;

assign zext_ln272_3_fu_536_p1 = instance_state_q0;

assign zext_ln272_4_fu_552_p1 = shl_ln272_3_fu_544_p3;

assign zext_ln272_fu_531_p1 = add_ln272_fu_526_p2;

assign zext_ln280_fu_800_p1 = select_ln280_5_fu_792_p3;

assign zext_ln281_fu_843_p1 = select_ln280_reg_1100_pp2_iter1_reg;

assign zext_ln282_3_fu_822_p1 = shl_ln282_2_fu_815_p3;

assign zext_ln282_4_fu_852_p1 = add_ln282_fu_846_p2;

assign zext_ln322_fu_867_p1 = partialBlock_reg_1131;

assign zext_ln325_1_fu_900_p1 = partialBlock_31_fu_888_p3;

assign zext_ln325_fu_896_p1 = partialBlock_31_fu_888_p3;

assign zext_ln353_1_fu_660_p1 = select_ln353_16_fu_653_p3;

assign zext_ln353_3_fu_678_p1 = add_ln353_fu_672_p2;

assign zext_ln353_4_fu_688_p1 = add_ln353_1_fu_682_p2;

assign zext_ln353_5_fu_700_p1 = KeccakRhoOffsets_q0;

assign zext_ln353_6_fu_704_p1 = KeccakRhoOffsets_q0;

assign zext_ln353_7_fu_720_p1 = sub_ln353_fu_714_p2;

assign zext_ln353_fu_639_p1 = select_ln353_15_fu_631_p3;

assign zext_ln382_fu_748_p1 = indexRound_assign_reg_301;

assign zext_ln394_10_fu_423_p1 = data_offset;

assign zext_ln394_11_fu_435_p1 = tmp_fu_427_p3;

assign zext_ln394_12_fu_941_p1 = add_ln394_1_fu_936_p2;

assign zext_ln394_13_fu_960_p1 = add_ln394_8_reg_1165;

assign zext_ln394_9_fu_419_p1 = data_offset1;

assign zext_ln394_fu_927_p1 = add_ln394_fu_921_p2;

always @ (posedge ap_clk) begin
    tmp_54_cast_reg_964[4:0] <= 5'b00000;
    shl_ln_reg_1001[2:0] <= 3'b000;
    zext_ln325_reg_1142[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //KeccakWidth1600_Spon
