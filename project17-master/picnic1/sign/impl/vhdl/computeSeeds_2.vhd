-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity computeSeeds_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    allSeeds_seed_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    allSeeds_seed_ce0 : OUT STD_LOGIC;
    allSeeds_seed_we0 : OUT STD_LOGIC;
    allSeeds_seed_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    salt_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    salt_0_ce0 : OUT STD_LOGIC;
    salt_0_we0 : OUT STD_LOGIC;
    salt_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    privateKey_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    privateKey_ce0 : OUT STD_LOGIC;
    privateKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    publicKey_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    publicKey_ce0 : OUT STD_LOGIC;
    publicKey_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    plaintext_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    plaintext_ce0 : OUT STD_LOGIC;
    plaintext_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    message_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    message_ce0 : OUT STD_LOGIC;
    message_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    messageByteLength : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of computeSeeds_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (73 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (73 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (73 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (73 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (73 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (73 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (73 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (73 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (73 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (73 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (73 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv64_A7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010100111";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_C8 : STD_LOGIC_VECTOR (7 downto 0) := "11001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_4A : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv64_A8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010101000";
    constant ap_const_lv8_A8 : STD_LOGIC_VECTOR (7 downto 0) := "10101000";
    constant ap_const_lv64_FFFFFFFFFFFFFF58 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111101011000";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv8_1F : STD_LOGIC_VECTOR (7 downto 0) := "00011111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_DB : STD_LOGIC_VECTOR (7 downto 0) := "11011011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal offset_assign_12_reg_604 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_876 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal reg_880 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal icmp_ln1623_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal icmp_ln1624_fu_1956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_886 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_33_fu_898_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln34_fu_909_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln37_fu_926_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_reg_2008 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_fu_930_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln37_fu_953_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln37_reg_2021 : STD_LOGIC_VECTOR (3 downto 0);
    signal loop_fu_957_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_reg_2028 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln3_reg_2040 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln4_reg_2045 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_byteIOInd_31_reg_2050 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal partialBlock_fu_1052_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal partialBlock_reg_2061 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln194_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln41_1_fu_1061_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_1_reg_2083 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln226_fu_1094_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_reg_2090 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal add_ln231_fu_1102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln231_reg_2097 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_34_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_34_reg_2105 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln233_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_17_reg_2115 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_reg_2120 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i113_fu_1170_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fromWordsToBytes_fu_827_ap_ready : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_827_ap_done : STD_LOGIC;
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal ctx_sponge_byteIOInd_34_reg_2129 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln194_4_fu_1183_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln194_4_reg_2141 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln194_3_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_14_fu_1209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal partialBlock_14_reg_2153 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln195_1_fu_1199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln195_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln206_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln206_fu_1219_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln206_reg_2163 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln211_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln211_reg_2168 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state18_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal loop_37_fu_1229_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ctx_sponge_state_add_18_reg_2182 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln216_fu_1277_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal select_ln226_7_fu_1298_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_7_reg_2193 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal zext_ln231_3_fu_1305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_3_reg_2199 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_1309_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_reg_2205 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_35_fu_1320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_35_reg_2213 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln233_4_fu_1315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_19_reg_2223 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_rec_i_i_i_fu_1376_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal add_ln34_1_fu_1382_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal zext_ln37_1_fu_1399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_1_reg_2244 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_57_fu_1403_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln37_1_fu_1426_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln37_1_reg_2257 : STD_LOGIC_VECTOR (3 downto 0);
    signal loop_36_fu_1430_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_36_reg_2264 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln43_1_reg_2277 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal trunc_ln45_1_reg_2282 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_byteIOInd_37_reg_2287 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal partialBlock_16_fu_1529_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal partialBlock_16_reg_2299 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln194_5_fu_1519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln226_8_fu_1554_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_8_reg_2304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal zext_ln231_4_fu_1562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_4_reg_2310 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_17_fu_1570_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_17_reg_2315 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_38_fu_1581_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_38_reg_2323 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal icmp_ln233_5_fu_1576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_20_reg_2333 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_5_fu_1620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_5_reg_2339 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i71_fu_1643_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_block_state47_on_subcall_done : BOOLEAN;
    signal add_ln34_2_fu_1648_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal zext_ln37_2_fu_1665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_2_reg_2356 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal tmp_59_fu_1669_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln37_2_fu_1692_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln37_2_reg_2369 : STD_LOGIC_VECTOR (3 downto 0);
    signal loop_39_fu_1696_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_39_reg_2376 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln43_2_reg_2389 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal trunc_ln45_2_reg_2394 : STD_LOGIC_VECTOR (7 downto 0);
    signal partialBlock_18_fu_1792_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal partialBlock_18_reg_2402 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal icmp_ln194_6_fu_1782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_byteIOInd_45_reg_2421 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_9_fu_1829_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_9_reg_2426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal zext_ln231_5_fu_1837_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_5_reg_2432 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_18_fu_1845_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_18_reg_2437 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_41_fu_1856_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_41_reg_2445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal icmp_ln233_6_fu_1851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_21_reg_2455 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_6_fu_1897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_6_reg_2461 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i30_fu_1920_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_block_state60_on_subcall_done : BOOLEAN;
    signal ctx_sponge_state_add_22_reg_2470 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_HashUpdateIntLE_fu_806_ap_ready : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_806_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal loop_40_fu_1950_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loop_40_reg_2485 : STD_LOGIC_VECTOR (7 downto 0);
    signal loop2_fu_1962_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal loop2_reg_2493 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state18 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal stateAsWords_11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_11_ce0 : STD_LOGIC;
    signal stateAsWords_11_we0 : STD_LOGIC;
    signal stateAsWords_11_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_11_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_11_ce1 : STD_LOGIC;
    signal stateAsWords_11_we1 : STD_LOGIC;
    signal stateAsWords_11_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_ce0 : STD_LOGIC;
    signal stateAsWords_we0 : STD_LOGIC;
    signal stateAsWords_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_ce1 : STD_LOGIC;
    signal stateAsWords_we1 : STD_LOGIC;
    signal stateAsWords_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC;
    signal temp_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_ce1 : STD_LOGIC;
    signal temp_we1 : STD_LOGIC;
    signal temp_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal stateAsWords_10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_10_ce0 : STD_LOGIC;
    signal stateAsWords_10_we0 : STD_LOGIC;
    signal stateAsWords_10_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_10_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_10_ce1 : STD_LOGIC;
    signal stateAsWords_10_we1 : STD_LOGIC;
    signal stateAsWords_10_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_1_ce0 : STD_LOGIC;
    signal temp_1_we0 : STD_LOGIC;
    signal temp_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_1_ce1 : STD_LOGIC;
    signal temp_1_we1 : STD_LOGIC;
    signal temp_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal stateAsWords_12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_12_ce0 : STD_LOGIC;
    signal stateAsWords_12_we0 : STD_LOGIC;
    signal stateAsWords_12_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_12_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_12_ce1 : STD_LOGIC;
    signal stateAsWords_12_we1 : STD_LOGIC;
    signal stateAsWords_12_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_2_ce0 : STD_LOGIC;
    signal temp_2_we0 : STD_LOGIC;
    signal temp_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_2_ce1 : STD_LOGIC;
    signal temp_2_we1 : STD_LOGIC;
    signal temp_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal stateAsWords_9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_9_ce0 : STD_LOGIC;
    signal stateAsWords_9_we0 : STD_LOGIC;
    signal stateAsWords_9_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_9_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_9_ce1 : STD_LOGIC;
    signal stateAsWords_9_we1 : STD_LOGIC;
    signal stateAsWords_9_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_8_ce0 : STD_LOGIC;
    signal stateAsWords_8_we0 : STD_LOGIC;
    signal stateAsWords_8_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_8_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_8_ce1 : STD_LOGIC;
    signal stateAsWords_8_we1 : STD_LOGIC;
    signal stateAsWords_8_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_ce0 : STD_LOGIC;
    signal ctx_sponge_state_we0 : STD_LOGIC;
    signal ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_ce1 : STD_LOGIC;
    signal ctx_sponge_state_we1 : STD_LOGIC;
    signal ctx_sponge_state_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_2_fu_776_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_2_fu_776_ap_done : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_2_fu_776_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_2_fu_776_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_2_fu_776_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_2_fu_776_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_2_fu_776_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_2_fu_776_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_2_fu_776_data_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_KeccakWidth1600_Spon_2_fu_776_data_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_2_fu_776_data_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_2_fu_776_data_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_2_fu_776_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_KeccakWidth1600_Spon_2_fu_776_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_KeccakWidth1600_Spon_3_fu_793_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_3_fu_793_ap_done : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_3_fu_793_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_3_fu_793_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_3_fu_793_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_3_fu_793_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_3_fu_793_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_3_fu_793_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_3_fu_793_data_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakWidth1600_Spon_3_fu_793_data_0_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_3_fu_793_data_0_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_3_fu_793_data_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdateIntLE_fu_806_ap_start : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_806_ap_idle : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_806_ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdateIntLE_fu_806_ctx_sponge_state_ce0 : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_806_ctx_sponge_state_we0 : STD_LOGIC;
    signal grp_HashUpdateIntLE_fu_806_ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_HashUpdateIntLE_fu_806_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_KeccakP1600OnWords_fu_818_ap_start : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_818_ap_done : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_818_ap_idle : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_818_ap_ready : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_818_state_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakP1600OnWords_fu_818_state_ce0 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_818_state_we0 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_818_state_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_818_state_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_818_state_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakP1600OnWords_fu_818_state_ce1 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_818_state_we1 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_818_state_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_818_state_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromWordsToBytes_fu_827_ap_start : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_827_ap_idle : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_827_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromWordsToBytes_fu_827_state_ce0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_827_state_we0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_827_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromWordsToBytes_fu_827_stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fromWordsToBytes_fu_827_stateAsWords_ce0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_827_stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_833_ap_start : STD_LOGIC;
    signal grp_fromBytesToWords_fu_833_ap_done : STD_LOGIC;
    signal grp_fromBytesToWords_fu_833_ap_idle : STD_LOGIC;
    signal grp_fromBytesToWords_fu_833_ap_ready : STD_LOGIC;
    signal grp_fromBytesToWords_fu_833_stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fromBytesToWords_fu_833_stateAsWords_ce0 : STD_LOGIC;
    signal grp_fromBytesToWords_fu_833_stateAsWords_we0 : STD_LOGIC;
    signal grp_fromBytesToWords_fu_833_stateAsWords_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_833_stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_833_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromBytesToWords_fu_833_state_ce0 : STD_LOGIC;
    signal loop_0_i1_reg_512 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln139_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln34_reg_523 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln34_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_0_i80_reg_534 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i_0_i_i_i89_reg_545 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_01_rec_i_i_i90_reg_557 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_1_i_i_i106_reg_569 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal p_01_rec_i_i_i_reg_580 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_1_rec_i_i_i_reg_592 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i_reg_615 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal p_1_rec_pn_i_i_i_reg_626 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal icmp_ln239_4_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln34_1_reg_638 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln34_1_fu_1393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_0_i38_reg_649 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal i_0_i_i_i47_reg_660 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i48_reg_672 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i64_reg_684 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal phi_ln34_2_reg_695 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln34_2_fu_1659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_0_i_reg_706 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal i_0_i_i_i6_reg_717 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i7_reg_729 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i23_reg_741 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal loop_0_reg_752 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal loop2_0_reg_764 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal grp_KeccakWidth1600_Spon_2_fu_776_ap_start_reg : STD_LOGIC := '0';
    signal grp_KeccakWidth1600_Spon_3_fu_793_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal grp_HashUpdateIntLE_fu_806_ap_start_reg : STD_LOGIC := '0';
    signal grp_KeccakP1600OnWords_fu_818_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal grp_fromWordsToBytes_fu_827_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal grp_fromBytesToWords_fu_833_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal zext_ln140_fu_904_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_fu_915_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln38_fu_948_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_fu_984_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_fu_1014_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_fu_1024_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_fu_1133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_fu_1143_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln212_2_fu_1254_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln212_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_6_fu_1335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_8_fu_1345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_1_fu_1388_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln38_1_fu_1421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_2_fu_1461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_1_fu_1491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_1_fu_1501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_7_fu_1601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_9_fu_1611_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_2_fu_1654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln38_2_fu_1687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_3_fu_1727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_2_fu_1757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_2_fu_1767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_8_fu_1876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_11_fu_1887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_10_fu_1925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctx_sponge_byteIOInd_fu_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_32_fu_1148_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_15_fu_200 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_847_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_8_fu_1266_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctx_sponge_byteIOInd_33_fu_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_35_fu_1350_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_36_fu_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_38_fu_1616_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_39_fu_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_43_fu_1892_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_squeezing_1_fu_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_44_fu_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln149_fu_1163_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_11_fu_1259_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_10_fu_1369_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_12_fu_1636_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_15_fu_1913_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal xor_ln149_13_fu_1930_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal xor_ln149_14_fu_1937_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln39_fu_963_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln39_1_fu_1440_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln39_2_fu_1706_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln_fu_938_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln41_fu_979_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln43_fu_1009_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln45_fu_1019_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_56_fu_1032_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln225_fu_1048_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln41_fu_1058_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln225_fu_1075_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_fu_1078_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_13_fu_1089_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln194_fu_1123_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln234_fu_1119_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_fu_1127_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_16_fu_1138_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln195_fu_1193_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln225_fu_1204_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln212_1_fu_1240_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln212_fu_1244_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln212_1_fu_1249_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln226_4_fu_1283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_4_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_15_fu_1293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln234_4_fu_1326_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln234_10_fu_1330_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln234_17_fu_1340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln38_3_fu_1411_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln41_1_fu_1456_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln43_1_fu_1486_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln45_1_fu_1496_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_58_fu_1509_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln225_6_fu_1525_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln225_5_fu_1535_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_5_fu_1538_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_5_fu_1543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_17_fu_1549_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_fu_1566_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln194_5_fu_1591_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln234_5_fu_1587_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_11_fu_1595_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_18_fu_1606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln38_6_fu_1677_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln41_2_fu_1722_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln43_2_fu_1752_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln45_2_fu_1762_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_60_fu_1772_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln225_7_fu_1788_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln225_6_fu_1808_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_6_fu_1811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_6_fu_1817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_19_fu_1823_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_6_fu_1841_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln194_6_fu_1866_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln234_6_fu_1862_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_13_fu_1870_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_19_fu_1881_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (73 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component KeccakWidth1600_Spon_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        instance_squeezing_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_we0 : OUT STD_LOGIC;
        data_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_offset : IN STD_LOGIC_VECTOR (7 downto 0);
        data_offset1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakWidth1600_Spon_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        instance_byteIOIndex_read : IN STD_LOGIC_VECTOR (31 downto 0);
        instance_squeezing_read : IN STD_LOGIC_VECTOR (31 downto 0);
        data_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_0_ce0 : OUT STD_LOGIC;
        data_0_we0 : OUT STD_LOGIC;
        data_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component HashUpdateIntLE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctx_sponge_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_ce0 : OUT STD_LOGIC;
        ctx_sponge_state_we0 : OUT STD_LOGIC;
        ctx_sponge_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ctx_sponge_byteIOInd : IN STD_LOGIC_VECTOR (31 downto 0);
        x : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component KeccakP1600OnWords IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce1 : OUT STD_LOGIC;
        state_we1 : OUT STD_LOGIC;
        state_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fromWordsToBytes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        stateAsWords_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        stateAsWords_ce0 : OUT STD_LOGIC;
        stateAsWords_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fromBytesToWords IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stateAsWords_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        stateAsWords_ce0 : OUT STD_LOGIC;
        stateAsWords_we0 : OUT STD_LOGIC;
        stateAsWords_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        stateAsWords_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component pi_tempA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component computeSeeds_2_temp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component computeSeeds_2_ctvdy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    stateAsWords_11_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_11_address0,
        ce0 => stateAsWords_11_ce0,
        we0 => stateAsWords_11_we0,
        d0 => stateAsWords_11_d0,
        q0 => stateAsWords_11_q0,
        address1 => grp_KeccakP1600OnWords_fu_818_state_address1,
        ce1 => stateAsWords_11_ce1,
        we1 => stateAsWords_11_we1,
        d1 => grp_KeccakP1600OnWords_fu_818_state_d1,
        q1 => stateAsWords_11_q1);

    stateAsWords_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_address0,
        ce0 => stateAsWords_ce0,
        we0 => stateAsWords_we0,
        d0 => stateAsWords_d0,
        q0 => stateAsWords_q0,
        address1 => grp_KeccakP1600OnWords_fu_818_state_address1,
        ce1 => stateAsWords_ce1,
        we1 => stateAsWords_we1,
        d1 => grp_KeccakP1600OnWords_fu_818_state_d1,
        q1 => stateAsWords_q1);

    temp_U : component computeSeeds_2_temp
    generic map (
        DataWidth => 8,
        AddressRange => 75,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => temp_d0,
        address1 => temp_address1,
        ce1 => temp_ce1,
        we1 => temp_we1,
        d1 => temp_d1,
        q1 => temp_q1);

    stateAsWords_10_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_10_address0,
        ce0 => stateAsWords_10_ce0,
        we0 => stateAsWords_10_we0,
        d0 => stateAsWords_10_d0,
        q0 => stateAsWords_10_q0,
        address1 => grp_KeccakP1600OnWords_fu_818_state_address1,
        ce1 => stateAsWords_10_ce1,
        we1 => stateAsWords_10_we1,
        d1 => grp_KeccakP1600OnWords_fu_818_state_d1,
        q1 => stateAsWords_10_q1);

    temp_1_U : component computeSeeds_2_temp
    generic map (
        DataWidth => 8,
        AddressRange => 75,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_1_address0,
        ce0 => temp_1_ce0,
        we0 => temp_1_we0,
        d0 => temp_1_d0,
        address1 => temp_1_address1,
        ce1 => temp_1_ce1,
        we1 => temp_1_we1,
        d1 => temp_1_d1,
        q1 => temp_1_q1);

    stateAsWords_12_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_12_address0,
        ce0 => stateAsWords_12_ce0,
        we0 => stateAsWords_12_we0,
        d0 => stateAsWords_12_d0,
        q0 => stateAsWords_12_q0,
        address1 => grp_KeccakP1600OnWords_fu_818_state_address1,
        ce1 => stateAsWords_12_ce1,
        we1 => stateAsWords_12_we1,
        d1 => grp_KeccakP1600OnWords_fu_818_state_d1,
        q1 => stateAsWords_12_q1);

    temp_2_U : component computeSeeds_2_temp
    generic map (
        DataWidth => 8,
        AddressRange => 75,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_2_address0,
        ce0 => temp_2_ce0,
        we0 => temp_2_we0,
        d0 => temp_2_d0,
        address1 => temp_2_address1,
        ce1 => temp_2_ce1,
        we1 => temp_2_we1,
        d1 => temp_2_d1,
        q1 => temp_2_q1);

    stateAsWords_9_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_9_address0,
        ce0 => stateAsWords_9_ce0,
        we0 => stateAsWords_9_we0,
        d0 => stateAsWords_9_d0,
        q0 => stateAsWords_9_q0,
        address1 => grp_KeccakP1600OnWords_fu_818_state_address1,
        ce1 => stateAsWords_9_ce1,
        we1 => stateAsWords_9_we1,
        d1 => grp_KeccakP1600OnWords_fu_818_state_d1,
        q1 => stateAsWords_9_q1);

    stateAsWords_8_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_8_address0,
        ce0 => stateAsWords_8_ce0,
        we0 => stateAsWords_8_we0,
        d0 => stateAsWords_8_d0,
        q0 => stateAsWords_8_q0,
        address1 => grp_KeccakP1600OnWords_fu_818_state_address1,
        ce1 => stateAsWords_8_ce1,
        we1 => stateAsWords_8_we1,
        d1 => grp_KeccakP1600OnWords_fu_818_state_d1,
        q1 => stateAsWords_8_q1);

    ctx_sponge_state_U : component computeSeeds_2_ctvdy
    generic map (
        DataWidth => 8,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ctx_sponge_state_address0,
        ce0 => ctx_sponge_state_ce0,
        we0 => ctx_sponge_state_we0,
        d0 => ctx_sponge_state_d0,
        q0 => ctx_sponge_state_q0,
        address1 => ctx_sponge_state_address1,
        ce1 => ctx_sponge_state_ce1,
        we1 => ctx_sponge_state_we1,
        d1 => ctx_sponge_state_d1,
        q1 => ctx_sponge_state_q1);

    grp_KeccakWidth1600_Spon_2_fu_776 : component KeccakWidth1600_Spon_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_2_fu_776_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_2_fu_776_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_2_fu_776_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_2_fu_776_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_2_fu_776_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_2_fu_776_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_2_fu_776_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_2_fu_776_instance_state_d0,
        instance_state_q0 => ctx_sponge_state_q0,
        instance_byteIOIndex_read => reg_886,
        instance_squeezing_read => reg_880,
        data_address0 => grp_KeccakWidth1600_Spon_2_fu_776_data_address0,
        data_ce0 => grp_KeccakWidth1600_Spon_2_fu_776_data_ce0,
        data_we0 => grp_KeccakWidth1600_Spon_2_fu_776_data_we0,
        data_d0 => grp_KeccakWidth1600_Spon_2_fu_776_data_d0,
        data_offset => loop_0_reg_752,
        data_offset1 => loop2_0_reg_764,
        ap_return_0 => grp_KeccakWidth1600_Spon_2_fu_776_ap_return_0,
        ap_return_1 => grp_KeccakWidth1600_Spon_2_fu_776_ap_return_1);

    grp_KeccakWidth1600_Spon_3_fu_793 : component KeccakWidth1600_Spon_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_3_fu_793_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_3_fu_793_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_3_fu_793_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_3_fu_793_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_3_fu_793_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_3_fu_793_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_3_fu_793_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_3_fu_793_instance_state_d0,
        instance_state_q0 => ctx_sponge_state_q0,
        instance_byteIOIndex_read => reg_886,
        instance_squeezing_read => reg_880,
        data_0_address0 => grp_KeccakWidth1600_Spon_3_fu_793_data_0_address0,
        data_0_ce0 => grp_KeccakWidth1600_Spon_3_fu_793_data_0_ce0,
        data_0_we0 => grp_KeccakWidth1600_Spon_3_fu_793_data_0_we0,
        data_0_d0 => grp_KeccakWidth1600_Spon_3_fu_793_data_0_d0);

    grp_HashUpdateIntLE_fu_806 : component HashUpdateIntLE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HashUpdateIntLE_fu_806_ap_start,
        ap_done => grp_HashUpdateIntLE_fu_806_ap_done,
        ap_idle => grp_HashUpdateIntLE_fu_806_ap_idle,
        ap_ready => grp_HashUpdateIntLE_fu_806_ap_ready,
        ctx_sponge_state_address0 => grp_HashUpdateIntLE_fu_806_ctx_sponge_state_address0,
        ctx_sponge_state_ce0 => grp_HashUpdateIntLE_fu_806_ctx_sponge_state_ce0,
        ctx_sponge_state_we0 => grp_HashUpdateIntLE_fu_806_ctx_sponge_state_we0,
        ctx_sponge_state_d0 => grp_HashUpdateIntLE_fu_806_ctx_sponge_state_d0,
        ctx_sponge_state_q0 => ctx_sponge_state_q0,
        ctx_sponge_byteIOInd => ctx_sponge_byteIOInd_45_reg_2421,
        x => ap_const_lv9_80,
        ap_return => grp_HashUpdateIntLE_fu_806_ap_return);

    grp_KeccakP1600OnWords_fu_818 : component KeccakP1600OnWords
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakP1600OnWords_fu_818_ap_start,
        ap_done => grp_KeccakP1600OnWords_fu_818_ap_done,
        ap_idle => grp_KeccakP1600OnWords_fu_818_ap_idle,
        ap_ready => grp_KeccakP1600OnWords_fu_818_ap_ready,
        state_address0 => grp_KeccakP1600OnWords_fu_818_state_address0,
        state_ce0 => grp_KeccakP1600OnWords_fu_818_state_ce0,
        state_we0 => grp_KeccakP1600OnWords_fu_818_state_we0,
        state_d0 => grp_KeccakP1600OnWords_fu_818_state_d0,
        state_q0 => grp_KeccakP1600OnWords_fu_818_state_q0,
        state_address1 => grp_KeccakP1600OnWords_fu_818_state_address1,
        state_ce1 => grp_KeccakP1600OnWords_fu_818_state_ce1,
        state_we1 => grp_KeccakP1600OnWords_fu_818_state_we1,
        state_d1 => grp_KeccakP1600OnWords_fu_818_state_d1,
        state_q1 => grp_KeccakP1600OnWords_fu_818_state_q1);

    grp_fromWordsToBytes_fu_827 : component fromWordsToBytes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fromWordsToBytes_fu_827_ap_start,
        ap_done => grp_fromWordsToBytes_fu_827_ap_done,
        ap_idle => grp_fromWordsToBytes_fu_827_ap_idle,
        ap_ready => grp_fromWordsToBytes_fu_827_ap_ready,
        state_address0 => grp_fromWordsToBytes_fu_827_state_address0,
        state_ce0 => grp_fromWordsToBytes_fu_827_state_ce0,
        state_we0 => grp_fromWordsToBytes_fu_827_state_we0,
        state_d0 => grp_fromWordsToBytes_fu_827_state_d0,
        stateAsWords_address0 => grp_fromWordsToBytes_fu_827_stateAsWords_address0,
        stateAsWords_ce0 => grp_fromWordsToBytes_fu_827_stateAsWords_ce0,
        stateAsWords_q0 => grp_fromWordsToBytes_fu_827_stateAsWords_q0);

    grp_fromBytesToWords_fu_833 : component fromBytesToWords
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fromBytesToWords_fu_833_ap_start,
        ap_done => grp_fromBytesToWords_fu_833_ap_done,
        ap_idle => grp_fromBytesToWords_fu_833_ap_idle,
        ap_ready => grp_fromBytesToWords_fu_833_ap_ready,
        stateAsWords_address0 => grp_fromBytesToWords_fu_833_stateAsWords_address0,
        stateAsWords_ce0 => grp_fromBytesToWords_fu_833_stateAsWords_ce0,
        stateAsWords_we0 => grp_fromBytesToWords_fu_833_stateAsWords_we0,
        stateAsWords_d0 => grp_fromBytesToWords_fu_833_stateAsWords_d0,
        stateAsWords_q0 => grp_fromBytesToWords_fu_833_stateAsWords_q0,
        state_address0 => grp_fromBytesToWords_fu_833_state_address0,
        state_ce0 => grp_fromBytesToWords_fu_833_state_ce0,
        state_q0 => ctx_sponge_state_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln206_fu_1213_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state18))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state18);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln206_fu_1213_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HashUpdateIntLE_fu_806_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HashUpdateIntLE_fu_806_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (icmp_ln194_6_fu_1782_p2 = ap_const_lv1_0))) then 
                    grp_HashUpdateIntLE_fu_806_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HashUpdateIntLE_fu_806_ap_ready = ap_const_logic_1)) then 
                    grp_HashUpdateIntLE_fu_806_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakP1600OnWords_fu_818_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakP1600OnWords_fu_818_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    grp_KeccakP1600OnWords_fu_818_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakP1600OnWords_fu_818_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakP1600OnWords_fu_818_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_2_fu_776_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_2_fu_776_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state73) and (icmp_ln1624_fu_1956_p2 = ap_const_lv1_0))) then 
                    grp_KeccakWidth1600_Spon_2_fu_776_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_2_fu_776_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_2_fu_776_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_3_fu_793_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_3_fu_793_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (icmp_ln1623_fu_1944_p2 = ap_const_lv1_1))) then 
                    grp_KeccakWidth1600_Spon_3_fu_793_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_3_fu_793_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_3_fu_793_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fromBytesToWords_fu_833_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fromBytesToWords_fu_833_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln239_6_fu_1897_p2 = ap_const_lv1_1) and (icmp_ln233_6_fu_1851_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln239_5_fu_1620_p2 = ap_const_lv1_1) and (icmp_ln233_5_fu_1576_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln239_4_fu_1354_p2 = ap_const_lv1_1) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln239_fu_1152_p2 = ap_const_lv1_1) and (icmp_ln233_fu_1108_p2 = ap_const_lv1_1)))) then 
                    grp_fromBytesToWords_fu_833_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fromBytesToWords_fu_833_ap_ready = ap_const_logic_1)) then 
                    grp_fromBytesToWords_fu_833_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fromWordsToBytes_fu_827_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fromWordsToBytes_fu_827_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    grp_fromWordsToBytes_fu_827_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fromWordsToBytes_fu_827_ap_ready = ap_const_logic_1)) then 
                    grp_fromWordsToBytes_fu_827_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ctx_sponge_byteIOInd_33_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln239_4_fu_1354_p2 = ap_const_lv1_0) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_33_fu_204 <= ctx_sponge_byteIOInd_35_fu_1350_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln239_4_fu_1354_p2 = ap_const_lv1_1) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln206_fu_1213_p2 = ap_const_lv1_1)))) then 
                ctx_sponge_byteIOInd_33_fu_204 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln194_fu_1042_p2 = ap_const_lv1_0))) then 
                ctx_sponge_byteIOInd_33_fu_204 <= ctx_sponge_byteIOInd_fu_196;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_36_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln239_5_fu_1620_p2 = ap_const_lv1_1) and (icmp_ln233_5_fu_1576_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_36_fu_208 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln239_5_fu_1620_p2 = ap_const_lv1_0) and (icmp_ln233_5_fu_1576_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_36_fu_208 <= ctx_sponge_byteIOInd_38_fu_1616_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_57_fu_1403_p3 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_36_fu_208 <= ctx_sponge_byteIOInd_34_reg_2129;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_39_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln239_6_fu_1897_p2 = ap_const_lv1_1) and (icmp_ln233_6_fu_1851_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_39_fu_212 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln239_6_fu_1897_p2 = ap_const_lv1_0) and (icmp_ln233_6_fu_1851_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_39_fu_212 <= ctx_sponge_byteIOInd_43_fu_1892_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state49) and (tmp_59_fu_1669_p3 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_39_fu_212 <= ctx_sponge_byteIOInd_37_reg_2287;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_44_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_KeccakWidth1600_Spon_2_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
                ctx_sponge_byteIOInd_44_fu_220 <= grp_KeccakWidth1600_Spon_2_fu_776_ap_return_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (icmp_ln194_6_fu_1782_p2 = ap_const_lv1_0))) then 
                ctx_sponge_byteIOInd_44_fu_220 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln239_fu_1152_p2 = ap_const_lv1_0) and (icmp_ln233_fu_1108_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_fu_196 <= ctx_sponge_byteIOInd_32_fu_1148_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln239_fu_1152_p2 = ap_const_lv1_1) and (icmp_ln233_fu_1108_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_fu_930_p3 = ap_const_lv1_1)))) then 
                ctx_sponge_byteIOInd_fu_196 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ctx_sponge_squeezing_1_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_KeccakWidth1600_Spon_2_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
                ctx_sponge_squeezing_1_fu_216 <= grp_KeccakWidth1600_Spon_2_fu_776_ap_return_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (icmp_ln194_6_fu_1782_p2 = ap_const_lv1_0))) then 
                ctx_sponge_squeezing_1_fu_216 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    i_0_i_i_i47_reg_660_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state47_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                i_0_i_i_i47_reg_660 <= i_17_reg_2315;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_57_fu_1403_p3 = ap_const_lv1_1))) then 
                i_0_i_i_i47_reg_660 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i6_reg_717_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state60_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                i_0_i_i_i6_reg_717 <= i_18_reg_2437;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state49) and (tmp_59_fu_1669_p3 = ap_const_lv1_1))) then 
                i_0_i_i_i6_reg_717 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i89_reg_545_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                i_0_i_i_i89_reg_545 <= add_ln231_reg_2097;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_fu_930_p3 = ap_const_lv1_1))) then 
                i_0_i_i_i89_reg_545 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_15_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_1))) then 
                i_15_fu_200 <= i_reg_2205;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i_15_fu_200 <= j_8_fu_1266_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln206_fu_1213_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln195_1_fu_1199_p2 = ap_const_lv1_0) and (icmp_ln195_fu_1187_p2 = ap_const_lv1_1) and (icmp_ln194_3_fu_1178_p2 = ap_const_lv1_1)))) then 
                i_15_fu_200 <= grp_fu_847_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln194_fu_1042_p2 = ap_const_lv1_0))) then 
                i_15_fu_200 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    loop2_0_reg_764_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state72) and (icmp_ln1623_fu_1944_p2 = ap_const_lv1_0))) then 
                loop2_0_reg_764 <= ap_const_lv2_0;
            elsif (((grp_KeccakWidth1600_Spon_2_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
                loop2_0_reg_764 <= loop2_reg_2493;
            end if; 
        end if;
    end process;

    loop_0_i1_reg_512_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln139_fu_892_p2 = ap_const_lv1_0))) then 
                loop_0_i1_reg_512 <= loop_33_fu_898_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                loop_0_i1_reg_512 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    loop_0_i38_reg_649_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln34_1_fu_1393_p2 = ap_const_lv1_1))) then 
                loop_0_i38_reg_649 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                loop_0_i38_reg_649 <= loop_36_reg_2264;
            end if; 
        end if;
    end process;

    loop_0_i80_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln34_fu_920_p2 = ap_const_lv1_1))) then 
                loop_0_i80_reg_534 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                loop_0_i80_reg_534 <= loop_reg_2028;
            end if; 
        end if;
    end process;

    loop_0_i_reg_706_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln34_2_fu_1659_p2 = ap_const_lv1_1))) then 
                loop_0_i_reg_706 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                loop_0_i_reg_706 <= loop_39_reg_2376;
            end if; 
        end if;
    end process;

    loop_0_reg_752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state73) and (icmp_ln1624_fu_1956_p2 = ap_const_lv1_1))) then 
                loop_0_reg_752 <= loop_40_reg_2485;
            elsif (((grp_fromWordsToBytes_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                loop_0_reg_752 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i106_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                loop_1_i_i_i106_reg_569 <= loop_34_reg_2105;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                loop_1_i_i_i106_reg_569 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i23_reg_741_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                loop_1_i_i_i23_reg_741 <= loop_41_reg_2445;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                loop_1_i_i_i23_reg_741 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i64_reg_684_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                loop_1_i_i_i64_reg_684 <= loop_38_reg_2323;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                loop_1_i_i_i64_reg_684 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i_reg_615_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                loop_1_i_i_i_reg_615 <= loop_35_reg_2213;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                loop_1_i_i_i_reg_615 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    offset_assign_12_reg_604_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln206_fu_1213_p2 = ap_const_lv1_0))) then 
                offset_assign_12_reg_604 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln211_fu_1223_p2 = ap_const_lv1_0))) then 
                offset_assign_12_reg_604 <= loop_37_fu_1229_p2;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i48_reg_672_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state47_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                p_01_rec_i_i_i48_reg_672 <= p_2_rec_i_i_i71_fu_1643_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_57_fu_1403_p3 = ap_const_lv1_1))) then 
                p_01_rec_i_i_i48_reg_672 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i7_reg_729_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state60_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                p_01_rec_i_i_i7_reg_729 <= p_2_rec_i_i_i30_fu_1920_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state49) and (tmp_59_fu_1669_p3 = ap_const_lv1_1))) then 
                p_01_rec_i_i_i7_reg_729 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i90_reg_557_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_01_rec_i_i_i90_reg_557 <= p_2_rec_i_i_i113_fu_1170_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_fu_930_p3 = ap_const_lv1_1))) then 
                p_01_rec_i_i_i90_reg_557 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i_reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                p_01_rec_i_i_i_reg_580 <= p_2_rec_i_i_i_fu_1376_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln194_fu_1042_p2 = ap_const_lv1_0))) then 
                p_01_rec_i_i_i_reg_580 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_1_rec_i_i_i_reg_592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fromWordsToBytes_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                p_1_rec_i_i_i_reg_592 <= add_ln216_fu_1277_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln195_1_fu_1199_p2 = ap_const_lv1_0) and (icmp_ln195_fu_1187_p2 = ap_const_lv1_1) and (icmp_ln194_3_fu_1178_p2 = ap_const_lv1_1))) then 
                p_1_rec_i_i_i_reg_592 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_1_rec_pn_i_i_i_reg_626_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln239_4_fu_1354_p2 = ap_const_lv1_0) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_1)) or ((grp_fromWordsToBytes_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
                p_1_rec_pn_i_i_i_reg_626 <= zext_ln231_3_reg_2199;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln206_fu_1213_p2 = ap_const_lv1_1))) then 
                p_1_rec_pn_i_i_i_reg_626 <= p_1_rec_i_i_i_reg_592;
            end if; 
        end if;
    end process;

    phi_ln34_1_reg_638_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln34_1_fu_1393_p2 = ap_const_lv1_0))) then 
                phi_ln34_1_reg_638 <= add_ln34_1_fu_1382_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln194_3_fu_1178_p2 = ap_const_lv1_0))) then 
                phi_ln34_1_reg_638 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    phi_ln34_2_reg_695_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln34_2_fu_1659_p2 = ap_const_lv1_0))) then 
                phi_ln34_2_reg_695 <= add_ln34_2_fu_1648_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln194_5_fu_1519_p2 = ap_const_lv1_0))) then 
                phi_ln34_2_reg_695 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    phi_ln34_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln34_fu_920_p2 = ap_const_lv1_0))) then 
                phi_ln34_reg_523 <= add_ln34_fu_909_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln139_fu_892_p2 = ap_const_lv1_1))) then 
                phi_ln34_reg_523 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln231_reg_2097 <= add_ln231_fu_1102_p2;
                select_ln226_reg_2090 <= select_ln226_fu_1094_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                ctx_sponge_byteIOInd_31_reg_2050 <= ctx_sponge_byteIOInd_fu_196;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                ctx_sponge_byteIOInd_34_reg_2129 <= ctx_sponge_byteIOInd_33_fu_204;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                ctx_sponge_byteIOInd_37_reg_2287 <= ctx_sponge_byteIOInd_36_fu_208;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (icmp_ln194_6_fu_1782_p2 = ap_const_lv1_0))) then
                ctx_sponge_byteIOInd_45_reg_2421 <= ctx_sponge_byteIOInd_39_fu_212;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln233_fu_1108_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_17_reg_2115 <= zext_ln149_fu_1143_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln211_fu_1223_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_18_reg_2182 <= zext_ln212_fu_1235_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_19_reg_2223 <= zext_ln149_8_fu_1345_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln233_5_fu_1576_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_20_reg_2333 <= zext_ln149_9_fu_1611_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln233_6_fu_1851_p2 = ap_const_lv1_0))) then
                ctx_sponge_state_add_21_reg_2455 <= zext_ln149_11_fu_1887_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_HashUpdateIntLE_fu_806_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state61))) then
                ctx_sponge_state_add_22_reg_2470 <= zext_ln149_10_fu_1925_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                i_17_reg_2315 <= i_17_fu_1570_p2;
                select_ln226_8_reg_2304 <= select_ln226_8_fu_1554_p3;
                    zext_ln231_4_reg_2310(31 downto 0) <= zext_ln231_4_fu_1562_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                i_18_reg_2437 <= i_18_fu_1845_p2;
                select_ln226_9_reg_2426 <= select_ln226_9_fu_1829_p3;
                    zext_ln231_5_reg_2432(31 downto 0) <= zext_ln231_5_fu_1837_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                i_reg_2205 <= i_fu_1309_p2;
                select_ln226_7_reg_2193 <= select_ln226_7_fu_1298_p3;
                    zext_ln231_3_reg_2199(31 downto 0) <= zext_ln231_3_fu_1305_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln211_reg_2168 <= icmp_ln211_fu_1223_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln233_5_fu_1576_p2 = ap_const_lv1_1))) then
                icmp_ln239_5_reg_2339 <= icmp_ln239_5_fu_1620_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln233_6_fu_1851_p2 = ap_const_lv1_1))) then
                icmp_ln239_6_reg_2461 <= icmp_ln239_6_fu_1897_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln233_fu_1108_p2 = ap_const_lv1_1))) then
                icmp_ln239_reg_2120 <= icmp_ln239_fu_1152_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                loop2_reg_2493 <= loop2_fu_1962_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                loop_34_reg_2105 <= loop_34_fu_1113_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                loop_35_reg_2213 <= loop_35_fu_1320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_57_fu_1403_p3 = ap_const_lv1_0))) then
                loop_36_reg_2264 <= loop_36_fu_1430_p2;
                trunc_ln37_1_reg_2257 <= trunc_ln37_1_fu_1426_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                loop_38_reg_2323 <= loop_38_fu_1581_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) and (tmp_59_fu_1669_p3 = ap_const_lv1_0))) then
                loop_39_reg_2376 <= loop_39_fu_1696_p2;
                trunc_ln37_2_reg_2369 <= trunc_ln37_2_fu_1692_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                loop_40_reg_2485 <= loop_40_fu_1950_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                loop_41_reg_2445 <= loop_41_fu_1856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_fu_930_p3 = ap_const_lv1_0))) then
                loop_reg_2028 <= loop_fu_957_p2;
                trunc_ln37_reg_2021 <= trunc_ln37_fu_953_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (((icmp_ln195_fu_1187_p2 = ap_const_lv1_0) and (icmp_ln194_3_fu_1178_p2 = ap_const_lv1_1)) or ((icmp_ln195_1_fu_1199_p2 = ap_const_lv1_1) and (icmp_ln194_3_fu_1178_p2 = ap_const_lv1_1))))) then
                partialBlock_14_reg_2153 <= partialBlock_14_fu_1209_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln194_5_fu_1519_p2 = ap_const_lv1_1))) then
                partialBlock_16_reg_2299 <= partialBlock_16_fu_1529_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (icmp_ln194_6_fu_1782_p2 = ap_const_lv1_1))) then
                partialBlock_18_reg_2402 <= partialBlock_18_fu_1792_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln194_fu_1042_p2 = ap_const_lv1_1))) then
                partialBlock_reg_2061 <= partialBlock_fu_1052_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_876 <= i_15_fu_200;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state73) and (icmp_ln1624_fu_1956_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state72) and (icmp_ln1623_fu_1944_p2 = ap_const_lv1_1)))) then
                reg_880 <= ctx_sponge_squeezing_1_fu_216;
                reg_886 <= ctx_sponge_byteIOInd_44_fu_220;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln194_3_fu_1178_p2 = ap_const_lv1_1))) then
                trunc_ln194_4_reg_2141 <= trunc_ln194_4_fu_1183_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln206_fu_1213_p2 = ap_const_lv1_0))) then
                trunc_ln206_reg_2163 <= trunc_ln206_fu_1219_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                trunc_ln3_reg_2040 <= privateKey_q0(23 downto 16);
                trunc_ln4_reg_2045 <= privateKey_q0(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                trunc_ln43_1_reg_2277 <= publicKey_q0(23 downto 16);
                trunc_ln45_1_reg_2282 <= publicKey_q0(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                trunc_ln43_2_reg_2389 <= plaintext_q0(23 downto 16);
                trunc_ln45_2_reg_2394 <= plaintext_q0(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                    zext_ln37_1_reg_2244(4 downto 0) <= zext_ln37_1_fu_1399_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                    zext_ln37_2_reg_2356(4 downto 0) <= zext_ln37_2_fu_1665_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    zext_ln37_reg_2008(4 downto 0) <= zext_ln37_fu_926_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln194_fu_1042_p2 = ap_const_lv1_0))) then
                    zext_ln41_1_reg_2083(60 downto 0) <= zext_ln41_1_fu_1061_p1(60 downto 0);
            end if;
        end if;
    end process;
    zext_ln37_reg_2008(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln41_1_reg_2083(63 downto 61) <= "000";
    zext_ln231_3_reg_2199(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln37_1_reg_2244(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln231_4_reg_2310(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln37_2_reg_2356(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln231_5_reg_2432(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state72, icmp_ln1623_fu_1944_p2, ap_CS_fsm_state73, icmp_ln1624_fu_1956_p2, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, tmp_fu_930_p3, ap_CS_fsm_state7, icmp_ln194_fu_1042_p2, ap_CS_fsm_state9, icmp_ln233_fu_1108_p2, icmp_ln239_fu_1152_p2, ap_CS_fsm_state15, grp_fromWordsToBytes_fu_827_ap_done, ap_block_state15_on_subcall_done, icmp_ln194_3_fu_1178_p2, icmp_ln195_1_fu_1199_p2, icmp_ln195_fu_1187_p2, icmp_ln206_fu_1213_p2, icmp_ln211_fu_1223_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state25, ap_CS_fsm_state27, icmp_ln233_4_fu_1315_p2, ap_CS_fsm_state35, ap_CS_fsm_state36, tmp_57_fu_1403_p3, ap_CS_fsm_state39, icmp_ln194_5_fu_1519_p2, ap_CS_fsm_state41, icmp_ln233_5_fu_1576_p2, icmp_ln239_5_fu_1620_p2, ap_CS_fsm_state47, ap_block_state47_on_subcall_done, ap_CS_fsm_state48, ap_CS_fsm_state49, tmp_59_fu_1669_p3, ap_CS_fsm_state52, icmp_ln194_6_fu_1782_p2, ap_CS_fsm_state54, icmp_ln233_6_fu_1851_p2, icmp_ln239_6_fu_1897_p2, ap_CS_fsm_state60, ap_block_state60_on_subcall_done, ap_CS_fsm_state61, grp_HashUpdateIntLE_fu_806_ap_done, ap_block_pp0_stage0_subdone, grp_KeccakWidth1600_Spon_2_fu_776_ap_done, grp_KeccakWidth1600_Spon_3_fu_793_ap_done, grp_KeccakP1600OnWords_fu_818_ap_done, grp_fromBytesToWords_fu_833_ap_done, icmp_ln139_fu_892_p2, icmp_ln34_fu_920_p2, ap_CS_fsm_state33, icmp_ln239_4_fu_1354_p2, icmp_ln34_1_fu_1393_p2, icmp_ln34_2_fu_1659_p2, ap_CS_fsm_state71, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state31, ap_CS_fsm_state45, ap_CS_fsm_state58, ap_CS_fsm_state69, ap_CS_fsm_state11, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state67)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln139_fu_892_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln34_fu_920_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_fu_930_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln194_fu_1042_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln239_fu_1152_p2 = ap_const_lv1_0) and (icmp_ln233_fu_1108_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln239_fu_1152_p2 = ap_const_lv1_1) and (icmp_ln233_fu_1108_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state11 => 
                if (((grp_fromBytesToWords_fu_833_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_KeccakP1600OnWords_fu_818_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln194_3_fu_1178_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln195_1_fu_1199_p2 = ap_const_lv1_0) and (icmp_ln195_fu_1187_p2 = ap_const_lv1_1) and (icmp_ln194_3_fu_1178_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln206_fu_1213_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln211_fu_1223_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln211_fu_1223_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_fromBytesToWords_fu_833_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_KeccakP1600OnWords_fu_818_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((grp_fromWordsToBytes_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln239_4_fu_1354_p2 = ap_const_lv1_0) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln239_4_fu_1354_p2 = ap_const_lv1_1) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state29 => 
                if (((grp_fromBytesToWords_fu_833_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((grp_KeccakP1600OnWords_fu_818_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((grp_fromWordsToBytes_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state35 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln34_1_fu_1393_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state36) and (tmp_57_fu_1403_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state39 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln194_5_fu_1519_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln239_5_fu_1620_p2 = ap_const_lv1_0) and (icmp_ln233_5_fu_1576_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln239_5_fu_1620_p2 = ap_const_lv1_1) and (icmp_ln233_5_fu_1576_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state43 => 
                if (((grp_fromBytesToWords_fu_833_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                if (((grp_KeccakP1600OnWords_fu_818_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                if (((ap_const_boolean_0 = ap_block_state47_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state48 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln34_2_fu_1659_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (tmp_59_fu_1669_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (icmp_ln194_6_fu_1782_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln239_6_fu_1897_p2 = ap_const_lv1_0) and (icmp_ln233_6_fu_1851_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln239_6_fu_1897_p2 = ap_const_lv1_1) and (icmp_ln233_6_fu_1851_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state56 => 
                if (((grp_fromBytesToWords_fu_833_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((grp_KeccakP1600OnWords_fu_818_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((ap_const_boolean_0 = ap_block_state60_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                if (((grp_HashUpdateIntLE_fu_806_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state61))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                if (((grp_fromBytesToWords_fu_833_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state67))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                if (((grp_KeccakP1600OnWords_fu_818_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                if (((grp_fromWordsToBytes_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state72 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (icmp_ln1623_fu_1944_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state73 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state73) and (icmp_ln1624_fu_1956_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state74 => 
                if (((grp_KeccakWidth1600_Spon_2_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state75 => 
                if (((grp_KeccakWidth1600_Spon_3_fu_793_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln195_fu_1193_p2 <= std_logic_vector(unsigned(i_15_fu_200) + unsigned(ap_const_lv64_A8));
    add_ln212_1_fu_1249_p2 <= std_logic_vector(unsigned(add_ln212_fu_1244_p2) + unsigned(trunc_ln206_reg_2163));
    add_ln212_fu_1244_p2 <= std_logic_vector(unsigned(trunc_ln194_4_reg_2141) + unsigned(zext_ln212_1_fu_1240_p1));
    add_ln216_fu_1277_p2 <= std_logic_vector(unsigned(p_1_rec_i_i_i_reg_592) + unsigned(ap_const_lv64_A8));
    add_ln226_4_fu_1283_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_34_reg_2129) + unsigned(partialBlock_14_reg_2153));
    add_ln226_5_fu_1538_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_37_reg_2287) + unsigned(zext_ln225_5_fu_1535_p1));
    add_ln226_6_fu_1811_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_39_fu_212) + unsigned(zext_ln225_6_fu_1808_p1));
    add_ln226_fu_1078_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_31_reg_2050) + unsigned(zext_ln225_fu_1075_p1));
    add_ln231_fu_1102_p2 <= std_logic_vector(unsigned(select_ln226_fu_1094_p3) + unsigned(i_0_i_i_i89_reg_545));
    add_ln234_10_fu_1330_p2 <= std_logic_vector(unsigned(trunc_ln194_4_reg_2141) + unsigned(trunc_ln234_4_fu_1326_p1));
    add_ln234_11_fu_1595_p2 <= std_logic_vector(unsigned(trunc_ln194_5_fu_1591_p1) + unsigned(trunc_ln234_5_fu_1587_p1));
    add_ln234_13_fu_1870_p2 <= std_logic_vector(unsigned(trunc_ln194_6_fu_1866_p1) + unsigned(trunc_ln234_6_fu_1862_p1));
    add_ln234_16_fu_1138_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_31_reg_2050) + unsigned(loop_1_i_i_i106_reg_569));
    add_ln234_17_fu_1340_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_34_reg_2129) + unsigned(loop_1_i_i_i_reg_615));
    add_ln234_18_fu_1606_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_37_reg_2287) + unsigned(loop_1_i_i_i64_reg_684));
    add_ln234_19_fu_1881_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_39_fu_212) + unsigned(loop_1_i_i_i23_reg_741));
    add_ln234_fu_1127_p2 <= std_logic_vector(unsigned(trunc_ln194_fu_1123_p1) + unsigned(trunc_ln234_fu_1119_p1));
    add_ln34_1_fu_1382_p2 <= std_logic_vector(unsigned(phi_ln34_1_reg_638) + unsigned(ap_const_lv7_1));
    add_ln34_2_fu_1648_p2 <= std_logic_vector(unsigned(phi_ln34_2_reg_695) + unsigned(ap_const_lv7_1));
    add_ln34_fu_909_p2 <= std_logic_vector(unsigned(phi_ln34_reg_523) + unsigned(ap_const_lv7_1));
    allSeeds_seed_address0 <= grp_KeccakWidth1600_Spon_2_fu_776_data_address0;
    allSeeds_seed_ce0 <= grp_KeccakWidth1600_Spon_2_fu_776_data_ce0;
    allSeeds_seed_d0 <= grp_KeccakWidth1600_Spon_2_fu_776_data_d0;
    allSeeds_seed_we0 <= grp_KeccakWidth1600_Spon_2_fu_776_data_we0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(18);
    ap_CS_fsm_state21 <= ap_CS_fsm(19);
    ap_CS_fsm_state22 <= ap_CS_fsm(20);
    ap_CS_fsm_state23 <= ap_CS_fsm(21);
    ap_CS_fsm_state24 <= ap_CS_fsm(22);
    ap_CS_fsm_state25 <= ap_CS_fsm(23);
    ap_CS_fsm_state26 <= ap_CS_fsm(24);
    ap_CS_fsm_state27 <= ap_CS_fsm(25);
    ap_CS_fsm_state28 <= ap_CS_fsm(26);
    ap_CS_fsm_state29 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(28);
    ap_CS_fsm_state31 <= ap_CS_fsm(29);
    ap_CS_fsm_state32 <= ap_CS_fsm(30);
    ap_CS_fsm_state33 <= ap_CS_fsm(31);
    ap_CS_fsm_state34 <= ap_CS_fsm(32);
    ap_CS_fsm_state35 <= ap_CS_fsm(33);
    ap_CS_fsm_state36 <= ap_CS_fsm(34);
    ap_CS_fsm_state37 <= ap_CS_fsm(35);
    ap_CS_fsm_state38 <= ap_CS_fsm(36);
    ap_CS_fsm_state39 <= ap_CS_fsm(37);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(38);
    ap_CS_fsm_state41 <= ap_CS_fsm(39);
    ap_CS_fsm_state42 <= ap_CS_fsm(40);
    ap_CS_fsm_state43 <= ap_CS_fsm(41);
    ap_CS_fsm_state44 <= ap_CS_fsm(42);
    ap_CS_fsm_state45 <= ap_CS_fsm(43);
    ap_CS_fsm_state46 <= ap_CS_fsm(44);
    ap_CS_fsm_state47 <= ap_CS_fsm(45);
    ap_CS_fsm_state48 <= ap_CS_fsm(46);
    ap_CS_fsm_state49 <= ap_CS_fsm(47);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(48);
    ap_CS_fsm_state51 <= ap_CS_fsm(49);
    ap_CS_fsm_state52 <= ap_CS_fsm(50);
    ap_CS_fsm_state53 <= ap_CS_fsm(51);
    ap_CS_fsm_state54 <= ap_CS_fsm(52);
    ap_CS_fsm_state55 <= ap_CS_fsm(53);
    ap_CS_fsm_state56 <= ap_CS_fsm(54);
    ap_CS_fsm_state57 <= ap_CS_fsm(55);
    ap_CS_fsm_state58 <= ap_CS_fsm(56);
    ap_CS_fsm_state59 <= ap_CS_fsm(57);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(58);
    ap_CS_fsm_state61 <= ap_CS_fsm(59);
    ap_CS_fsm_state62 <= ap_CS_fsm(60);
    ap_CS_fsm_state63 <= ap_CS_fsm(61);
    ap_CS_fsm_state64 <= ap_CS_fsm(62);
    ap_CS_fsm_state65 <= ap_CS_fsm(63);
    ap_CS_fsm_state66 <= ap_CS_fsm(64);
    ap_CS_fsm_state67 <= ap_CS_fsm(65);
    ap_CS_fsm_state68 <= ap_CS_fsm(66);
    ap_CS_fsm_state69 <= ap_CS_fsm(67);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(68);
    ap_CS_fsm_state71 <= ap_CS_fsm(69);
    ap_CS_fsm_state72 <= ap_CS_fsm(70);
    ap_CS_fsm_state73 <= ap_CS_fsm(71);
    ap_CS_fsm_state74 <= ap_CS_fsm(72);
    ap_CS_fsm_state75 <= ap_CS_fsm(73);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_on_subcall_done_assign_proc : process(icmp_ln239_reg_2120, grp_fromWordsToBytes_fu_827_ap_done)
    begin
                ap_block_state15_on_subcall_done <= ((grp_fromWordsToBytes_fu_827_ap_done = ap_const_logic_0) and (icmp_ln239_reg_2120 = ap_const_lv1_1));
    end process;

        ap_block_state18_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state47_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_827_ap_done, icmp_ln239_5_reg_2339)
    begin
                ap_block_state47_on_subcall_done <= ((grp_fromWordsToBytes_fu_827_ap_done = ap_const_logic_0) and (icmp_ln239_5_reg_2339 = ap_const_lv1_1));
    end process;


    ap_block_state60_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_827_ap_done, icmp_ln239_6_reg_2461)
    begin
                ap_block_state60_on_subcall_done <= ((grp_fromWordsToBytes_fu_827_ap_done = ap_const_logic_0) and (icmp_ln239_6_reg_2461 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state18_assign_proc : process(icmp_ln211_fu_1223_p2)
    begin
        if ((icmp_ln211_fu_1223_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_KeccakWidth1600_Spon_3_fu_793_ap_done, ap_CS_fsm_state75)
    begin
        if ((((grp_KeccakWidth1600_Spon_3_fu_793_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_KeccakWidth1600_Spon_3_fu_793_ap_done, ap_CS_fsm_state75)
    begin
        if (((grp_KeccakWidth1600_Spon_3_fu_793_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ctx_sponge_byteIOInd_32_fu_1148_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_31_reg_2050) + unsigned(select_ln226_reg_2090));
    ctx_sponge_byteIOInd_35_fu_1350_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_34_reg_2129) + unsigned(select_ln226_7_reg_2193));
    ctx_sponge_byteIOInd_38_fu_1616_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_37_reg_2287) + unsigned(select_ln226_8_reg_2304));
    ctx_sponge_byteIOInd_43_fu_1892_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_39_fu_212) + unsigned(select_ln226_9_reg_2426));

    ctx_sponge_state_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, icmp_ln233_fu_1108_p2, ctx_sponge_state_add_17_reg_2115, icmp_ln239_reg_2120, ap_CS_fsm_state15, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state25, ctx_sponge_state_add_20_reg_2333, icmp_ln239_5_reg_2339, ap_CS_fsm_state47, ctx_sponge_state_add_21_reg_2455, icmp_ln239_6_reg_2461, ap_CS_fsm_state60, ctx_sponge_state_add_22_reg_2470, ap_CS_fsm_state61, grp_KeccakWidth1600_Spon_2_fu_776_instance_state_address0, grp_KeccakWidth1600_Spon_3_fu_793_instance_state_address0, grp_HashUpdateIntLE_fu_806_ctx_sponge_state_address0, grp_fromWordsToBytes_fu_827_state_address0, grp_fromBytesToWords_fu_833_state_address0, ap_CS_fsm_state10, ap_CS_fsm_state33, ap_CS_fsm_state42, ap_CS_fsm_state55, ap_CS_fsm_state71, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state11, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state67, zext_ln140_fu_904_p1, zext_ln149_fu_1143_p1, ap_block_pp0_stage0, zext_ln212_fu_1235_p1, ap_CS_fsm_state63, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ctx_sponge_state_address0 <= ap_const_lv64_A7(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_22_reg_2470;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_21_reg_2455;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_20_reg_2333;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ctx_sponge_state_address0 <= zext_ln212_fu_1235_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_17_reg_2115;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln233_fu_1108_p2 = ap_const_lv1_0))) then 
            ctx_sponge_state_address0 <= zext_ln149_fu_1143_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ctx_sponge_state_address0 <= zext_ln140_fu_904_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ctx_sponge_state_address0 <= grp_fromBytesToWords_fu_833_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (icmp_ln239_6_reg_2461 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (icmp_ln239_5_reg_2339 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln239_reg_2120 = ap_const_lv1_1)))) then 
            ctx_sponge_state_address0 <= grp_fromWordsToBytes_fu_827_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ctx_sponge_state_address0 <= grp_HashUpdateIntLE_fu_806_ctx_sponge_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_3_fu_793_instance_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_2_fu_776_instance_state_address0;
        else 
            ctx_sponge_state_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ctx_sponge_state_add_18_reg_2182, ap_CS_fsm_state27, icmp_ln233_4_fu_1315_p2, ctx_sponge_state_add_19_reg_2223, ap_CS_fsm_state41, icmp_ln233_5_fu_1576_p2, ap_CS_fsm_state54, icmp_ln233_6_fu_1851_p2, ctx_sponge_state_add_22_reg_2470, ap_CS_fsm_state64, ap_enable_reg_pp0_iter1, ap_CS_fsm_state28, ap_block_pp0_stage0, zext_ln149_8_fu_1345_p1, zext_ln149_9_fu_1611_p1, zext_ln149_11_fu_1887_p1, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ctx_sponge_state_address1 <= ap_const_lv64_A7(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            ctx_sponge_state_address1 <= ctx_sponge_state_add_22_reg_2470;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln233_6_fu_1851_p2 = ap_const_lv1_0))) then 
            ctx_sponge_state_address1 <= zext_ln149_11_fu_1887_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln233_5_fu_1576_p2 = ap_const_lv1_0))) then 
            ctx_sponge_state_address1 <= zext_ln149_9_fu_1611_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            ctx_sponge_state_address1 <= ctx_sponge_state_add_19_reg_2223;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_0))) then 
            ctx_sponge_state_address1 <= zext_ln149_8_fu_1345_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ctx_sponge_state_address1 <= ctx_sponge_state_add_18_reg_2182;
        else 
            ctx_sponge_state_address1 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, icmp_ln233_fu_1108_p2, icmp_ln239_reg_2120, ap_CS_fsm_state15, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state25, icmp_ln239_5_reg_2339, ap_CS_fsm_state47, icmp_ln239_6_reg_2461, ap_CS_fsm_state60, ap_CS_fsm_state61, grp_KeccakWidth1600_Spon_2_fu_776_instance_state_ce0, grp_KeccakWidth1600_Spon_3_fu_793_instance_state_ce0, grp_HashUpdateIntLE_fu_806_ctx_sponge_state_ce0, grp_fromWordsToBytes_fu_827_state_ce0, grp_fromBytesToWords_fu_833_state_ce0, ap_CS_fsm_state10, ap_CS_fsm_state33, ap_CS_fsm_state42, ap_CS_fsm_state55, ap_CS_fsm_state71, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state11, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state67, ap_CS_fsm_state63, ap_CS_fsm_state65)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state63) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln233_fu_1108_p2 = ap_const_lv1_0)))) then 
            ctx_sponge_state_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ctx_sponge_state_ce0 <= grp_fromBytesToWords_fu_833_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (icmp_ln239_6_reg_2461 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (icmp_ln239_5_reg_2339 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln239_reg_2120 = ap_const_lv1_1)))) then 
            ctx_sponge_state_ce0 <= grp_fromWordsToBytes_fu_827_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ctx_sponge_state_ce0 <= grp_HashUpdateIntLE_fu_806_ctx_sponge_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_3_fu_793_instance_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_2_fu_776_instance_state_ce0;
        else 
            ctx_sponge_state_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state27, icmp_ln233_4_fu_1315_p2, ap_CS_fsm_state41, icmp_ln233_5_fu_1576_p2, ap_CS_fsm_state54, icmp_ln233_6_fu_1851_p2, ap_CS_fsm_state64, ap_enable_reg_pp0_iter1, ap_CS_fsm_state28, ap_CS_fsm_state62)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state62) or ((ap_const_logic_1 = ap_CS_fsm_state54) and (icmp_ln233_6_fu_1851_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln233_5_fu_1576_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln233_4_fu_1315_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ctx_sponge_state_ce1 <= ap_const_logic_1;
        else 
            ctx_sponge_state_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_d0_assign_proc : process(ap_CS_fsm_state2, icmp_ln239_reg_2120, ap_CS_fsm_state15, ap_CS_fsm_state25, icmp_ln239_5_reg_2339, ap_CS_fsm_state47, icmp_ln239_6_reg_2461, ap_CS_fsm_state60, ap_CS_fsm_state61, grp_KeccakWidth1600_Spon_2_fu_776_instance_state_d0, grp_KeccakWidth1600_Spon_3_fu_793_instance_state_d0, grp_HashUpdateIntLE_fu_806_ctx_sponge_state_d0, grp_fromWordsToBytes_fu_827_state_d0, ap_CS_fsm_state10, ap_CS_fsm_state33, ap_CS_fsm_state42, ap_CS_fsm_state55, ap_CS_fsm_state71, ap_CS_fsm_state74, ap_CS_fsm_state75, xor_ln149_fu_1163_p2, xor_ln149_12_fu_1636_p2, xor_ln149_15_fu_1913_p2, ap_CS_fsm_state63, xor_ln149_13_fu_1930_p2, ap_CS_fsm_state65, xor_ln149_14_fu_1937_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ctx_sponge_state_d0 <= xor_ln149_14_fu_1937_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ctx_sponge_state_d0 <= xor_ln149_13_fu_1930_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ctx_sponge_state_d0 <= xor_ln149_15_fu_1913_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ctx_sponge_state_d0 <= xor_ln149_12_fu_1636_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ctx_sponge_state_d0 <= xor_ln149_fu_1163_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ctx_sponge_state_d0 <= ap_const_lv8_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (icmp_ln239_6_reg_2461 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (icmp_ln239_5_reg_2339 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln239_reg_2120 = ap_const_lv1_1)))) then 
            ctx_sponge_state_d0 <= grp_fromWordsToBytes_fu_827_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ctx_sponge_state_d0 <= grp_HashUpdateIntLE_fu_806_ctx_sponge_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_3_fu_793_instance_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_2_fu_776_instance_state_d0;
        else 
            ctx_sponge_state_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state28, ap_block_pp0_stage0, xor_ln149_11_fu_1259_p2, xor_ln149_10_fu_1369_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            ctx_sponge_state_d1 <= xor_ln149_10_fu_1369_p2;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ctx_sponge_state_d1 <= xor_ln149_11_fu_1259_p2;
        else 
            ctx_sponge_state_d1 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln239_reg_2120, ap_CS_fsm_state15, ap_CS_fsm_state25, icmp_ln239_5_reg_2339, ap_CS_fsm_state47, icmp_ln239_6_reg_2461, ap_CS_fsm_state60, ap_CS_fsm_state61, grp_KeccakWidth1600_Spon_2_fu_776_instance_state_we0, grp_KeccakWidth1600_Spon_3_fu_793_instance_state_we0, grp_HashUpdateIntLE_fu_806_ctx_sponge_state_we0, grp_fromWordsToBytes_fu_827_state_we0, icmp_ln139_fu_892_p2, ap_CS_fsm_state10, ap_CS_fsm_state33, ap_CS_fsm_state42, ap_CS_fsm_state55, ap_CS_fsm_state71, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state63, ap_CS_fsm_state65)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state63) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln139_fu_892_p2 = ap_const_lv1_0)))) then 
            ctx_sponge_state_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (icmp_ln239_6_reg_2461 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (icmp_ln239_5_reg_2339 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln239_reg_2120 = ap_const_lv1_1)))) then 
            ctx_sponge_state_we0 <= grp_fromWordsToBytes_fu_827_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            ctx_sponge_state_we0 <= grp_HashUpdateIntLE_fu_806_ctx_sponge_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_3_fu_793_instance_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_2_fu_776_instance_state_we0;
        else 
            ctx_sponge_state_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_we1_assign_proc : process(icmp_ln211_reg_2168, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln211_reg_2168 = ap_const_lv1_0)))) then 
            ctx_sponge_state_we1 <= ap_const_logic_1;
        else 
            ctx_sponge_state_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_HashUpdateIntLE_fu_806_ap_start <= grp_HashUpdateIntLE_fu_806_ap_start_reg;
    grp_KeccakP1600OnWords_fu_818_ap_start <= grp_KeccakP1600OnWords_fu_818_ap_start_reg;

    grp_KeccakP1600OnWords_fu_818_state_q0_assign_proc : process(stateAsWords_11_q0, stateAsWords_q0, stateAsWords_10_q0, stateAsWords_12_q0, stateAsWords_9_q0, stateAsWords_8_q0, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state31, ap_CS_fsm_state45, ap_CS_fsm_state58, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_KeccakP1600OnWords_fu_818_state_q0 <= stateAsWords_11_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_KeccakP1600OnWords_fu_818_state_q0 <= stateAsWords_12_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_KeccakP1600OnWords_fu_818_state_q0 <= stateAsWords_10_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_KeccakP1600OnWords_fu_818_state_q0 <= stateAsWords_8_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_KeccakP1600OnWords_fu_818_state_q0 <= stateAsWords_9_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_KeccakP1600OnWords_fu_818_state_q0 <= stateAsWords_q0;
        else 
            grp_KeccakP1600OnWords_fu_818_state_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_KeccakP1600OnWords_fu_818_state_q1_assign_proc : process(stateAsWords_11_q1, stateAsWords_q1, stateAsWords_10_q1, stateAsWords_12_q1, stateAsWords_9_q1, stateAsWords_8_q1, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state31, ap_CS_fsm_state45, ap_CS_fsm_state58, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_KeccakP1600OnWords_fu_818_state_q1 <= stateAsWords_11_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_KeccakP1600OnWords_fu_818_state_q1 <= stateAsWords_12_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_KeccakP1600OnWords_fu_818_state_q1 <= stateAsWords_10_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_KeccakP1600OnWords_fu_818_state_q1 <= stateAsWords_8_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_KeccakP1600OnWords_fu_818_state_q1 <= stateAsWords_9_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_KeccakP1600OnWords_fu_818_state_q1 <= stateAsWords_q1;
        else 
            grp_KeccakP1600OnWords_fu_818_state_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_2_fu_776_ap_start <= grp_KeccakWidth1600_Spon_2_fu_776_ap_start_reg;
    grp_KeccakWidth1600_Spon_3_fu_793_ap_start <= grp_KeccakWidth1600_Spon_3_fu_793_ap_start_reg;
    grp_fromBytesToWords_fu_833_ap_start <= grp_fromBytesToWords_fu_833_ap_start_reg;

    grp_fromBytesToWords_fu_833_stateAsWords_q0_assign_proc : process(stateAsWords_11_q0, stateAsWords_q0, stateAsWords_10_q0, stateAsWords_12_q0, stateAsWords_9_q0, stateAsWords_8_q0, ap_CS_fsm_state11, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fromBytesToWords_fu_833_stateAsWords_q0 <= stateAsWords_11_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fromBytesToWords_fu_833_stateAsWords_q0 <= stateAsWords_12_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fromBytesToWords_fu_833_stateAsWords_q0 <= stateAsWords_10_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fromBytesToWords_fu_833_stateAsWords_q0 <= stateAsWords_8_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fromBytesToWords_fu_833_stateAsWords_q0 <= stateAsWords_9_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fromBytesToWords_fu_833_stateAsWords_q0 <= stateAsWords_q0;
        else 
            grp_fromBytesToWords_fu_833_stateAsWords_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fromWordsToBytes_fu_827_ap_start <= grp_fromWordsToBytes_fu_827_ap_start_reg;

    grp_fromWordsToBytes_fu_827_stateAsWords_q0_assign_proc : process(icmp_ln239_reg_2120, ap_CS_fsm_state15, ap_CS_fsm_state25, icmp_ln239_5_reg_2339, ap_CS_fsm_state47, icmp_ln239_6_reg_2461, ap_CS_fsm_state60, stateAsWords_11_q0, stateAsWords_q0, stateAsWords_10_q0, stateAsWords_12_q0, stateAsWords_9_q0, stateAsWords_8_q0, ap_CS_fsm_state33, ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fromWordsToBytes_fu_827_stateAsWords_q0 <= stateAsWords_11_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) and (icmp_ln239_6_reg_2461 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_827_stateAsWords_q0 <= stateAsWords_12_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state47) and (icmp_ln239_5_reg_2339 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_827_stateAsWords_q0 <= stateAsWords_10_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fromWordsToBytes_fu_827_stateAsWords_q0 <= stateAsWords_8_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fromWordsToBytes_fu_827_stateAsWords_q0 <= stateAsWords_9_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln239_reg_2120 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_827_stateAsWords_q0 <= stateAsWords_q0;
        else 
            grp_fromWordsToBytes_fu_827_stateAsWords_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_847_p2 <= std_logic_vector(unsigned(zext_ln41_1_reg_2083) - unsigned(i_15_fu_200));
    i_17_fu_1570_p2 <= std_logic_vector(unsigned(zext_ln231_fu_1566_p1) + unsigned(i_0_i_i_i47_reg_660));
    i_18_fu_1845_p2 <= std_logic_vector(unsigned(zext_ln231_6_fu_1841_p1) + unsigned(i_0_i_i_i6_reg_717));
    i_fu_1309_p2 <= std_logic_vector(unsigned(reg_876) + unsigned(zext_ln231_3_fu_1305_p1));
    icmp_ln139_fu_892_p2 <= "1" when (loop_0_i1_reg_512 = ap_const_lv8_C8) else "0";
    icmp_ln1623_fu_1944_p2 <= "1" when (loop_0_reg_752 = ap_const_lv8_DB) else "0";
    icmp_ln1624_fu_1956_p2 <= "1" when (loop2_0_reg_764 = ap_const_lv2_3) else "0";
    icmp_ln194_3_fu_1178_p2 <= "1" when (unsigned(i_15_fu_200) < unsigned(zext_ln41_1_reg_2083)) else "0";
    icmp_ln194_5_fu_1519_p2 <= "1" when (tmp_58_fu_1509_p4 = ap_const_lv29_0) else "0";
    icmp_ln194_6_fu_1782_p2 <= "1" when (tmp_60_fu_1772_p4 = ap_const_lv29_0) else "0";
    icmp_ln194_fu_1042_p2 <= "1" when (tmp_56_fu_1032_p4 = ap_const_lv28_0) else "0";
    icmp_ln195_1_fu_1199_p2 <= "1" when (unsigned(add_ln195_fu_1193_p2) > unsigned(zext_ln41_1_reg_2083)) else "0";
    icmp_ln195_fu_1187_p2 <= "1" when (ctx_sponge_byteIOInd_33_fu_204 = ap_const_lv32_0) else "0";
    icmp_ln206_fu_1213_p2 <= "1" when (unsigned(i_15_fu_200) < unsigned(ap_const_lv64_A8)) else "0";
    icmp_ln211_fu_1223_p2 <= "1" when (offset_assign_12_reg_604 = ap_const_lv8_A8) else "0";
    icmp_ln226_4_fu_1287_p2 <= "1" when (unsigned(add_ln226_4_fu_1283_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_5_fu_1543_p2 <= "1" when (unsigned(add_ln226_5_fu_1538_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_6_fu_1817_p2 <= "1" when (unsigned(add_ln226_6_fu_1811_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_fu_1083_p2 <= "1" when (unsigned(add_ln226_fu_1078_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln233_4_fu_1315_p2 <= "1" when (loop_1_i_i_i_reg_615 = select_ln226_7_reg_2193) else "0";
    icmp_ln233_5_fu_1576_p2 <= "1" when (loop_1_i_i_i64_reg_684 = select_ln226_8_reg_2304) else "0";
    icmp_ln233_6_fu_1851_p2 <= "1" when (loop_1_i_i_i23_reg_741 = select_ln226_9_reg_2426) else "0";
    icmp_ln233_fu_1108_p2 <= "1" when (loop_1_i_i_i106_reg_569 = select_ln226_reg_2090) else "0";
    icmp_ln239_4_fu_1354_p2 <= "1" when (ctx_sponge_byteIOInd_35_fu_1350_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_5_fu_1620_p2 <= "1" when (ctx_sponge_byteIOInd_38_fu_1616_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_6_fu_1897_p2 <= "1" when (ctx_sponge_byteIOInd_43_fu_1892_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_fu_1152_p2 <= "1" when (ctx_sponge_byteIOInd_32_fu_1148_p2 = ap_const_lv32_A8) else "0";
    icmp_ln34_1_fu_1393_p2 <= "1" when (phi_ln34_1_reg_638 = ap_const_lv7_4A) else "0";
    icmp_ln34_2_fu_1659_p2 <= "1" when (phi_ln34_2_reg_695 = ap_const_lv7_4A) else "0";
    icmp_ln34_fu_920_p2 <= "1" when (phi_ln34_reg_523 = ap_const_lv7_4A) else "0";
    j_8_fu_1266_p2 <= std_logic_vector(unsigned(reg_876) + unsigned(ap_const_lv64_FFFFFFFFFFFFFF58));
    loop2_fu_1962_p2 <= std_logic_vector(unsigned(loop2_0_reg_764) + unsigned(ap_const_lv2_1));
    loop_33_fu_898_p2 <= std_logic_vector(unsigned(loop_0_i1_reg_512) + unsigned(ap_const_lv8_1));
    loop_34_fu_1113_p2 <= std_logic_vector(unsigned(loop_1_i_i_i106_reg_569) + unsigned(ap_const_lv32_1));
    loop_35_fu_1320_p2 <= std_logic_vector(unsigned(loop_1_i_i_i_reg_615) + unsigned(ap_const_lv32_1));
    loop_36_fu_1430_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(loop_0_i38_reg_649));
    loop_37_fu_1229_p2 <= std_logic_vector(unsigned(offset_assign_12_reg_604) + unsigned(ap_const_lv8_1));
    loop_38_fu_1581_p2 <= std_logic_vector(unsigned(loop_1_i_i_i64_reg_684) + unsigned(ap_const_lv32_1));
    loop_39_fu_1696_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(loop_0_i_reg_706));
    loop_40_fu_1950_p2 <= std_logic_vector(unsigned(loop_0_reg_752) + unsigned(ap_const_lv8_1));
    loop_41_fu_1856_p2 <= std_logic_vector(unsigned(loop_1_i_i_i23_reg_741) + unsigned(ap_const_lv32_1));
    loop_fu_957_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(loop_0_i80_reg_534));

    message_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state27, zext_ln212_2_fu_1254_p1, ap_block_pp0_stage0, zext_ln234_6_fu_1335_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            message_address0 <= zext_ln234_6_fu_1335_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            message_address0 <= zext_ln212_2_fu_1254_p1(12 - 1 downto 0);
        else 
            message_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    message_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            message_ce0 <= ap_const_logic_1;
        else 
            message_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln41_1_fu_1456_p2 <= (trunc_ln37_1_reg_2257 or ap_const_lv4_1);
    or_ln41_2_fu_1722_p2 <= (trunc_ln37_2_reg_2369 or ap_const_lv4_1);
    or_ln41_fu_979_p2 <= (trunc_ln37_reg_2021 or ap_const_lv4_1);
    or_ln43_1_fu_1486_p2 <= (trunc_ln37_1_reg_2257 or ap_const_lv4_2);
    or_ln43_2_fu_1752_p2 <= (trunc_ln37_2_reg_2369 or ap_const_lv4_2);
    or_ln43_fu_1009_p2 <= (trunc_ln37_reg_2021 or ap_const_lv4_2);
    or_ln45_1_fu_1496_p2 <= (trunc_ln37_1_reg_2257 or ap_const_lv4_3);
    or_ln45_2_fu_1762_p2 <= (trunc_ln37_2_reg_2369 or ap_const_lv4_3);
    or_ln45_fu_1019_p2 <= (trunc_ln37_reg_2021 or ap_const_lv4_3);
    p_2_rec_i_i_i113_fu_1170_p2 <= std_logic_vector(unsigned(select_ln226_reg_2090) + unsigned(p_01_rec_i_i_i90_reg_557));
    p_2_rec_i_i_i30_fu_1920_p2 <= std_logic_vector(unsigned(zext_ln231_5_reg_2432) + unsigned(p_01_rec_i_i_i7_reg_729));
    p_2_rec_i_i_i71_fu_1643_p2 <= std_logic_vector(unsigned(zext_ln231_4_reg_2310) + unsigned(p_01_rec_i_i_i48_reg_672));
    p_2_rec_i_i_i_fu_1376_p2 <= std_logic_vector(unsigned(p_1_rec_pn_i_i_i_reg_626) + unsigned(p_01_rec_i_i_i_reg_580));
    partialBlock_13_fu_1089_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_31_reg_2050));
    partialBlock_14_fu_1209_p1 <= sub_ln225_fu_1204_p2(32 - 1 downto 0);
    partialBlock_15_fu_1293_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_34_reg_2129));
    partialBlock_16_fu_1529_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln225_6_fu_1525_p1));
    partialBlock_17_fu_1549_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_37_reg_2287));
    partialBlock_18_fu_1792_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln225_7_fu_1788_p1));
    partialBlock_19_fu_1823_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_39_fu_212));
    partialBlock_fu_1052_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln225_fu_1048_p1));
    plaintext_address0 <= zext_ln38_2_fu_1687_p1(3 - 1 downto 0);

    plaintext_ce0_assign_proc : process(ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            plaintext_ce0 <= ap_const_logic_1;
        else 
            plaintext_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    privateKey_address0 <= zext_ln38_fu_948_p1(3 - 1 downto 0);

    privateKey_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            privateKey_ce0 <= ap_const_logic_1;
        else 
            privateKey_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    publicKey_address0 <= zext_ln38_1_fu_1421_p1(3 - 1 downto 0);

    publicKey_ce0_assign_proc : process(ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            publicKey_ce0 <= ap_const_logic_1;
        else 
            publicKey_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    salt_0_address0 <= grp_KeccakWidth1600_Spon_3_fu_793_data_0_address0;
    salt_0_ce0 <= grp_KeccakWidth1600_Spon_3_fu_793_data_0_ce0;
    salt_0_d0 <= grp_KeccakWidth1600_Spon_3_fu_793_data_0_d0;
    salt_0_we0 <= grp_KeccakWidth1600_Spon_3_fu_793_data_0_we0;
    select_ln226_7_fu_1298_p3 <= 
        partialBlock_15_fu_1293_p2 when (icmp_ln226_4_fu_1287_p2(0) = '1') else 
        partialBlock_14_reg_2153;
    select_ln226_8_fu_1554_p3 <= 
        partialBlock_17_fu_1549_p2 when (icmp_ln226_5_fu_1543_p2(0) = '1') else 
        zext_ln225_5_fu_1535_p1;
    select_ln226_9_fu_1829_p3 <= 
        partialBlock_19_fu_1823_p2 when (icmp_ln226_6_fu_1817_p2(0) = '1') else 
        zext_ln225_6_fu_1808_p1;
    select_ln226_fu_1094_p3 <= 
        partialBlock_13_fu_1089_p2 when (icmp_ln226_fu_1083_p2(0) = '1') else 
        zext_ln225_fu_1075_p1;

    stateAsWords_10_address0_assign_proc : process(icmp_ln239_5_reg_2339, ap_CS_fsm_state47, grp_KeccakP1600OnWords_fu_818_state_address0, grp_fromWordsToBytes_fu_827_stateAsWords_address0, grp_fromBytesToWords_fu_833_stateAsWords_address0, ap_CS_fsm_state45, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            stateAsWords_10_address0 <= grp_fromBytesToWords_fu_833_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state47) and (icmp_ln239_5_reg_2339 = ap_const_lv1_1))) then 
            stateAsWords_10_address0 <= grp_fromWordsToBytes_fu_827_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_10_address0 <= grp_KeccakP1600OnWords_fu_818_state_address0;
        else 
            stateAsWords_10_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_10_ce0_assign_proc : process(icmp_ln239_5_reg_2339, ap_CS_fsm_state47, grp_KeccakP1600OnWords_fu_818_state_ce0, grp_fromWordsToBytes_fu_827_stateAsWords_ce0, grp_fromBytesToWords_fu_833_stateAsWords_ce0, ap_CS_fsm_state45, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            stateAsWords_10_ce0 <= grp_fromBytesToWords_fu_833_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state47) and (icmp_ln239_5_reg_2339 = ap_const_lv1_1))) then 
            stateAsWords_10_ce0 <= grp_fromWordsToBytes_fu_827_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_10_ce0 <= grp_KeccakP1600OnWords_fu_818_state_ce0;
        else 
            stateAsWords_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_10_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_ce1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_10_ce1 <= grp_KeccakP1600OnWords_fu_818_state_ce1;
        else 
            stateAsWords_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_10_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_d0, grp_fromBytesToWords_fu_833_stateAsWords_d0, ap_CS_fsm_state45, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            stateAsWords_10_d0 <= grp_fromBytesToWords_fu_833_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_10_d0 <= grp_KeccakP1600OnWords_fu_818_state_d0;
        else 
            stateAsWords_10_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_10_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we0, grp_fromBytesToWords_fu_833_stateAsWords_we0, ap_CS_fsm_state45, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            stateAsWords_10_we0 <= grp_fromBytesToWords_fu_833_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_10_we0 <= grp_KeccakP1600OnWords_fu_818_state_we0;
        else 
            stateAsWords_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_10_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            stateAsWords_10_we1 <= grp_KeccakP1600OnWords_fu_818_state_we1;
        else 
            stateAsWords_10_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_11_address0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_address0, grp_fromWordsToBytes_fu_827_stateAsWords_address0, grp_fromBytesToWords_fu_833_stateAsWords_address0, ap_CS_fsm_state71, ap_CS_fsm_state69, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            stateAsWords_11_address0 <= grp_fromBytesToWords_fu_833_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            stateAsWords_11_address0 <= grp_fromWordsToBytes_fu_827_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            stateAsWords_11_address0 <= grp_KeccakP1600OnWords_fu_818_state_address0;
        else 
            stateAsWords_11_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_11_ce0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_ce0, grp_fromWordsToBytes_fu_827_stateAsWords_ce0, grp_fromBytesToWords_fu_833_stateAsWords_ce0, ap_CS_fsm_state71, ap_CS_fsm_state69, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            stateAsWords_11_ce0 <= grp_fromBytesToWords_fu_833_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            stateAsWords_11_ce0 <= grp_fromWordsToBytes_fu_827_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            stateAsWords_11_ce0 <= grp_KeccakP1600OnWords_fu_818_state_ce0;
        else 
            stateAsWords_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_11_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_ce1, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            stateAsWords_11_ce1 <= grp_KeccakP1600OnWords_fu_818_state_ce1;
        else 
            stateAsWords_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_11_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_d0, grp_fromBytesToWords_fu_833_stateAsWords_d0, ap_CS_fsm_state69, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            stateAsWords_11_d0 <= grp_fromBytesToWords_fu_833_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            stateAsWords_11_d0 <= grp_KeccakP1600OnWords_fu_818_state_d0;
        else 
            stateAsWords_11_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_11_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we0, grp_fromBytesToWords_fu_833_stateAsWords_we0, ap_CS_fsm_state69, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            stateAsWords_11_we0 <= grp_fromBytesToWords_fu_833_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            stateAsWords_11_we0 <= grp_KeccakP1600OnWords_fu_818_state_we0;
        else 
            stateAsWords_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_11_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we1, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            stateAsWords_11_we1 <= grp_KeccakP1600OnWords_fu_818_state_we1;
        else 
            stateAsWords_11_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_12_address0_assign_proc : process(icmp_ln239_6_reg_2461, ap_CS_fsm_state60, grp_KeccakP1600OnWords_fu_818_state_address0, grp_fromWordsToBytes_fu_827_stateAsWords_address0, grp_fromBytesToWords_fu_833_stateAsWords_address0, ap_CS_fsm_state58, ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            stateAsWords_12_address0 <= grp_fromBytesToWords_fu_833_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) and (icmp_ln239_6_reg_2461 = ap_const_lv1_1))) then 
            stateAsWords_12_address0 <= grp_fromWordsToBytes_fu_827_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            stateAsWords_12_address0 <= grp_KeccakP1600OnWords_fu_818_state_address0;
        else 
            stateAsWords_12_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_12_ce0_assign_proc : process(icmp_ln239_6_reg_2461, ap_CS_fsm_state60, grp_KeccakP1600OnWords_fu_818_state_ce0, grp_fromWordsToBytes_fu_827_stateAsWords_ce0, grp_fromBytesToWords_fu_833_stateAsWords_ce0, ap_CS_fsm_state58, ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            stateAsWords_12_ce0 <= grp_fromBytesToWords_fu_833_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state60) and (icmp_ln239_6_reg_2461 = ap_const_lv1_1))) then 
            stateAsWords_12_ce0 <= grp_fromWordsToBytes_fu_827_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            stateAsWords_12_ce0 <= grp_KeccakP1600OnWords_fu_818_state_ce0;
        else 
            stateAsWords_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_12_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_ce1, ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            stateAsWords_12_ce1 <= grp_KeccakP1600OnWords_fu_818_state_ce1;
        else 
            stateAsWords_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_12_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_d0, grp_fromBytesToWords_fu_833_stateAsWords_d0, ap_CS_fsm_state58, ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            stateAsWords_12_d0 <= grp_fromBytesToWords_fu_833_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            stateAsWords_12_d0 <= grp_KeccakP1600OnWords_fu_818_state_d0;
        else 
            stateAsWords_12_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_12_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we0, grp_fromBytesToWords_fu_833_stateAsWords_we0, ap_CS_fsm_state58, ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            stateAsWords_12_we0 <= grp_fromBytesToWords_fu_833_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            stateAsWords_12_we0 <= grp_KeccakP1600OnWords_fu_818_state_we0;
        else 
            stateAsWords_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_12_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we1, ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            stateAsWords_12_we1 <= grp_KeccakP1600OnWords_fu_818_state_we1;
        else 
            stateAsWords_12_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_8_address0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_address0, grp_fromWordsToBytes_fu_827_stateAsWords_address0, grp_fromBytesToWords_fu_833_stateAsWords_address0, ap_CS_fsm_state33, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            stateAsWords_8_address0 <= grp_fromBytesToWords_fu_833_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            stateAsWords_8_address0 <= grp_fromWordsToBytes_fu_827_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            stateAsWords_8_address0 <= grp_KeccakP1600OnWords_fu_818_state_address0;
        else 
            stateAsWords_8_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_8_ce0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_ce0, grp_fromWordsToBytes_fu_827_stateAsWords_ce0, grp_fromBytesToWords_fu_833_stateAsWords_ce0, ap_CS_fsm_state33, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            stateAsWords_8_ce0 <= grp_fromBytesToWords_fu_833_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            stateAsWords_8_ce0 <= grp_fromWordsToBytes_fu_827_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            stateAsWords_8_ce0 <= grp_KeccakP1600OnWords_fu_818_state_ce0;
        else 
            stateAsWords_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_8_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_ce1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            stateAsWords_8_ce1 <= grp_KeccakP1600OnWords_fu_818_state_ce1;
        else 
            stateAsWords_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_8_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_d0, grp_fromBytesToWords_fu_833_stateAsWords_d0, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            stateAsWords_8_d0 <= grp_fromBytesToWords_fu_833_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            stateAsWords_8_d0 <= grp_KeccakP1600OnWords_fu_818_state_d0;
        else 
            stateAsWords_8_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_8_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we0, grp_fromBytesToWords_fu_833_stateAsWords_we0, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            stateAsWords_8_we0 <= grp_fromBytesToWords_fu_833_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            stateAsWords_8_we0 <= grp_KeccakP1600OnWords_fu_818_state_we0;
        else 
            stateAsWords_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_8_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            stateAsWords_8_we1 <= grp_KeccakP1600OnWords_fu_818_state_we1;
        else 
            stateAsWords_8_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_9_address0_assign_proc : process(ap_CS_fsm_state25, grp_KeccakP1600OnWords_fu_818_state_address0, grp_fromWordsToBytes_fu_827_stateAsWords_address0, grp_fromBytesToWords_fu_833_stateAsWords_address0, ap_CS_fsm_state23, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            stateAsWords_9_address0 <= grp_fromBytesToWords_fu_833_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            stateAsWords_9_address0 <= grp_fromWordsToBytes_fu_827_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            stateAsWords_9_address0 <= grp_KeccakP1600OnWords_fu_818_state_address0;
        else 
            stateAsWords_9_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_9_ce0_assign_proc : process(ap_CS_fsm_state25, grp_KeccakP1600OnWords_fu_818_state_ce0, grp_fromWordsToBytes_fu_827_stateAsWords_ce0, grp_fromBytesToWords_fu_833_stateAsWords_ce0, ap_CS_fsm_state23, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            stateAsWords_9_ce0 <= grp_fromBytesToWords_fu_833_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            stateAsWords_9_ce0 <= grp_fromWordsToBytes_fu_827_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            stateAsWords_9_ce0 <= grp_KeccakP1600OnWords_fu_818_state_ce0;
        else 
            stateAsWords_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_9_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_ce1, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            stateAsWords_9_ce1 <= grp_KeccakP1600OnWords_fu_818_state_ce1;
        else 
            stateAsWords_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_9_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_d0, grp_fromBytesToWords_fu_833_stateAsWords_d0, ap_CS_fsm_state23, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            stateAsWords_9_d0 <= grp_fromBytesToWords_fu_833_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            stateAsWords_9_d0 <= grp_KeccakP1600OnWords_fu_818_state_d0;
        else 
            stateAsWords_9_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_9_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we0, grp_fromBytesToWords_fu_833_stateAsWords_we0, ap_CS_fsm_state23, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            stateAsWords_9_we0 <= grp_fromBytesToWords_fu_833_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            stateAsWords_9_we0 <= grp_KeccakP1600OnWords_fu_818_state_we0;
        else 
            stateAsWords_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_9_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we1, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            stateAsWords_9_we1 <= grp_KeccakP1600OnWords_fu_818_state_we1;
        else 
            stateAsWords_9_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_address0_assign_proc : process(icmp_ln239_reg_2120, ap_CS_fsm_state15, grp_KeccakP1600OnWords_fu_818_state_address0, grp_fromWordsToBytes_fu_827_stateAsWords_address0, grp_fromBytesToWords_fu_833_stateAsWords_address0, ap_CS_fsm_state13, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stateAsWords_address0 <= grp_fromBytesToWords_fu_833_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln239_reg_2120 = ap_const_lv1_1))) then 
            stateAsWords_address0 <= grp_fromWordsToBytes_fu_827_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stateAsWords_address0 <= grp_KeccakP1600OnWords_fu_818_state_address0;
        else 
            stateAsWords_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_ce0_assign_proc : process(icmp_ln239_reg_2120, ap_CS_fsm_state15, grp_KeccakP1600OnWords_fu_818_state_ce0, grp_fromWordsToBytes_fu_827_stateAsWords_ce0, grp_fromBytesToWords_fu_833_stateAsWords_ce0, ap_CS_fsm_state13, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stateAsWords_ce0 <= grp_fromBytesToWords_fu_833_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln239_reg_2120 = ap_const_lv1_1))) then 
            stateAsWords_ce0 <= grp_fromWordsToBytes_fu_827_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stateAsWords_ce0 <= grp_KeccakP1600OnWords_fu_818_state_ce0;
        else 
            stateAsWords_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_ce1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stateAsWords_ce1 <= grp_KeccakP1600OnWords_fu_818_state_ce1;
        else 
            stateAsWords_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_d0, grp_fromBytesToWords_fu_833_stateAsWords_d0, ap_CS_fsm_state13, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stateAsWords_d0 <= grp_fromBytesToWords_fu_833_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stateAsWords_d0 <= grp_KeccakP1600OnWords_fu_818_state_d0;
        else 
            stateAsWords_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we0, grp_fromBytesToWords_fu_833_stateAsWords_we0, ap_CS_fsm_state13, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            stateAsWords_we0 <= grp_fromBytesToWords_fu_833_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stateAsWords_we0 <= grp_KeccakP1600OnWords_fu_818_state_we0;
        else 
            stateAsWords_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_818_state_we1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            stateAsWords_we1 <= grp_KeccakP1600OnWords_fu_818_state_we1;
        else 
            stateAsWords_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln225_fu_1204_p2 <= std_logic_vector(unsigned(messageByteLength) - unsigned(i_15_fu_200));

    temp_1_address0_assign_proc : process(ap_CS_fsm_state35, zext_ln37_1_reg_2244, ap_CS_fsm_state37, ap_CS_fsm_state38, zext_ln34_1_fu_1388_p1, zext_ln45_1_fu_1501_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            temp_1_address0 <= zext_ln45_1_fu_1501_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            temp_1_address0 <= zext_ln37_1_reg_2244(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            temp_1_address0 <= zext_ln34_1_fu_1388_p1(7 - 1 downto 0);
        else 
            temp_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    temp_1_address1_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state41, ap_CS_fsm_state38, zext_ln41_2_fu_1461_p1, zext_ln43_1_fu_1491_p1, zext_ln234_7_fu_1601_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            temp_1_address1 <= zext_ln234_7_fu_1601_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            temp_1_address1 <= zext_ln43_1_fu_1491_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            temp_1_address1 <= zext_ln41_2_fu_1461_p1(7 - 1 downto 0);
        else 
            temp_1_address1 <= "XXXXXXX";
        end if; 
    end process;


    temp_1_ce0_assign_proc : process(ap_CS_fsm_state35, ap_CS_fsm_state37, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            temp_1_ce0 <= ap_const_logic_1;
        else 
            temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_1_ce1_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state41, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            temp_1_ce1 <= ap_const_logic_1;
        else 
            temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_1_d0_assign_proc : process(ap_CS_fsm_state35, ap_CS_fsm_state37, trunc_ln45_1_reg_2282, ap_CS_fsm_state38, trunc_ln39_1_fu_1440_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            temp_1_d0 <= trunc_ln45_1_reg_2282;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            temp_1_d0 <= trunc_ln39_1_fu_1440_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            temp_1_d0 <= ap_const_lv8_0;
        else 
            temp_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_1_d1_assign_proc : process(publicKey_q0, trunc_ln43_1_reg_2277, ap_CS_fsm_state37, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            temp_1_d1 <= trunc_ln43_1_reg_2277;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            temp_1_d1 <= publicKey_q0(15 downto 8);
        else 
            temp_1_d1 <= "XXXXXXXX";
        end if; 
    end process;


    temp_1_we0_assign_proc : process(ap_CS_fsm_state35, ap_CS_fsm_state37, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            temp_1_we0 <= ap_const_logic_1;
        else 
            temp_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_1_we1_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            temp_1_we1 <= ap_const_logic_1;
        else 
            temp_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_2_address0_assign_proc : process(ap_CS_fsm_state48, zext_ln37_2_reg_2356, ap_CS_fsm_state50, ap_CS_fsm_state51, zext_ln34_2_fu_1654_p1, zext_ln45_2_fu_1767_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            temp_2_address0 <= zext_ln45_2_fu_1767_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            temp_2_address0 <= zext_ln37_2_reg_2356(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            temp_2_address0 <= zext_ln34_2_fu_1654_p1(7 - 1 downto 0);
        else 
            temp_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    temp_2_address1_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state54, ap_CS_fsm_state51, zext_ln41_3_fu_1727_p1, zext_ln43_2_fu_1757_p1, zext_ln234_8_fu_1876_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            temp_2_address1 <= zext_ln234_8_fu_1876_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            temp_2_address1 <= zext_ln43_2_fu_1757_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            temp_2_address1 <= zext_ln41_3_fu_1727_p1(7 - 1 downto 0);
        else 
            temp_2_address1 <= "XXXXXXX";
        end if; 
    end process;


    temp_2_ce0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            temp_2_ce0 <= ap_const_logic_1;
        else 
            temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_2_ce1_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state54, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            temp_2_ce1 <= ap_const_logic_1;
        else 
            temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_2_d0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state50, trunc_ln45_2_reg_2394, ap_CS_fsm_state51, trunc_ln39_2_fu_1706_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            temp_2_d0 <= trunc_ln45_2_reg_2394;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            temp_2_d0 <= trunc_ln39_2_fu_1706_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            temp_2_d0 <= ap_const_lv8_0;
        else 
            temp_2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_2_d1_assign_proc : process(plaintext_q0, trunc_ln43_2_reg_2389, ap_CS_fsm_state50, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            temp_2_d1 <= trunc_ln43_2_reg_2389;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            temp_2_d1 <= plaintext_q0(15 downto 8);
        else 
            temp_2_d1 <= "XXXXXXXX";
        end if; 
    end process;


    temp_2_we0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            temp_2_we0 <= ap_const_logic_1;
        else 
            temp_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_2_we1_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            temp_2_we1 <= ap_const_logic_1;
        else 
            temp_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_address0_assign_proc : process(ap_CS_fsm_state3, zext_ln37_reg_2008, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln34_fu_915_p1, zext_ln45_fu_1024_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_address0 <= zext_ln45_fu_1024_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            temp_address0 <= zext_ln37_reg_2008(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_address0 <= zext_ln34_fu_915_p1(7 - 1 downto 0);
        else 
            temp_address0 <= "XXXXXXX";
        end if; 
    end process;


    temp_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state6, zext_ln41_fu_984_p1, zext_ln43_fu_1014_p1, zext_ln234_fu_1133_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            temp_address1 <= zext_ln234_fu_1133_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_address1 <= zext_ln43_fu_1014_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            temp_address1 <= zext_ln41_fu_984_p1(7 - 1 downto 0);
        else 
            temp_address1 <= "XXXXXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            temp_ce0 <= ap_const_logic_1;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            temp_ce1 <= ap_const_logic_1;
        else 
            temp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, trunc_ln4_reg_2045, ap_CS_fsm_state6, trunc_ln39_fu_963_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_d0 <= trunc_ln4_reg_2045;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            temp_d0 <= trunc_ln39_fu_963_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            temp_d0 <= ap_const_lv8_0;
        else 
            temp_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_d1_assign_proc : process(privateKey_q0, trunc_ln3_reg_2040, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_d1 <= trunc_ln3_reg_2040;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            temp_d1 <= privateKey_q0(15 downto 8);
        else 
            temp_d1 <= "XXXXXXXX";
        end if; 
    end process;


    temp_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            temp_we0 <= ap_const_logic_1;
        else 
            temp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            temp_we1 <= ap_const_logic_1;
        else 
            temp_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_56_fu_1032_p4 <= i_0_i_i_i89_reg_545(31 downto 4);
    tmp_57_fu_1403_p3 <= loop_0_i38_reg_649(4 downto 4);
    tmp_58_fu_1509_p4 <= i_0_i_i_i47_reg_660(32 downto 4);
    tmp_59_fu_1669_p3 <= loop_0_i_reg_706(4 downto 4);
    tmp_60_fu_1772_p4 <= i_0_i_i_i6_reg_717(32 downto 4);
    tmp_fu_930_p3 <= loop_0_i80_reg_534(4 downto 4);
    trunc_ln194_4_fu_1183_p1 <= p_01_rec_i_i_i_reg_580(13 - 1 downto 0);
    trunc_ln194_5_fu_1591_p1 <= p_01_rec_i_i_i48_reg_672(8 - 1 downto 0);
    trunc_ln194_6_fu_1866_p1 <= p_01_rec_i_i_i7_reg_729(8 - 1 downto 0);
    trunc_ln194_fu_1123_p1 <= p_01_rec_i_i_i90_reg_557(8 - 1 downto 0);
    trunc_ln206_fu_1219_p1 <= p_1_rec_i_i_i_reg_592(13 - 1 downto 0);
    trunc_ln225_6_fu_1525_p1 <= i_0_i_i_i47_reg_660(5 - 1 downto 0);
    trunc_ln225_7_fu_1788_p1 <= i_0_i_i_i6_reg_717(5 - 1 downto 0);
    trunc_ln225_fu_1048_p1 <= i_0_i_i_i89_reg_545(5 - 1 downto 0);
    trunc_ln234_4_fu_1326_p1 <= loop_1_i_i_i_reg_615(13 - 1 downto 0);
    trunc_ln234_5_fu_1587_p1 <= loop_1_i_i_i64_reg_684(8 - 1 downto 0);
    trunc_ln234_6_fu_1862_p1 <= loop_1_i_i_i23_reg_741(8 - 1 downto 0);
    trunc_ln234_fu_1119_p1 <= loop_1_i_i_i106_reg_569(8 - 1 downto 0);
    trunc_ln37_1_fu_1426_p1 <= loop_0_i38_reg_649(4 - 1 downto 0);
    trunc_ln37_2_fu_1692_p1 <= loop_0_i_reg_706(4 - 1 downto 0);
    trunc_ln37_fu_953_p1 <= loop_0_i80_reg_534(4 - 1 downto 0);
    trunc_ln38_3_fu_1411_p4 <= loop_0_i38_reg_649(3 downto 2);
    trunc_ln38_6_fu_1677_p4 <= loop_0_i_reg_706(3 downto 2);
    trunc_ln39_1_fu_1440_p1 <= publicKey_q0(8 - 1 downto 0);
    trunc_ln39_2_fu_1706_p1 <= plaintext_q0(8 - 1 downto 0);
    trunc_ln39_fu_963_p1 <= privateKey_q0(8 - 1 downto 0);
    trunc_ln41_fu_1058_p1 <= messageByteLength(61 - 1 downto 0);
    trunc_ln_fu_938_p4 <= loop_0_i80_reg_534(3 downto 2);
    xor_ln149_10_fu_1369_p2 <= (message_q0 xor ctx_sponge_state_q1);
    xor_ln149_11_fu_1259_p2 <= (message_q0 xor ctx_sponge_state_q0);
    xor_ln149_12_fu_1636_p2 <= (temp_1_q1 xor ctx_sponge_state_q1);
    xor_ln149_13_fu_1930_p2 <= (ctx_sponge_state_q1 xor ap_const_lv8_1F);
    xor_ln149_14_fu_1937_p2 <= (ctx_sponge_state_q1 xor ap_const_lv8_80);
    xor_ln149_15_fu_1913_p2 <= (temp_2_q1 xor ctx_sponge_state_q1);
    xor_ln149_fu_1163_p2 <= (temp_q1 xor ctx_sponge_state_q0);
    zext_ln140_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i1_reg_512),64));
    zext_ln149_10_fu_1925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_HashUpdateIntLE_fu_806_ap_return),64));
    zext_ln149_11_fu_1887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_19_fu_1881_p2),64));
    zext_ln149_8_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_17_fu_1340_p2),64));
    zext_ln149_9_fu_1611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_18_fu_1606_p2),64));
    zext_ln149_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_16_fu_1138_p2),64));
    zext_ln212_1_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_assign_12_reg_604),13));
    zext_ln212_2_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln212_1_fu_1249_p2),64));
    zext_ln212_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_assign_12_reg_604),64));
    zext_ln225_5_fu_1535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_16_reg_2299),32));
    zext_ln225_6_fu_1808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_18_reg_2402),32));
    zext_ln225_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_reg_2061),32));
    zext_ln231_3_fu_1305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_7_fu_1298_p3),64));
    zext_ln231_4_fu_1562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_8_fu_1554_p3),64));
    zext_ln231_5_fu_1837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_9_fu_1829_p3),64));
    zext_ln231_6_fu_1841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_9_fu_1829_p3),33));
    zext_ln231_fu_1566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_8_fu_1554_p3),33));
    zext_ln234_6_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_10_fu_1330_p2),64));
    zext_ln234_7_fu_1601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_11_fu_1595_p2),64));
    zext_ln234_8_fu_1876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_13_fu_1870_p2),64));
    zext_ln234_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_fu_1127_p2),64));
    zext_ln34_1_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln34_1_reg_638),64));
    zext_ln34_2_fu_1654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln34_2_reg_695),64));
    zext_ln34_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln34_reg_523),64));
    zext_ln37_1_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i38_reg_649),64));
    zext_ln37_2_fu_1665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i_reg_706),64));
    zext_ln37_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i80_reg_534),64));
    zext_ln38_1_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln38_3_fu_1411_p4),64));
    zext_ln38_2_fu_1687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln38_6_fu_1677_p4),64));
    zext_ln38_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_938_p4),64));
    zext_ln41_1_fu_1061_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln41_fu_1058_p1),64));
    zext_ln41_2_fu_1461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_1_fu_1456_p2),64));
    zext_ln41_3_fu_1727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_2_fu_1722_p2),64));
    zext_ln41_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_fu_979_p2),64));
    zext_ln43_1_fu_1491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln43_1_fu_1486_p2),64));
    zext_ln43_2_fu_1757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln43_2_fu_1752_p2),64));
    zext_ln43_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln43_fu_1009_p2),64));
    zext_ln45_1_fu_1501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln45_1_fu_1496_p2),64));
    zext_ln45_2_fu_1767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln45_2_fu_1762_p2),64));
    zext_ln45_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln45_fu_1019_p2),64));
end behav;
