-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Commit_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    seed_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    seed_ce0 : OUT STD_LOGIC;
    seed_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    seed_offset : IN STD_LOGIC_VECTOR (7 downto 0);
    seed_offset1 : IN STD_LOGIC_VECTOR (2 downto 0);
    view_inputShare_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    view_inputShare_ce0 : OUT STD_LOGIC;
    view_inputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    view_inputShare_offset : IN STD_LOGIC_VECTOR (7 downto 0);
    view_inputShare_offset3 : IN STD_LOGIC_VECTOR (2 downto 0);
    view_communicatedBits_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    view_communicatedBits_ce0 : OUT STD_LOGIC;
    view_communicatedBits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    view_communicatedBits_offset : IN STD_LOGIC_VECTOR (7 downto 0);
    view_communicatedBits_offset4 : IN STD_LOGIC_VECTOR (2 downto 0);
    view_outputShare_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    view_outputShare_ce0 : OUT STD_LOGIC;
    view_outputShare_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    view_outputShare_offset : IN STD_LOGIC_VECTOR (7 downto 0);
    view_outputShare_offset5 : IN STD_LOGIC_VECTOR (2 downto 0);
    hash_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    hash_ce0 : OUT STD_LOGIC;
    hash_we0 : OUT STD_LOGIC;
    hash_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    hash_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    hash_offset : IN STD_LOGIC_VECTOR (7 downto 0);
    hash_offset6 : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Commit_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (93 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (93 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (93 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (93 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (93 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (93 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (93 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (93 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (93 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (93 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (93 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv64_A7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010100111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv8_1F : STD_LOGIC_VECTOR (7 downto 0) := "00011111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_C8 : STD_LOGIC_VECTOR (7 downto 0) := "11001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_4A : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv33_4B : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001001011";
    constant ap_const_lv7_4B : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_const_lv17_4B : STD_LOGIC_VECTOR (16 downto 0) := "00000000001001011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (93 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sub_ln234_1_fu_907_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln234_1_reg_2266 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_65_cast_fu_945_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_cast_reg_2281 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln38_fu_983_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln38_reg_2286 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln234_fu_2260_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln234_reg_2291 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln38_1_fu_1036_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln38_1_reg_2296 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_73_cast_fu_1074_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_73_cast_reg_2301 : STD_LOGIC_VECTOR (14 downto 0);
    signal loop_56_fu_1088_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ctx_sponge_byteIOInd_84_reg_2321 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal select_ln226_fu_1120_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_reg_2327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln194_phi_fu_568_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_fu_1138_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_reg_2345 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ctx_sponge_state_add_40_reg_2350 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln233_fu_1133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_reg_2355 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln244_fu_1176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fromWordsToBytes_fu_849_ap_ready : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_849_ap_done : STD_LOGIC;
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal partialBlock_48_fu_1201_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal partialBlock_48_reg_2367 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln194_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_42_reg_2372 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln81_fu_1212_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln81_reg_2377 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln226_18_fu_1236_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_18_reg_2382 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln231_fu_1244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_reg_2388 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_1252_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_reg_2393 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_57_fu_1263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_57_reg_2401 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln233_15_fu_1258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_41_reg_2411 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_15_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_15_reg_2416 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i60_fu_1336_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_block_state20_on_subcall_done : BOOLEAN;
    signal ctx_sponge_state_add_43_reg_2425 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal loop_58_fu_1347_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ctx_sponge_byteIOInd_88_reg_2445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal icmp_ln226_16_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln226_16_reg_2451 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_phi_ln194_2_phi_fu_636_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln226_19_fu_1383_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_19_reg_2464 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal icmp_ln239_16_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_16_reg_2469 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln244_2_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_block_state39_on_subcall_done : BOOLEAN;
    signal ctx_sponge_byteIOInd_91_reg_2478 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal partialBlock_51_fu_1434_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal partialBlock_51_reg_2490 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln194_13_fu_1424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln226_20_fu_1459_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_20_reg_2495 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal zext_ln231_12_fu_1467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_12_reg_2501 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_52_fu_1475_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_52_reg_2506 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_59_fu_1486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_59_reg_2514 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln233_16_fu_1481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_45_reg_2524 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_17_fu_1534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_17_reg_2529 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i30_fu_1557_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_block_state48_on_subcall_done : BOOLEAN;
    signal add_ln34_fu_1562_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal zext_ln37_fu_1579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_reg_2546 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal tmp_78_fu_1583_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln37_fu_1613_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln37_reg_2559 : STD_LOGIC_VECTOR (3 downto 0);
    signal loop_60_fu_1617_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_60_reg_2566 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln10_reg_2579 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal trunc_ln11_reg_2584 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_byteIOInd_94_reg_2589 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal partialBlock_53_fu_1716_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal partialBlock_53_reg_2600 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln194_15_fu_1706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln226_21_fu_1746_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_21_reg_2613 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal zext_ln231_13_fu_1754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_13_reg_2619 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_53_fu_1762_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_53_reg_2624 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_61_fu_1773_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_61_reg_2632 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal icmp_ln233_17_fu_1768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_46_reg_2642 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_18_fu_1812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_18_reg_2647 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i163_fu_1835_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_block_state61_on_subcall_done : BOOLEAN;
    signal ctx_sponge_byteIOInd_97_reg_2656 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal partialBlock_55_fu_1853_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal partialBlock_55_reg_2668 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln194_14_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln226_22_fu_1878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_22_reg_2673 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal zext_ln231_14_fu_1886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_14_reg_2679 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_54_fu_1894_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_54_reg_2684 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_62_fu_1905_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_62_reg_2692 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal icmp_ln233_18_fu_1900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_47_reg_2702 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_19_fu_1953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_19_reg_2707 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i_fu_1976_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_block_state70_on_subcall_done : BOOLEAN;
    signal add_ln34_5_fu_1981_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal zext_ln37_5_fu_1998_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_5_reg_2724 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal tmp_81_fu_2002_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln37_5_fu_2032_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln37_5_reg_2737 : STD_LOGIC_VECTOR (3 downto 0);
    signal loop_63_fu_2036_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_63_reg_2744 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln43_5_reg_2757 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal trunc_ln45_5_reg_2762 : STD_LOGIC_VECTOR (7 downto 0);
    signal partialBlock_57_fu_2132_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal partialBlock_57_reg_2770 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal icmp_ln194_16_fu_2122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_49_reg_2775 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln226_23_fu_2164_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln226_23_reg_2780 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal zext_ln231_15_fu_2172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_15_reg_2786 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_55_fu_2180_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_55_reg_2791 : STD_LOGIC_VECTOR (32 downto 0);
    signal loop_64_fu_2191_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_64_reg_2799 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal icmp_ln233_19_fu_2186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_sponge_state_add_48_reg_2809 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln239_20_fu_2232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_20_reg_2814 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_rec_i_i_i122_fu_2255_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_block_state83_on_subcall_done : BOOLEAN;
    signal stateAsWords_25_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_25_ce0 : STD_LOGIC;
    signal stateAsWords_25_we0 : STD_LOGIC;
    signal stateAsWords_25_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_25_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_25_ce1 : STD_LOGIC;
    signal stateAsWords_25_we1 : STD_LOGIC;
    signal stateAsWords_25_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_31_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_31_ce0 : STD_LOGIC;
    signal stateAsWords_31_we0 : STD_LOGIC;
    signal stateAsWords_31_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_31_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_31_ce1 : STD_LOGIC;
    signal stateAsWords_31_we1 : STD_LOGIC;
    signal stateAsWords_31_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_29_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_29_ce0 : STD_LOGIC;
    signal stateAsWords_29_we0 : STD_LOGIC;
    signal stateAsWords_29_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_29_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_29_ce1 : STD_LOGIC;
    signal stateAsWords_29_we1 : STD_LOGIC;
    signal stateAsWords_29_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC;
    signal temp_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_ce1 : STD_LOGIC;
    signal temp_we1 : STD_LOGIC;
    signal temp_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal stateAsWords_32_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_32_ce0 : STD_LOGIC;
    signal stateAsWords_32_we0 : STD_LOGIC;
    signal stateAsWords_32_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_32_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_32_ce1 : STD_LOGIC;
    signal stateAsWords_32_we1 : STD_LOGIC;
    signal stateAsWords_32_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_5_ce0 : STD_LOGIC;
    signal temp_5_we0 : STD_LOGIC;
    signal temp_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_5_ce1 : STD_LOGIC;
    signal temp_5_we1 : STD_LOGIC;
    signal temp_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_5_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_ce0 : STD_LOGIC;
    signal stateAsWords_we0 : STD_LOGIC;
    signal stateAsWords_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_ce1 : STD_LOGIC;
    signal stateAsWords_we1 : STD_LOGIC;
    signal stateAsWords_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_27_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_27_ce0 : STD_LOGIC;
    signal stateAsWords_27_we0 : STD_LOGIC;
    signal stateAsWords_27_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_27_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_27_ce1 : STD_LOGIC;
    signal stateAsWords_27_we1 : STD_LOGIC;
    signal stateAsWords_27_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_26_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_26_ce0 : STD_LOGIC;
    signal stateAsWords_26_we0 : STD_LOGIC;
    signal stateAsWords_26_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_26_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_26_ce1 : STD_LOGIC;
    signal stateAsWords_26_we1 : STD_LOGIC;
    signal stateAsWords_26_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_28_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_28_ce0 : STD_LOGIC;
    signal stateAsWords_28_we0 : STD_LOGIC;
    signal stateAsWords_28_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_28_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_28_ce1 : STD_LOGIC;
    signal stateAsWords_28_we1 : STD_LOGIC;
    signal stateAsWords_28_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_30_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stateAsWords_30_ce0 : STD_LOGIC;
    signal stateAsWords_30_we0 : STD_LOGIC;
    signal stateAsWords_30_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_30_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stateAsWords_30_ce1 : STD_LOGIC;
    signal stateAsWords_30_we1 : STD_LOGIC;
    signal stateAsWords_30_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctx_sponge_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_ce0 : STD_LOGIC;
    signal ctx_sponge_state_we0 : STD_LOGIC;
    signal ctx_sponge_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctx_sponge_state_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_fu_827_ap_start : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_827_ap_done : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_827_ap_idle : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_827_ap_ready : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_827_instance_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_fu_827_instance_state_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_827_instance_state_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_827_instance_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakWidth1600_Spon_fu_827_data_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_KeccakWidth1600_Spon_fu_827_data_ce0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_827_data_we0 : STD_LOGIC;
    signal grp_KeccakWidth1600_Spon_fu_827_data_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakP1600OnWords_fu_840_ap_start : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_840_ap_done : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_840_ap_idle : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_840_ap_ready : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_840_state_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakP1600OnWords_fu_840_state_ce0 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_840_state_we0 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_840_state_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_840_state_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_840_state_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakP1600OnWords_fu_840_state_ce1 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_840_state_we1 : STD_LOGIC;
    signal grp_KeccakP1600OnWords_fu_840_state_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakP1600OnWords_fu_840_state_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromWordsToBytes_fu_849_ap_start : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_849_ap_idle : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_849_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromWordsToBytes_fu_849_state_ce0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_849_state_we0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_849_state_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromWordsToBytes_fu_849_stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fromWordsToBytes_fu_849_stateAsWords_ce0 : STD_LOGIC;
    signal grp_fromWordsToBytes_fu_849_stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_855_ap_start : STD_LOGIC;
    signal grp_fromBytesToWords_fu_855_ap_done : STD_LOGIC;
    signal grp_fromBytesToWords_fu_855_ap_idle : STD_LOGIC;
    signal grp_fromBytesToWords_fu_855_ap_ready : STD_LOGIC;
    signal grp_fromBytesToWords_fu_855_stateAsWords_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fromBytesToWords_fu_855_stateAsWords_ce0 : STD_LOGIC;
    signal grp_fromBytesToWords_fu_855_stateAsWords_we0 : STD_LOGIC;
    signal grp_fromBytesToWords_fu_855_stateAsWords_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_855_stateAsWords_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fromBytesToWords_fu_855_state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fromBytesToWords_fu_855_state_ce0 : STD_LOGIC;
    signal loop_0_i1_reg_553 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln139_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln194_reg_564 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_1_i_i_i_i84_reg_575 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i_0_i_i_i36_reg_586 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i37_reg_598 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i53_reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal loop_0_i2_reg_621 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal icmp_ln139_4_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln194_2_reg_632 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i6_reg_643 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i7_reg_655 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i23_reg_667 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal phi_ln34_reg_678 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln34_fu_1573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_0_i130_reg_689 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal i_0_i_i_i139_reg_700 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i140_reg_712 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i156_reg_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal i_0_i_i_i_reg_735 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i_reg_747 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i_reg_759 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal phi_ln34_5_reg_770 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln34_5_fu_1992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_0_i_reg_781 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal i_0_i_i_i98_reg_792 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_01_rec_i_i_i99_reg_804 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_1_i_i_i115_reg_816 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal grp_KeccakWidth1600_Spon_fu_827_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal grp_KeccakP1600OnWords_fu_840_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal grp_fromWordsToBytes_fu_849_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal grp_fromBytesToWords_fu_855_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal zext_ln140_fu_1094_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_fu_1149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_22_fu_1207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_27_fu_1292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_23_fu_1303_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln140_4_fu_1353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_29_fu_1515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_24_fu_1525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_fu_1568_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln38_2_fu_1608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_fu_1648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_fu_1678_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_fu_1688_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_16_fu_1793_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_25_fu_1803_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln234_3_fu_1934_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_26_fu_1944_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_5_fu_1987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln38_3_fu_2027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_7_fu_2067_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_5_fu_2097_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_5_fu_2107_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_27_fu_2138_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln234_18_fu_2211_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_28_fu_2222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctx_sponge_byteIOInd_fu_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_85_fu_1154_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_assign_27_fu_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_86_fu_1308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_87_fu_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_89_fu_1390_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_90_fu_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_92_fu_1530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_93_fu_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_95_fu_1808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_96_fu_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_98_fu_1949_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_assign_32_fu_236 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctx_sponge_byteIOInd_99_fu_2227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln149_fu_1169_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_32_fu_1329_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_fu_869_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_fu_876_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_33_fu_1550_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_34_fu_1828_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_35_fu_1969_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln149_38_fu_2248_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal trunc_ln39_fu_1627_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln39_5_fu_2046_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_895_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln234_22_fu_903_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln234_21_fu_891_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_921_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln234_20_fu_929_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln234_19_fu_917_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln234_fu_933_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln234_fu_913_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln234_35_fu_939_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_961_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln38_5_fu_969_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln38_fu_957_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln38_fu_973_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln38_fu_979_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal view_outputShare_off_2_fu_953_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln234_fu_993_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal view_communicatedBit_2_fu_989_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln234_37_fu_996_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_fu_1014_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln38_7_fu_1022_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln38_6_fu_1010_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln38_1_fu_1026_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln38_1_fu_1032_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal view_inputShare_offs_2_fu_1006_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_1050_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln234_25_fu_1058_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln234_24_fu_1046_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln234_2_fu_1062_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln234_23_fu_1042_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln234_39_fu_1068_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln226_fu_1102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_fu_1114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln234_40_fu_1144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_1181_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln225_fu_1197_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln225_fu_1215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_15_fu_1218_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_15_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_49_fu_1230_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_18_fu_1248_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln234_fu_1269_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln194_fu_1273_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln234_fu_1277_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln234_26_fu_1283_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln234_41_fu_1287_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln234_42_fu_1297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_16_fu_1361_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal partialBlock_50_fu_1378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_1414_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln225_14_fu_1430_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln225_12_fu_1440_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_17_fu_1443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_17_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_52_fu_1454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_19_fu_1471_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln234_15_fu_1492_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln194_13_fu_1496_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln234_32_fu_1500_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln234_28_fu_1506_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln234_43_fu_1510_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln234_44_fu_1520_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_fu_1591_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_79_fu_1601_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln41_fu_1643_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln43_fu_1673_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln45_fu_1683_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1696_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln225_15_fu_1712_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln225_13_fu_1727_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_18_fu_1730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_18_fu_1735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_54_fu_1741_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_20_fu_1758_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln194_14_fu_1783_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln234_16_fu_1779_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_34_fu_1787_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_45_fu_1798_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln225_16_fu_1849_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln225_14_fu_1859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_19_fu_1862_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_19_fu_1867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_56_fu_1873_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_21_fu_1890_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln234_17_fu_1911_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln194_15_fu_1915_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_36_fu_1919_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln234_30_fu_1925_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln234_46_fu_1929_p2 : STD_LOGIC_VECTOR (16 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln234_46_fu_1929_p2 : signal is "no";
    signal add_ln234_47_fu_1939_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln38_s_fu_2010_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_82_fu_2020_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln41_5_fu_2062_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln43_5_fu_2092_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln45_5_fu_2102_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2112_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln225_17_fu_2128_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln225_15_fu_2143_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln226_20_fu_2146_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln226_20_fu_2152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal partialBlock_58_fu_2158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_22_fu_2176_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln194_16_fu_2201_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln234_18_fu_2197_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_38_fu_2205_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln234_48_fu_2216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln234_fu_2260_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (93 downto 0);

    component KeccakWidth1600_Spon IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        instance_state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_ce0 : OUT STD_LOGIC;
        instance_state_we0 : OUT STD_LOGIC;
        instance_state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        instance_state_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_we0 : OUT STD_LOGIC;
        data_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        data_offset : IN STD_LOGIC_VECTOR (7 downto 0);
        data_offset1 : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component KeccakP1600OnWords IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce1 : OUT STD_LOGIC;
        state_we1 : OUT STD_LOGIC;
        state_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fromWordsToBytes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        stateAsWords_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        stateAsWords_ce0 : OUT STD_LOGIC;
        stateAsWords_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fromBytesToWords IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stateAsWords_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        stateAsWords_ce0 : OUT STD_LOGIC;
        stateAsWords_we0 : OUT STD_LOGIC;
        stateAsWords_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        stateAsWords_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_sign_mul_mbdk IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component pi_tempA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component computeSeeds_2_temp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component createRandomTape_Hfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    stateAsWords_25_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_25_address0,
        ce0 => stateAsWords_25_ce0,
        we0 => stateAsWords_25_we0,
        d0 => stateAsWords_25_d0,
        q0 => stateAsWords_25_q0,
        address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        ce1 => stateAsWords_25_ce1,
        we1 => stateAsWords_25_we1,
        d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        q1 => stateAsWords_25_q1);

    stateAsWords_31_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_31_address0,
        ce0 => stateAsWords_31_ce0,
        we0 => stateAsWords_31_we0,
        d0 => stateAsWords_31_d0,
        q0 => stateAsWords_31_q0,
        address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        ce1 => stateAsWords_31_ce1,
        we1 => stateAsWords_31_we1,
        d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        q1 => stateAsWords_31_q1);

    stateAsWords_29_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_29_address0,
        ce0 => stateAsWords_29_ce0,
        we0 => stateAsWords_29_we0,
        d0 => stateAsWords_29_d0,
        q0 => stateAsWords_29_q0,
        address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        ce1 => stateAsWords_29_ce1,
        we1 => stateAsWords_29_we1,
        d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        q1 => stateAsWords_29_q1);

    temp_U : component computeSeeds_2_temp
    generic map (
        DataWidth => 8,
        AddressRange => 75,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => temp_d0,
        address1 => temp_address1,
        ce1 => temp_ce1,
        we1 => temp_we1,
        d1 => temp_d1,
        q1 => temp_q1);

    stateAsWords_32_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_32_address0,
        ce0 => stateAsWords_32_ce0,
        we0 => stateAsWords_32_we0,
        d0 => stateAsWords_32_d0,
        q0 => stateAsWords_32_q0,
        address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        ce1 => stateAsWords_32_ce1,
        we1 => stateAsWords_32_we1,
        d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        q1 => stateAsWords_32_q1);

    temp_5_U : component computeSeeds_2_temp
    generic map (
        DataWidth => 8,
        AddressRange => 75,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_5_address0,
        ce0 => temp_5_ce0,
        we0 => temp_5_we0,
        d0 => temp_5_d0,
        address1 => temp_5_address1,
        ce1 => temp_5_ce1,
        we1 => temp_5_we1,
        d1 => temp_5_d1,
        q1 => temp_5_q1);

    stateAsWords_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_address0,
        ce0 => stateAsWords_ce0,
        we0 => stateAsWords_we0,
        d0 => stateAsWords_d0,
        q0 => stateAsWords_q0,
        address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        ce1 => stateAsWords_ce1,
        we1 => stateAsWords_we1,
        d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        q1 => stateAsWords_q1);

    stateAsWords_27_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_27_address0,
        ce0 => stateAsWords_27_ce0,
        we0 => stateAsWords_27_we0,
        d0 => stateAsWords_27_d0,
        q0 => stateAsWords_27_q0,
        address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        ce1 => stateAsWords_27_ce1,
        we1 => stateAsWords_27_we1,
        d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        q1 => stateAsWords_27_q1);

    stateAsWords_26_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_26_address0,
        ce0 => stateAsWords_26_ce0,
        we0 => stateAsWords_26_we0,
        d0 => stateAsWords_26_d0,
        q0 => stateAsWords_26_q0,
        address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        ce1 => stateAsWords_26_ce1,
        we1 => stateAsWords_26_we1,
        d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        q1 => stateAsWords_26_q1);

    stateAsWords_28_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_28_address0,
        ce0 => stateAsWords_28_ce0,
        we0 => stateAsWords_28_we0,
        d0 => stateAsWords_28_d0,
        q0 => stateAsWords_28_q0,
        address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        ce1 => stateAsWords_28_ce1,
        we1 => stateAsWords_28_we1,
        d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        q1 => stateAsWords_28_q1);

    stateAsWords_30_U : component pi_tempA
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stateAsWords_30_address0,
        ce0 => stateAsWords_30_ce0,
        we0 => stateAsWords_30_we0,
        d0 => stateAsWords_30_d0,
        q0 => stateAsWords_30_q0,
        address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        ce1 => stateAsWords_30_ce1,
        we1 => stateAsWords_30_we1,
        d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        q1 => stateAsWords_30_q1);

    ctx_sponge_state_U : component createRandomTape_Hfu
    generic map (
        DataWidth => 8,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ctx_sponge_state_address0,
        ce0 => ctx_sponge_state_ce0,
        we0 => ctx_sponge_state_we0,
        d0 => ctx_sponge_state_d0,
        q0 => ctx_sponge_state_q0);

    grp_KeccakWidth1600_Spon_fu_827 : component KeccakWidth1600_Spon
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakWidth1600_Spon_fu_827_ap_start,
        ap_done => grp_KeccakWidth1600_Spon_fu_827_ap_done,
        ap_idle => grp_KeccakWidth1600_Spon_fu_827_ap_idle,
        ap_ready => grp_KeccakWidth1600_Spon_fu_827_ap_ready,
        instance_state_address0 => grp_KeccakWidth1600_Spon_fu_827_instance_state_address0,
        instance_state_ce0 => grp_KeccakWidth1600_Spon_fu_827_instance_state_ce0,
        instance_state_we0 => grp_KeccakWidth1600_Spon_fu_827_instance_state_we0,
        instance_state_d0 => grp_KeccakWidth1600_Spon_fu_827_instance_state_d0,
        instance_state_q0 => ctx_sponge_state_q0,
        data_address0 => grp_KeccakWidth1600_Spon_fu_827_data_address0,
        data_ce0 => grp_KeccakWidth1600_Spon_fu_827_data_ce0,
        data_we0 => grp_KeccakWidth1600_Spon_fu_827_data_we0,
        data_d0 => grp_KeccakWidth1600_Spon_fu_827_data_d0,
        data_offset => hash_offset,
        data_offset1 => trunc_ln81_reg_2377);

    grp_KeccakP1600OnWords_fu_840 : component KeccakP1600OnWords
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakP1600OnWords_fu_840_ap_start,
        ap_done => grp_KeccakP1600OnWords_fu_840_ap_done,
        ap_idle => grp_KeccakP1600OnWords_fu_840_ap_idle,
        ap_ready => grp_KeccakP1600OnWords_fu_840_ap_ready,
        state_address0 => grp_KeccakP1600OnWords_fu_840_state_address0,
        state_ce0 => grp_KeccakP1600OnWords_fu_840_state_ce0,
        state_we0 => grp_KeccakP1600OnWords_fu_840_state_we0,
        state_d0 => grp_KeccakP1600OnWords_fu_840_state_d0,
        state_q0 => grp_KeccakP1600OnWords_fu_840_state_q0,
        state_address1 => grp_KeccakP1600OnWords_fu_840_state_address1,
        state_ce1 => grp_KeccakP1600OnWords_fu_840_state_ce1,
        state_we1 => grp_KeccakP1600OnWords_fu_840_state_we1,
        state_d1 => grp_KeccakP1600OnWords_fu_840_state_d1,
        state_q1 => grp_KeccakP1600OnWords_fu_840_state_q1);

    grp_fromWordsToBytes_fu_849 : component fromWordsToBytes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fromWordsToBytes_fu_849_ap_start,
        ap_done => grp_fromWordsToBytes_fu_849_ap_done,
        ap_idle => grp_fromWordsToBytes_fu_849_ap_idle,
        ap_ready => grp_fromWordsToBytes_fu_849_ap_ready,
        state_address0 => grp_fromWordsToBytes_fu_849_state_address0,
        state_ce0 => grp_fromWordsToBytes_fu_849_state_ce0,
        state_we0 => grp_fromWordsToBytes_fu_849_state_we0,
        state_d0 => grp_fromWordsToBytes_fu_849_state_d0,
        stateAsWords_address0 => grp_fromWordsToBytes_fu_849_stateAsWords_address0,
        stateAsWords_ce0 => grp_fromWordsToBytes_fu_849_stateAsWords_ce0,
        stateAsWords_q0 => grp_fromWordsToBytes_fu_849_stateAsWords_q0);

    grp_fromBytesToWords_fu_855 : component fromBytesToWords
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fromBytesToWords_fu_855_ap_start,
        ap_done => grp_fromBytesToWords_fu_855_ap_done,
        ap_idle => grp_fromBytesToWords_fu_855_ap_idle,
        ap_ready => grp_fromBytesToWords_fu_855_ap_ready,
        stateAsWords_address0 => grp_fromBytesToWords_fu_855_stateAsWords_address0,
        stateAsWords_ce0 => grp_fromBytesToWords_fu_855_stateAsWords_ce0,
        stateAsWords_we0 => grp_fromBytesToWords_fu_855_stateAsWords_we0,
        stateAsWords_d0 => grp_fromBytesToWords_fu_855_stateAsWords_d0,
        stateAsWords_q0 => grp_fromBytesToWords_fu_855_stateAsWords_q0,
        state_address0 => grp_fromBytesToWords_fu_855_state_address0,
        state_ce0 => grp_fromBytesToWords_fu_855_state_ce0,
        state_q0 => ctx_sponge_state_q0);

    crypto_sign_mul_mbdk_U146 : component crypto_sign_mul_mbdk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 17)
    port map (
        din0 => add_ln234_37_fu_996_p2,
        din1 => mul_ln234_fu_2260_p1,
        dout => mul_ln234_fu_2260_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_KeccakP1600OnWords_fu_840_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakP1600OnWords_fu_840_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_KeccakP1600OnWords_fu_840_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakP1600OnWords_fu_840_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakP1600OnWords_fu_840_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakWidth1600_Spon_fu_827_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakWidth1600_Spon_fu_827_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    grp_KeccakWidth1600_Spon_fu_827_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakWidth1600_Spon_fu_827_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakWidth1600_Spon_fu_827_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fromBytesToWords_fu_855_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fromBytesToWords_fu_855_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_logic_1 = ap_CS_fsm_state77) and (icmp_ln239_20_fu_2232_p2 = ap_const_lv1_1) and (icmp_ln233_19_fu_2186_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln239_19_fu_1953_p2 = ap_const_lv1_1) and (icmp_ln233_18_fu_1900_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (icmp_ln239_18_fu_1812_p2 = ap_const_lv1_1) and (icmp_ln233_17_fu_1768_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state42) and (icmp_ln239_17_fu_1534_p2 = ap_const_lv1_1) and (icmp_ln233_16_fu_1481_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln239_16_fu_1395_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln239_15_fu_1313_p2 = ap_const_lv1_1) and (icmp_ln233_15_fu_1258_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln239_fu_1158_p2 = ap_const_lv1_1) and (icmp_ln233_fu_1133_p2 = ap_const_lv1_1)))) then 
                    grp_fromBytesToWords_fu_855_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fromBytesToWords_fu_855_ap_ready = ap_const_logic_1)) then 
                    grp_fromBytesToWords_fu_855_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fromWordsToBytes_fu_849_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fromWordsToBytes_fu_849_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_fromWordsToBytes_fu_849_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fromWordsToBytes_fu_849_ap_ready = ap_const_logic_1)) then 
                    grp_fromWordsToBytes_fu_849_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ctx_sponge_byteIOInd_87_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln239_16_fu_1395_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                ctx_sponge_byteIOInd_87_fu_220 <= ctx_sponge_byteIOInd_89_fu_1390_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln239_16_fu_1395_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln139_4_fu_1341_p2 = ap_const_lv1_1)))) then 
                ctx_sponge_byteIOInd_87_fu_220 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_90_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state42) and (icmp_ln239_17_fu_1534_p2 = ap_const_lv1_1) and (icmp_ln233_16_fu_1481_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_90_fu_224 <= ap_const_lv32_0;
            elsif (((icmp_ln239_17_fu_1534_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42) and (icmp_ln233_16_fu_1481_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_90_fu_224 <= ctx_sponge_byteIOInd_92_fu_1530_p2;
            elsif (((ap_phi_mux_phi_ln194_2_phi_fu_636_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                ctx_sponge_byteIOInd_90_fu_224 <= ctx_sponge_byteIOInd_87_fu_220;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_93_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state55) and (icmp_ln239_18_fu_1812_p2 = ap_const_lv1_1) and (icmp_ln233_17_fu_1768_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_93_fu_228 <= ap_const_lv32_0;
            elsif (((icmp_ln239_18_fu_1812_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55) and (icmp_ln233_17_fu_1768_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_93_fu_228 <= ctx_sponge_byteIOInd_95_fu_1808_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_78_fu_1583_p3 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_93_fu_228 <= ctx_sponge_byteIOInd_91_reg_2478;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_96_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln239_19_fu_1953_p2 = ap_const_lv1_1) and (icmp_ln233_18_fu_1900_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_96_fu_232 <= ap_const_lv32_0;
            elsif (((icmp_ln239_19_fu_1953_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln233_18_fu_1900_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_96_fu_232 <= ctx_sponge_byteIOInd_98_fu_1949_p2;
            elsif (((icmp_ln194_15_fu_1706_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                ctx_sponge_byteIOInd_96_fu_232 <= ctx_sponge_byteIOInd_93_fu_228;
            end if; 
        end if;
    end process;

    ctx_sponge_byteIOInd_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln239_fu_1158_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln233_fu_1133_p2 = ap_const_lv1_1))) then 
                ctx_sponge_byteIOInd_fu_212 <= ctx_sponge_byteIOInd_85_fu_1154_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln239_fu_1158_p2 = ap_const_lv1_1) and (icmp_ln233_fu_1133_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln139_fu_1082_p2 = ap_const_lv1_1)))) then 
                ctx_sponge_byteIOInd_fu_212 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i139_reg_700_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state61_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
                i_0_i_i_i139_reg_700 <= i_53_reg_2624;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_78_fu_1583_p3 = ap_const_lv1_1))) then 
                i_0_i_i_i139_reg_700 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i36_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                i_0_i_i_i36_reg_586 <= i_reg_2393;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_phi_mux_phi_ln194_phi_fu_568_p4 = ap_const_lv1_0))) then 
                i_0_i_i_i36_reg_586 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i6_reg_643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state48_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                i_0_i_i_i6_reg_643 <= i_52_reg_2506;
            elsif (((ap_phi_mux_phi_ln194_2_phi_fu_636_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                i_0_i_i_i6_reg_643 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i98_reg_792_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state83_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                i_0_i_i_i98_reg_792 <= i_55_reg_2791;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state72) and (tmp_81_fu_2002_p3 = ap_const_lv1_1))) then 
                i_0_i_i_i98_reg_792 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i_reg_735_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state70_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                i_0_i_i_i_reg_735 <= i_54_reg_2684;
            elsif (((icmp_ln194_15_fu_1706_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                i_0_i_i_i_reg_735 <= ap_const_lv33_0;
            end if; 
        end if;
    end process;

    loop_0_i130_reg_689_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln34_fu_1573_p2 = ap_const_lv1_1))) then 
                loop_0_i130_reg_689 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                loop_0_i130_reg_689 <= loop_60_reg_2566;
            end if; 
        end if;
    end process;

    loop_0_i1_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln139_fu_1082_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                loop_0_i1_reg_553 <= loop_56_fu_1088_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                loop_0_i1_reg_553 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    loop_0_i2_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln139_4_fu_1341_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                loop_0_i2_reg_621 <= loop_58_fu_1347_p2;
            elsif (((grp_KeccakWidth1600_Spon_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                loop_0_i2_reg_621 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    loop_0_i_reg_781_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state71) and (icmp_ln34_5_fu_1992_p2 = ap_const_lv1_1))) then 
                loop_0_i_reg_781 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
                loop_0_i_reg_781 <= loop_63_reg_2744;
            end if; 
        end if;
    end process;

    loop_1_i_i_i115_reg_816_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
                loop_1_i_i_i115_reg_816 <= loop_64_reg_2799;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
                loop_1_i_i_i115_reg_816 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i156_reg_724_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                loop_1_i_i_i156_reg_724 <= loop_61_reg_2632;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                loop_1_i_i_i156_reg_724 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i23_reg_667_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                loop_1_i_i_i23_reg_667 <= loop_59_reg_2514;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                loop_1_i_i_i23_reg_667 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i53_reg_610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                loop_1_i_i_i53_reg_610 <= loop_57_reg_2401;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                loop_1_i_i_i53_reg_610 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i_i84_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                loop_1_i_i_i_i84_reg_575 <= loop_reg_2345;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_phi_mux_phi_ln194_phi_fu_568_p4 = ap_const_lv1_1))) then 
                loop_1_i_i_i_i84_reg_575 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    loop_1_i_i_i_reg_759_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                loop_1_i_i_i_reg_759 <= loop_62_reg_2692;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                loop_1_i_i_i_reg_759 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    offset_assign_27_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln239_15_fu_1313_p2 = ap_const_lv1_1) and (icmp_ln233_15_fu_1258_p2 = ap_const_lv1_1))) then 
                offset_assign_27_fu_216 <= ap_const_lv32_0;
            elsif (((icmp_ln239_15_fu_1313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln233_15_fu_1258_p2 = ap_const_lv1_1))) then 
                offset_assign_27_fu_216 <= ctx_sponge_byteIOInd_86_fu_1308_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_phi_mux_phi_ln194_phi_fu_568_p4 = ap_const_lv1_0))) then 
                offset_assign_27_fu_216 <= ctx_sponge_byteIOInd_fu_212;
            end if; 
        end if;
    end process;

    offset_assign_32_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state77) and (icmp_ln239_20_fu_2232_p2 = ap_const_lv1_1) and (icmp_ln233_19_fu_2186_p2 = ap_const_lv1_1))) then 
                offset_assign_32_fu_236 <= ap_const_lv32_0;
            elsif (((icmp_ln239_20_fu_2232_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state77) and (icmp_ln233_19_fu_2186_p2 = ap_const_lv1_1))) then 
                offset_assign_32_fu_236 <= ctx_sponge_byteIOInd_99_fu_2227_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state72) and (tmp_81_fu_2002_p3 = ap_const_lv1_1))) then 
                offset_assign_32_fu_236 <= ctx_sponge_byteIOInd_97_reg_2656;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i140_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state61_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
                p_01_rec_i_i_i140_reg_712 <= p_2_rec_i_i_i163_fu_1835_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_78_fu_1583_p3 = ap_const_lv1_1))) then 
                p_01_rec_i_i_i140_reg_712 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i37_reg_598_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                p_01_rec_i_i_i37_reg_598 <= p_2_rec_i_i_i60_fu_1336_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_phi_mux_phi_ln194_phi_fu_568_p4 = ap_const_lv1_0))) then 
                p_01_rec_i_i_i37_reg_598 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i7_reg_655_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state48_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                p_01_rec_i_i_i7_reg_655 <= p_2_rec_i_i_i30_fu_1557_p2;
            elsif (((ap_phi_mux_phi_ln194_2_phi_fu_636_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                p_01_rec_i_i_i7_reg_655 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i99_reg_804_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state83_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                p_01_rec_i_i_i99_reg_804 <= p_2_rec_i_i_i122_fu_2255_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state72) and (tmp_81_fu_2002_p3 = ap_const_lv1_1))) then 
                p_01_rec_i_i_i99_reg_804 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    p_01_rec_i_i_i_reg_747_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state70_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                p_01_rec_i_i_i_reg_747 <= p_2_rec_i_i_i_fu_1976_p2;
            elsif (((icmp_ln194_15_fu_1706_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                p_01_rec_i_i_i_reg_747 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    phi_ln194_2_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state39_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
                phi_ln194_2_reg_632 <= icmp_ln244_2_fu_1406_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln139_4_fu_1341_p2 = ap_const_lv1_1))) then 
                phi_ln194_2_reg_632 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    phi_ln194_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                phi_ln194_reg_564 <= icmp_ln244_fu_1176_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln139_fu_1082_p2 = ap_const_lv1_1))) then 
                phi_ln194_reg_564 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    phi_ln34_5_reg_770_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_5_fu_1992_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                phi_ln34_5_reg_770 <= add_ln34_5_fu_1981_p2;
            elsif (((icmp_ln194_14_fu_1843_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                phi_ln34_5_reg_770 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    phi_ln34_reg_678_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_1573_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
                phi_ln34_reg_678 <= add_ln34_fu_1562_p2;
            elsif (((icmp_ln194_13_fu_1424_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                phi_ln34_reg_678 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln38_1_reg_2296 <= add_ln38_1_fu_1036_p2;
                add_ln38_reg_2286 <= add_ln38_fu_983_p2;
                mul_ln234_reg_2291 <= mul_ln234_fu_2260_p2;
                    tmp_65_cast_reg_2281(15 downto 5) <= tmp_65_cast_fu_945_p3(15 downto 5);
                    tmp_73_cast_reg_2301(14 downto 4) <= tmp_73_cast_fu_1074_p3(14 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                ctx_sponge_byteIOInd_84_reg_2321 <= ctx_sponge_byteIOInd_fu_212;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                ctx_sponge_byteIOInd_88_reg_2445 <= ctx_sponge_byteIOInd_87_fu_220;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                ctx_sponge_byteIOInd_91_reg_2478 <= ctx_sponge_byteIOInd_90_fu_224;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                ctx_sponge_byteIOInd_94_reg_2589 <= ctx_sponge_byteIOInd_93_fu_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                ctx_sponge_byteIOInd_97_reg_2656 <= ctx_sponge_byteIOInd_96_fu_232;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_fu_1133_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                ctx_sponge_state_add_40_reg_2350 <= zext_ln149_fu_1149_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_15_fu_1258_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                ctx_sponge_state_add_41_reg_2411 <= zext_ln149_23_fu_1303_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_1191_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                ctx_sponge_state_add_42_reg_2372 <= zext_ln149_22_fu_1207_p1(8 - 1 downto 0);
                trunc_ln81_reg_2377 <= trunc_ln81_fu_1212_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_16_fu_1481_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                ctx_sponge_state_add_45_reg_2524 <= zext_ln149_24_fu_1525_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_17_fu_1768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                ctx_sponge_state_add_46_reg_2642 <= zext_ln149_25_fu_1803_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_18_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                ctx_sponge_state_add_47_reg_2702 <= zext_ln149_26_fu_1944_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln233_19_fu_2186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state77))) then
                ctx_sponge_state_add_48_reg_2809 <= zext_ln149_28_fu_2222_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_16_fu_2122_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                ctx_sponge_state_add_49_reg_2775 <= zext_ln149_27_fu_2138_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                i_52_reg_2506 <= i_52_fu_1475_p2;
                select_ln226_20_reg_2495 <= select_ln226_20_fu_1459_p3;
                    zext_ln231_12_reg_2501(31 downto 0) <= zext_ln231_12_fu_1467_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                i_53_reg_2624 <= i_53_fu_1762_p2;
                select_ln226_21_reg_2613 <= select_ln226_21_fu_1746_p3;
                    zext_ln231_13_reg_2619(31 downto 0) <= zext_ln231_13_fu_1754_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                i_54_reg_2684 <= i_54_fu_1894_p2;
                select_ln226_22_reg_2673 <= select_ln226_22_fu_1878_p3;
                    zext_ln231_14_reg_2679(31 downto 0) <= zext_ln231_14_fu_1886_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                i_55_reg_2791 <= i_55_fu_2180_p2;
                select_ln226_23_reg_2780 <= select_ln226_23_fu_2164_p3;
                    zext_ln231_15_reg_2786(31 downto 0) <= zext_ln231_15_fu_2172_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                i_reg_2393 <= i_fu_1252_p2;
                select_ln226_18_reg_2382 <= select_ln226_18_fu_1236_p3;
                    zext_ln231_reg_2388(31 downto 0) <= zext_ln231_fu_1244_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_phi_mux_phi_ln194_2_phi_fu_636_p4 = ap_const_lv1_1))) then
                icmp_ln226_16_reg_2451 <= icmp_ln226_16_fu_1367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln233_15_fu_1258_p2 = ap_const_lv1_1))) then
                icmp_ln239_15_reg_2416 <= icmp_ln239_15_fu_1313_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                icmp_ln239_16_reg_2469 <= icmp_ln239_16_fu_1395_p2;
                select_ln226_19_reg_2464 <= select_ln226_19_fu_1383_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state42) and (icmp_ln233_16_fu_1481_p2 = ap_const_lv1_1))) then
                icmp_ln239_17_reg_2529 <= icmp_ln239_17_fu_1534_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state55) and (icmp_ln233_17_fu_1768_p2 = ap_const_lv1_1))) then
                icmp_ln239_18_reg_2647 <= icmp_ln239_18_fu_1812_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln233_18_fu_1900_p2 = ap_const_lv1_1))) then
                icmp_ln239_19_reg_2707 <= icmp_ln239_19_fu_1953_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state77) and (icmp_ln233_19_fu_2186_p2 = ap_const_lv1_1))) then
                icmp_ln239_20_reg_2814 <= icmp_ln239_20_fu_2232_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln233_fu_1133_p2 = ap_const_lv1_1))) then
                icmp_ln239_reg_2355 <= icmp_ln239_fu_1158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                loop_57_reg_2401 <= loop_57_fu_1263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                loop_59_reg_2514 <= loop_59_fu_1486_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_78_fu_1583_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                loop_60_reg_2566 <= loop_60_fu_1617_p2;
                trunc_ln37_reg_2559 <= trunc_ln37_fu_1613_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                loop_61_reg_2632 <= loop_61_fu_1773_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                loop_62_reg_2692 <= loop_62_fu_1905_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_81_fu_2002_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                loop_63_reg_2744 <= loop_63_fu_2036_p2;
                trunc_ln37_5_reg_2737 <= trunc_ln37_5_fu_2032_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                loop_64_reg_2799 <= loop_64_fu_2191_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                loop_reg_2345 <= loop_fu_1138_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln194_fu_1191_p2 = ap_const_lv1_1))) then
                partialBlock_48_reg_2367 <= partialBlock_48_fu_1201_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) and (icmp_ln194_13_fu_1424_p2 = ap_const_lv1_1))) then
                partialBlock_51_reg_2490 <= partialBlock_51_fu_1434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln194_15_fu_1706_p2 = ap_const_lv1_1))) then
                partialBlock_53_reg_2600 <= partialBlock_53_fu_1716_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state62) and (icmp_ln194_14_fu_1843_p2 = ap_const_lv1_1))) then
                partialBlock_55_reg_2668 <= partialBlock_55_fu_1853_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state75) and (icmp_ln194_16_fu_2122_p2 = ap_const_lv1_1))) then
                partialBlock_57_reg_2770 <= partialBlock_57_fu_2132_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_phi_mux_phi_ln194_phi_fu_568_p4 = ap_const_lv1_1))) then
                select_ln226_reg_2327 <= select_ln226_fu_1120_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                sub_ln234_1_reg_2266 <= sub_ln234_1_fu_907_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                trunc_ln10_reg_2579 <= view_inputShare_q0(23 downto 16);
                trunc_ln11_reg_2584 <= view_inputShare_q0(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                trunc_ln43_5_reg_2757 <= view_outputShare_q0(23 downto 16);
                trunc_ln45_5_reg_2762 <= view_outputShare_q0(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                    zext_ln37_5_reg_2724(4 downto 0) <= zext_ln37_5_fu_1998_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                    zext_ln37_reg_2546(4 downto 0) <= zext_ln37_fu_1579_p1(4 downto 0);
            end if;
        end if;
    end process;
    tmp_65_cast_reg_2281(4 downto 0) <= "00000";
    tmp_73_cast_reg_2301(3 downto 0) <= "0000";
    zext_ln231_reg_2388(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln231_12_reg_2501(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln37_reg_2546(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln231_13_reg_2619(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln231_14_reg_2679(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln37_5_reg_2724(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln231_15_reg_2786(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_phi_mux_phi_ln194_phi_fu_568_p4, ap_CS_fsm_state5, icmp_ln233_fu_1133_p2, icmp_ln239_fu_1158_p2, ap_CS_fsm_state11, grp_fromWordsToBytes_fu_849_ap_done, ap_block_state11_on_subcall_done, ap_CS_fsm_state12, icmp_ln194_fu_1191_p2, ap_CS_fsm_state14, icmp_ln233_15_fu_1258_p2, icmp_ln239_15_fu_1313_p2, ap_CS_fsm_state20, ap_block_state20_on_subcall_done, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_phi_mux_phi_ln194_2_phi_fu_636_p4, ap_CS_fsm_state34, icmp_ln239_16_fu_1395_p2, ap_CS_fsm_state39, ap_block_state39_on_subcall_done, ap_CS_fsm_state40, icmp_ln194_13_fu_1424_p2, ap_CS_fsm_state42, icmp_ln233_16_fu_1481_p2, icmp_ln239_17_fu_1534_p2, ap_CS_fsm_state48, ap_block_state48_on_subcall_done, ap_CS_fsm_state49, ap_CS_fsm_state50, tmp_78_fu_1583_p3, ap_CS_fsm_state53, icmp_ln194_15_fu_1706_p2, ap_CS_fsm_state55, icmp_ln233_17_fu_1768_p2, icmp_ln239_18_fu_1812_p2, ap_CS_fsm_state61, ap_block_state61_on_subcall_done, ap_CS_fsm_state62, icmp_ln194_14_fu_1843_p2, ap_CS_fsm_state64, icmp_ln233_18_fu_1900_p2, icmp_ln239_19_fu_1953_p2, ap_CS_fsm_state70, ap_block_state70_on_subcall_done, ap_CS_fsm_state71, ap_CS_fsm_state72, tmp_81_fu_2002_p3, ap_CS_fsm_state75, icmp_ln194_16_fu_2122_p2, ap_CS_fsm_state77, icmp_ln233_19_fu_2186_p2, icmp_ln239_20_fu_2232_p2, ap_CS_fsm_state83, ap_block_state83_on_subcall_done, grp_KeccakWidth1600_Spon_fu_827_ap_done, grp_KeccakP1600OnWords_fu_840_ap_done, grp_fromBytesToWords_fu_855_ap_done, icmp_ln139_fu_1082_p2, ap_CS_fsm_state31, icmp_ln139_4_fu_1341_p2, icmp_ln34_fu_1573_p2, icmp_ln34_5_fu_1992_p2, ap_CS_fsm_state94, ap_CS_fsm_state9, ap_CS_fsm_state18, ap_CS_fsm_state27, ap_CS_fsm_state37, ap_CS_fsm_state46, ap_CS_fsm_state59, ap_CS_fsm_state68, ap_CS_fsm_state81, ap_CS_fsm_state90, ap_CS_fsm_state29, ap_CS_fsm_state92, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state35, ap_CS_fsm_state44, ap_CS_fsm_state57, ap_CS_fsm_state66, ap_CS_fsm_state79, ap_CS_fsm_state88)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln139_fu_1082_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_phi_mux_phi_ln194_phi_fu_568_p4 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln239_fu_1158_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln233_fu_1133_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln239_fu_1158_p2 = ap_const_lv1_1) and (icmp_ln233_fu_1133_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state7 => 
                if (((grp_fromBytesToWords_fu_855_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_KeccakP1600OnWords_fu_840_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln194_fu_1191_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln239_15_fu_1313_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln233_15_fu_1258_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln239_15_fu_1313_p2 = ap_const_lv1_1) and (icmp_ln233_15_fu_1258_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state16 => 
                if (((grp_fromBytesToWords_fu_855_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_KeccakP1600OnWords_fu_840_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((grp_fromBytesToWords_fu_855_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_KeccakP1600OnWords_fu_840_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((grp_fromWordsToBytes_fu_849_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((grp_KeccakWidth1600_Spon_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln139_4_fu_1341_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (((ap_phi_mux_phi_ln194_2_phi_fu_636_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                if (((icmp_ln239_16_fu_1395_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                if (((grp_fromBytesToWords_fu_855_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_KeccakP1600OnWords_fu_840_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (((ap_const_boolean_0 = ap_block_state39_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                if (((icmp_ln194_13_fu_1424_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                if (((icmp_ln239_17_fu_1534_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42) and (icmp_ln233_16_fu_1481_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state42) and (icmp_ln239_17_fu_1534_p2 = ap_const_lv1_1) and (icmp_ln233_16_fu_1481_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state44 => 
                if (((grp_fromBytesToWords_fu_855_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                if (((grp_KeccakP1600OnWords_fu_840_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                if (((ap_const_boolean_0 = ap_block_state48_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (icmp_ln34_fu_1573_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state50 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state50) and (tmp_78_fu_1583_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state53 => 
                if (((icmp_ln194_15_fu_1706_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((icmp_ln239_18_fu_1812_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55) and (icmp_ln233_17_fu_1768_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state55) and (icmp_ln239_18_fu_1812_p2 = ap_const_lv1_1) and (icmp_ln233_17_fu_1768_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state57 => 
                if (((grp_fromBytesToWords_fu_855_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                if (((grp_KeccakP1600OnWords_fu_840_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                if (((ap_const_boolean_0 = ap_block_state61_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state61))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                if (((icmp_ln194_14_fu_1843_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state63;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((icmp_ln239_19_fu_1953_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln233_18_fu_1900_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln239_19_fu_1953_p2 = ap_const_lv1_1) and (icmp_ln233_18_fu_1900_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state66 => 
                if (((grp_fromBytesToWords_fu_855_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state66))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                if (((grp_KeccakP1600OnWords_fu_840_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                if (((ap_const_boolean_0 = ap_block_state70_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state71 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state71) and (icmp_ln34_5_fu_1992_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state72 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (tmp_81_fu_2002_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state75 => 
                if (((icmp_ln194_16_fu_2122_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                if (((icmp_ln239_20_fu_2232_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state77) and (icmp_ln233_19_fu_2186_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state77) and (icmp_ln239_20_fu_2232_p2 = ap_const_lv1_1) and (icmp_ln233_19_fu_2186_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_state78;
                end if;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state79 => 
                if (((grp_fromBytesToWords_fu_855_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state79))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                if (((grp_KeccakP1600OnWords_fu_840_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state81))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                if (((ap_const_boolean_0 = ap_block_state83_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                if (((grp_fromBytesToWords_fu_855_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state88))) then
                    ap_NS_fsm <= ap_ST_fsm_state89;
                else
                    ap_NS_fsm <= ap_ST_fsm_state88;
                end if;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                if (((grp_KeccakP1600OnWords_fu_840_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state90))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                if (((grp_fromWordsToBytes_fu_849_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state92))) then
                    ap_NS_fsm <= ap_ST_fsm_state93;
                else
                    ap_NS_fsm <= ap_ST_fsm_state92;
                end if;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                if (((grp_KeccakWidth1600_Spon_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state94))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state94;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln226_15_fu_1218_p2 <= std_logic_vector(unsigned(offset_assign_27_fu_216) + unsigned(zext_ln225_fu_1215_p1));
    add_ln226_16_fu_1361_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_87_fu_220) + unsigned(ap_const_lv32_1));
    add_ln226_17_fu_1443_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_91_reg_2478) + unsigned(zext_ln225_12_fu_1440_p1));
    add_ln226_18_fu_1730_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_94_reg_2589) + unsigned(zext_ln225_13_fu_1727_p1));
    add_ln226_19_fu_1862_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_97_reg_2656) + unsigned(zext_ln225_14_fu_1859_p1));
    add_ln226_20_fu_2146_p2 <= std_logic_vector(unsigned(offset_assign_32_fu_236) + unsigned(zext_ln225_15_fu_2143_p1));
    add_ln226_fu_1102_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_fu_212) + unsigned(ap_const_lv32_1));
    add_ln234_32_fu_1500_p2 <= std_logic_vector(unsigned(trunc_ln234_15_fu_1492_p1) + unsigned(trunc_ln194_13_fu_1496_p1));
    add_ln234_34_fu_1787_p2 <= std_logic_vector(unsigned(trunc_ln194_14_fu_1783_p1) + unsigned(trunc_ln234_16_fu_1779_p1));
    add_ln234_35_fu_939_p2 <= std_logic_vector(unsigned(sub_ln234_fu_933_p2) + unsigned(zext_ln234_fu_913_p1));
    add_ln234_36_fu_1919_p2 <= std_logic_vector(unsigned(trunc_ln234_17_fu_1911_p1) + unsigned(trunc_ln194_15_fu_1915_p1));
    add_ln234_37_fu_996_p2 <= std_logic_vector(signed(sext_ln234_fu_993_p1) + signed(view_communicatedBit_2_fu_989_p1));
    add_ln234_38_fu_2205_p2 <= std_logic_vector(unsigned(trunc_ln194_16_fu_2201_p1) + unsigned(trunc_ln234_18_fu_2197_p1));
    add_ln234_39_fu_1068_p2 <= std_logic_vector(unsigned(sub_ln234_2_fu_1062_p2) + unsigned(zext_ln234_23_fu_1042_p1));
    add_ln234_40_fu_1144_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_84_reg_2321) + unsigned(loop_1_i_i_i_i84_reg_575));
    add_ln234_41_fu_1287_p2 <= std_logic_vector(unsigned(tmp_73_cast_reg_2301) + unsigned(zext_ln234_26_fu_1283_p1));
    add_ln234_42_fu_1297_p2 <= std_logic_vector(unsigned(loop_1_i_i_i53_reg_610) + unsigned(offset_assign_27_fu_216));
    add_ln234_43_fu_1510_p2 <= std_logic_vector(unsigned(tmp_65_cast_reg_2281) + unsigned(zext_ln234_28_fu_1506_p1));
    add_ln234_44_fu_1520_p2 <= std_logic_vector(unsigned(loop_1_i_i_i23_reg_667) + unsigned(ctx_sponge_byteIOInd_91_reg_2478));
    add_ln234_45_fu_1798_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_94_reg_2589) + unsigned(loop_1_i_i_i156_reg_724));
    add_ln234_46_fu_1929_p2 <= std_logic_vector(signed(mul_ln234_reg_2291) + signed(zext_ln234_30_fu_1925_p1));
    add_ln234_47_fu_1939_p2 <= std_logic_vector(unsigned(loop_1_i_i_i_reg_759) + unsigned(ctx_sponge_byteIOInd_97_reg_2656));
    add_ln234_48_fu_2216_p2 <= std_logic_vector(unsigned(offset_assign_32_fu_236) + unsigned(loop_1_i_i_i115_reg_816));
    add_ln234_fu_1277_p2 <= std_logic_vector(unsigned(trunc_ln234_fu_1269_p1) + unsigned(trunc_ln194_fu_1273_p1));
    add_ln34_5_fu_1981_p2 <= std_logic_vector(unsigned(phi_ln34_5_reg_770) + unsigned(ap_const_lv7_1));
    add_ln34_fu_1562_p2 <= std_logic_vector(unsigned(phi_ln34_reg_678) + unsigned(ap_const_lv7_1));
    add_ln38_1_fu_1036_p2 <= std_logic_vector(signed(sext_ln38_1_fu_1032_p1) + signed(view_inputShare_offs_2_fu_1006_p1));
    add_ln38_fu_983_p2 <= std_logic_vector(signed(sext_ln38_fu_979_p1) + signed(view_outputShare_off_2_fu_953_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);

    ap_block_state11_on_subcall_done_assign_proc : process(icmp_ln239_reg_2355, grp_fromWordsToBytes_fu_849_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((grp_fromWordsToBytes_fu_849_ap_done = ap_const_logic_0) and (icmp_ln239_reg_2355 = ap_const_lv1_1));
    end process;


    ap_block_state20_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_849_ap_done, icmp_ln239_15_reg_2416)
    begin
                ap_block_state20_on_subcall_done <= ((grp_fromWordsToBytes_fu_849_ap_done = ap_const_logic_0) and (icmp_ln239_15_reg_2416 = ap_const_lv1_1));
    end process;


    ap_block_state39_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_849_ap_done, icmp_ln239_16_reg_2469)
    begin
                ap_block_state39_on_subcall_done <= ((grp_fromWordsToBytes_fu_849_ap_done = ap_const_logic_0) and (icmp_ln239_16_reg_2469 = ap_const_lv1_1));
    end process;


    ap_block_state48_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_849_ap_done, icmp_ln239_17_reg_2529)
    begin
                ap_block_state48_on_subcall_done <= ((grp_fromWordsToBytes_fu_849_ap_done = ap_const_logic_0) and (icmp_ln239_17_reg_2529 = ap_const_lv1_1));
    end process;


    ap_block_state61_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_849_ap_done, icmp_ln239_18_reg_2647)
    begin
                ap_block_state61_on_subcall_done <= ((grp_fromWordsToBytes_fu_849_ap_done = ap_const_logic_0) and (icmp_ln239_18_reg_2647 = ap_const_lv1_1));
    end process;


    ap_block_state70_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_849_ap_done, icmp_ln239_19_reg_2707)
    begin
                ap_block_state70_on_subcall_done <= ((grp_fromWordsToBytes_fu_849_ap_done = ap_const_logic_0) and (icmp_ln239_19_reg_2707 = ap_const_lv1_1));
    end process;


    ap_block_state83_on_subcall_done_assign_proc : process(grp_fromWordsToBytes_fu_849_ap_done, icmp_ln239_20_reg_2814)
    begin
                ap_block_state83_on_subcall_done <= ((grp_fromWordsToBytes_fu_849_ap_done = ap_const_logic_0) and (icmp_ln239_20_reg_2814 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_KeccakWidth1600_Spon_fu_827_ap_done, ap_CS_fsm_state94)
    begin
        if ((((grp_KeccakWidth1600_Spon_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state94)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_phi_ln194_2_phi_fu_636_p4 <= phi_ln194_2_reg_632;
    ap_phi_mux_phi_ln194_phi_fu_568_p4 <= phi_ln194_reg_564;

    ap_ready_assign_proc : process(grp_KeccakWidth1600_Spon_fu_827_ap_done, ap_CS_fsm_state94)
    begin
        if (((grp_KeccakWidth1600_Spon_fu_827_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state94))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ctx_sponge_byteIOInd_85_fu_1154_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_84_reg_2321) + unsigned(select_ln226_reg_2327));
    ctx_sponge_byteIOInd_86_fu_1308_p2 <= std_logic_vector(unsigned(offset_assign_27_fu_216) + unsigned(select_ln226_18_reg_2382));
    ctx_sponge_byteIOInd_89_fu_1390_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_88_reg_2445) + unsigned(select_ln226_19_fu_1383_p3));
    ctx_sponge_byteIOInd_92_fu_1530_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_91_reg_2478) + unsigned(select_ln226_20_reg_2495));
    ctx_sponge_byteIOInd_95_fu_1808_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_94_reg_2589) + unsigned(select_ln226_21_reg_2613));
    ctx_sponge_byteIOInd_98_fu_1949_p2 <= std_logic_vector(unsigned(ctx_sponge_byteIOInd_97_reg_2656) + unsigned(select_ln226_22_reg_2673));
    ctx_sponge_byteIOInd_99_fu_2227_p2 <= std_logic_vector(unsigned(offset_assign_32_fu_236) + unsigned(select_ln226_23_reg_2780));
    ctx_sponge_state_add_43_reg_2425 <= ap_const_lv64_A7(8 - 1 downto 0);

    ctx_sponge_state_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ctx_sponge_state_add_40_reg_2350, icmp_ln233_fu_1133_p2, icmp_ln239_reg_2355, ap_CS_fsm_state11, ap_CS_fsm_state12, ctx_sponge_state_add_42_reg_2372, ap_CS_fsm_state14, icmp_ln233_15_fu_1258_p2, ctx_sponge_state_add_41_reg_2411, icmp_ln239_15_reg_2416, ap_CS_fsm_state20, ctx_sponge_state_add_43_reg_2425, ap_CS_fsm_state22, ap_CS_fsm_state32, icmp_ln239_16_reg_2469, ap_CS_fsm_state39, ap_CS_fsm_state42, icmp_ln233_16_fu_1481_p2, ctx_sponge_state_add_45_reg_2524, icmp_ln239_17_reg_2529, ap_CS_fsm_state48, ap_CS_fsm_state55, icmp_ln233_17_fu_1768_p2, ctx_sponge_state_add_46_reg_2642, icmp_ln239_18_reg_2647, ap_CS_fsm_state61, ap_CS_fsm_state64, icmp_ln233_18_fu_1900_p2, ctx_sponge_state_add_47_reg_2702, icmp_ln239_19_reg_2707, ap_CS_fsm_state70, ap_CS_fsm_state75, ctx_sponge_state_add_49_reg_2775, ap_CS_fsm_state77, icmp_ln233_19_fu_2186_p2, ctx_sponge_state_add_48_reg_2809, icmp_ln239_20_reg_2814, ap_CS_fsm_state83, grp_KeccakWidth1600_Spon_fu_827_instance_state_address0, grp_fromWordsToBytes_fu_849_state_address0, grp_fromBytesToWords_fu_855_state_address0, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state31, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state65, ap_CS_fsm_state78, ap_CS_fsm_state94, ap_CS_fsm_state29, ap_CS_fsm_state92, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state35, ap_CS_fsm_state44, ap_CS_fsm_state57, ap_CS_fsm_state66, ap_CS_fsm_state79, ap_CS_fsm_state88, zext_ln140_fu_1094_p1, zext_ln149_fu_1149_p1, zext_ln149_22_fu_1207_p1, zext_ln149_23_fu_1303_p1, zext_ln140_4_fu_1353_p1, zext_ln149_24_fu_1525_p1, zext_ln149_25_fu_1803_p1, zext_ln149_26_fu_1944_p1, zext_ln149_27_fu_2138_p1, zext_ln149_28_fu_2222_p1, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_49_reg_2775;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_48_reg_2809;
        elsif (((icmp_ln233_19_fu_2186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            ctx_sponge_state_address0 <= zext_ln149_28_fu_2222_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            ctx_sponge_state_address0 <= zext_ln149_27_fu_2138_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_47_reg_2702;
        elsif (((icmp_ln233_18_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            ctx_sponge_state_address0 <= zext_ln149_26_fu_1944_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_46_reg_2642;
        elsif (((icmp_ln233_17_fu_1768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            ctx_sponge_state_address0 <= zext_ln149_25_fu_1803_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_45_reg_2524;
        elsif (((icmp_ln233_16_fu_1481_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            ctx_sponge_state_address0 <= zext_ln149_24_fu_1525_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ctx_sponge_state_address0 <= zext_ln140_4_fu_1353_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_43_reg_2425;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ctx_sponge_state_address0 <= ap_const_lv64_A7(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_42_reg_2372;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_41_reg_2411;
        elsif (((icmp_ln233_15_fu_1258_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ctx_sponge_state_address0 <= zext_ln149_23_fu_1303_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ctx_sponge_state_address0 <= zext_ln149_22_fu_1207_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ctx_sponge_state_address0 <= ctx_sponge_state_add_40_reg_2350;
        elsif (((icmp_ln233_fu_1133_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ctx_sponge_state_address0 <= zext_ln149_fu_1149_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ctx_sponge_state_address0 <= zext_ln140_fu_1094_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ctx_sponge_state_address0 <= grp_fromBytesToWords_fu_855_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (icmp_ln239_20_reg_2814 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state70) and (icmp_ln239_19_reg_2707 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln239_18_reg_2647 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln239_17_reg_2529 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln239_16_reg_2469 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln239_15_reg_2416 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln239_reg_2355 = ap_const_lv1_1)))) then 
            ctx_sponge_state_address0 <= grp_fromWordsToBytes_fu_849_state_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            ctx_sponge_state_address0 <= grp_KeccakWidth1600_Spon_fu_827_instance_state_address0;
        else 
            ctx_sponge_state_address0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, icmp_ln233_fu_1133_p2, icmp_ln239_reg_2355, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state14, icmp_ln233_15_fu_1258_p2, icmp_ln239_15_reg_2416, ap_CS_fsm_state20, ap_CS_fsm_state22, ap_CS_fsm_state32, icmp_ln239_16_reg_2469, ap_CS_fsm_state39, ap_CS_fsm_state42, icmp_ln233_16_fu_1481_p2, icmp_ln239_17_reg_2529, ap_CS_fsm_state48, ap_CS_fsm_state55, icmp_ln233_17_fu_1768_p2, icmp_ln239_18_reg_2647, ap_CS_fsm_state61, ap_CS_fsm_state64, icmp_ln233_18_fu_1900_p2, icmp_ln239_19_reg_2707, ap_CS_fsm_state70, ap_CS_fsm_state75, ap_CS_fsm_state77, icmp_ln233_19_fu_2186_p2, icmp_ln239_20_reg_2814, ap_CS_fsm_state83, grp_KeccakWidth1600_Spon_fu_827_instance_state_ce0, grp_fromWordsToBytes_fu_849_state_ce0, grp_fromBytesToWords_fu_855_state_ce0, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state31, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state65, ap_CS_fsm_state78, ap_CS_fsm_state94, ap_CS_fsm_state29, ap_CS_fsm_state92, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state35, ap_CS_fsm_state44, ap_CS_fsm_state57, ap_CS_fsm_state66, ap_CS_fsm_state79, ap_CS_fsm_state88, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((icmp_ln233_19_fu_2186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state77)) or ((icmp_ln233_18_fu_1900_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64)) or ((icmp_ln233_17_fu_1768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((icmp_ln233_16_fu_1481_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((icmp_ln233_15_fu_1258_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((icmp_ln233_fu_1133_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ctx_sponge_state_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ctx_sponge_state_ce0 <= grp_fromBytesToWords_fu_855_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (icmp_ln239_20_reg_2814 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state70) and (icmp_ln239_19_reg_2707 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln239_18_reg_2647 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln239_17_reg_2529 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln239_16_reg_2469 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln239_15_reg_2416 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln239_reg_2355 = ap_const_lv1_1)))) then 
            ctx_sponge_state_ce0 <= grp_fromWordsToBytes_fu_849_state_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            ctx_sponge_state_ce0 <= grp_KeccakWidth1600_Spon_fu_827_instance_state_ce0;
        else 
            ctx_sponge_state_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_sponge_state_d0_assign_proc : process(ap_CS_fsm_state3, icmp_ln239_reg_2355, ap_CS_fsm_state11, icmp_ln239_15_reg_2416, ap_CS_fsm_state20, ap_CS_fsm_state32, icmp_ln239_16_reg_2469, ap_CS_fsm_state39, icmp_ln239_17_reg_2529, ap_CS_fsm_state48, icmp_ln239_18_reg_2647, ap_CS_fsm_state61, icmp_ln239_19_reg_2707, ap_CS_fsm_state70, icmp_ln239_20_reg_2814, ap_CS_fsm_state83, grp_KeccakWidth1600_Spon_fu_827_instance_state_d0, grp_fromWordsToBytes_fu_849_state_d0, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state31, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state65, ap_CS_fsm_state78, ap_CS_fsm_state94, ap_CS_fsm_state29, ap_CS_fsm_state92, xor_ln149_fu_1169_p2, xor_ln149_32_fu_1329_p2, ap_CS_fsm_state21, grp_fu_869_p2, ap_CS_fsm_state23, grp_fu_876_p2, xor_ln149_33_fu_1550_p2, xor_ln149_34_fu_1828_p2, xor_ln149_35_fu_1969_p2, xor_ln149_38_fu_2248_p2, ap_CS_fsm_state84, ap_CS_fsm_state86)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            ctx_sponge_state_d0 <= xor_ln149_38_fu_2248_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            ctx_sponge_state_d0 <= xor_ln149_35_fu_1969_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            ctx_sponge_state_d0 <= xor_ln149_34_fu_1828_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            ctx_sponge_state_d0 <= xor_ln149_33_fu_1550_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            ctx_sponge_state_d0 <= grp_fu_876_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ctx_sponge_state_d0 <= grp_fu_869_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ctx_sponge_state_d0 <= xor_ln149_32_fu_1329_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ctx_sponge_state_d0 <= xor_ln149_fu_1169_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctx_sponge_state_d0 <= ap_const_lv8_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (icmp_ln239_20_reg_2814 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state70) and (icmp_ln239_19_reg_2707 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln239_18_reg_2647 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln239_17_reg_2529 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln239_16_reg_2469 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln239_15_reg_2416 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln239_reg_2355 = ap_const_lv1_1)))) then 
            ctx_sponge_state_d0 <= grp_fromWordsToBytes_fu_849_state_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            ctx_sponge_state_d0 <= grp_KeccakWidth1600_Spon_fu_827_instance_state_d0;
        else 
            ctx_sponge_state_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_sponge_state_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln239_reg_2355, ap_CS_fsm_state11, icmp_ln239_15_reg_2416, ap_CS_fsm_state20, ap_CS_fsm_state32, icmp_ln239_16_reg_2469, ap_CS_fsm_state39, icmp_ln239_17_reg_2529, ap_CS_fsm_state48, icmp_ln239_18_reg_2647, ap_CS_fsm_state61, icmp_ln239_19_reg_2707, ap_CS_fsm_state70, icmp_ln239_20_reg_2814, ap_CS_fsm_state83, grp_KeccakWidth1600_Spon_fu_827_instance_state_we0, grp_fromWordsToBytes_fu_849_state_we0, icmp_ln139_fu_1082_p2, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state31, icmp_ln139_4_fu_1341_p2, ap_CS_fsm_state43, ap_CS_fsm_state56, ap_CS_fsm_state65, ap_CS_fsm_state78, ap_CS_fsm_state94, ap_CS_fsm_state29, ap_CS_fsm_state92, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state84, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((icmp_ln139_4_fu_1341_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((icmp_ln139_fu_1082_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            ctx_sponge_state_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (icmp_ln239_20_reg_2814 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state70) and (icmp_ln239_19_reg_2707 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln239_18_reg_2647 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln239_17_reg_2529 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln239_16_reg_2469 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln239_15_reg_2416 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln239_reg_2355 = ap_const_lv1_1)))) then 
            ctx_sponge_state_we0 <= grp_fromWordsToBytes_fu_849_state_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            ctx_sponge_state_we0 <= grp_KeccakWidth1600_Spon_fu_827_instance_state_we0;
        else 
            ctx_sponge_state_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_KeccakP1600OnWords_fu_840_ap_start <= grp_KeccakP1600OnWords_fu_840_ap_start_reg;

    grp_KeccakP1600OnWords_fu_840_state_q0_assign_proc : process(stateAsWords_25_q0, stateAsWords_31_q0, stateAsWords_29_q0, stateAsWords_32_q0, stateAsWords_q0, stateAsWords_27_q0, stateAsWords_26_q0, stateAsWords_28_q0, stateAsWords_30_q0, ap_CS_fsm_state9, ap_CS_fsm_state18, ap_CS_fsm_state27, ap_CS_fsm_state37, ap_CS_fsm_state46, ap_CS_fsm_state59, ap_CS_fsm_state68, ap_CS_fsm_state81, ap_CS_fsm_state90)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= stateAsWords_31_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= stateAsWords_32_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= stateAsWords_30_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= stateAsWords_29_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= stateAsWords_28_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= stateAsWords_27_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= stateAsWords_25_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= stateAsWords_26_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= stateAsWords_q0;
        else 
            grp_KeccakP1600OnWords_fu_840_state_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_KeccakP1600OnWords_fu_840_state_q1_assign_proc : process(stateAsWords_25_q1, stateAsWords_31_q1, stateAsWords_29_q1, stateAsWords_32_q1, stateAsWords_q1, stateAsWords_27_q1, stateAsWords_26_q1, stateAsWords_28_q1, stateAsWords_30_q1, ap_CS_fsm_state9, ap_CS_fsm_state18, ap_CS_fsm_state27, ap_CS_fsm_state37, ap_CS_fsm_state46, ap_CS_fsm_state59, ap_CS_fsm_state68, ap_CS_fsm_state81, ap_CS_fsm_state90)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= stateAsWords_31_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= stateAsWords_32_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= stateAsWords_30_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= stateAsWords_29_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= stateAsWords_28_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= stateAsWords_27_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= stateAsWords_25_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= stateAsWords_26_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= stateAsWords_q1;
        else 
            grp_KeccakP1600OnWords_fu_840_state_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_KeccakWidth1600_Spon_fu_827_ap_start <= grp_KeccakWidth1600_Spon_fu_827_ap_start_reg;
    grp_fromBytesToWords_fu_855_ap_start <= grp_fromBytesToWords_fu_855_ap_start_reg;

    grp_fromBytesToWords_fu_855_stateAsWords_q0_assign_proc : process(stateAsWords_25_q0, stateAsWords_31_q0, stateAsWords_29_q0, stateAsWords_32_q0, stateAsWords_q0, stateAsWords_27_q0, stateAsWords_26_q0, stateAsWords_28_q0, stateAsWords_30_q0, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state35, ap_CS_fsm_state44, ap_CS_fsm_state57, ap_CS_fsm_state66, ap_CS_fsm_state79, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= stateAsWords_31_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= stateAsWords_32_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= stateAsWords_30_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= stateAsWords_29_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= stateAsWords_28_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= stateAsWords_27_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= stateAsWords_25_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= stateAsWords_26_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= stateAsWords_q0;
        else 
            grp_fromBytesToWords_fu_855_stateAsWords_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fromWordsToBytes_fu_849_ap_start <= grp_fromWordsToBytes_fu_849_ap_start_reg;

    grp_fromWordsToBytes_fu_849_stateAsWords_q0_assign_proc : process(icmp_ln239_reg_2355, ap_CS_fsm_state11, icmp_ln239_15_reg_2416, ap_CS_fsm_state20, icmp_ln239_16_reg_2469, ap_CS_fsm_state39, icmp_ln239_17_reg_2529, ap_CS_fsm_state48, icmp_ln239_18_reg_2647, ap_CS_fsm_state61, icmp_ln239_19_reg_2707, ap_CS_fsm_state70, icmp_ln239_20_reg_2814, ap_CS_fsm_state83, stateAsWords_25_q0, stateAsWords_31_q0, stateAsWords_29_q0, stateAsWords_32_q0, stateAsWords_q0, stateAsWords_27_q0, stateAsWords_26_q0, stateAsWords_28_q0, stateAsWords_30_q0, ap_CS_fsm_state29, ap_CS_fsm_state92)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= stateAsWords_31_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (icmp_ln239_20_reg_2814 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= stateAsWords_32_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state70) and (icmp_ln239_19_reg_2707 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= stateAsWords_30_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln239_18_reg_2647 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= stateAsWords_29_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln239_17_reg_2529 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= stateAsWords_28_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln239_16_reg_2469 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= stateAsWords_27_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= stateAsWords_25_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln239_15_reg_2416 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= stateAsWords_26_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln239_reg_2355 = ap_const_lv1_1))) then 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= stateAsWords_q0;
        else 
            grp_fromWordsToBytes_fu_849_stateAsWords_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_869_p2 <= (ctx_sponge_state_q0 xor ap_const_lv8_1F);
    grp_fu_876_p2 <= (ctx_sponge_state_q0 xor ap_const_lv8_80);

    hash_address0_assign_proc : process(ap_CS_fsm_state42, grp_KeccakWidth1600_Spon_fu_827_data_address0, ap_CS_fsm_state31, ap_CS_fsm_state94, zext_ln234_29_fu_1515_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            hash_address0 <= zext_ln234_29_fu_1515_p1(15 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            hash_address0 <= grp_KeccakWidth1600_Spon_fu_827_data_address0;
        else 
            hash_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    hash_ce0_assign_proc : process(ap_CS_fsm_state42, grp_KeccakWidth1600_Spon_fu_827_data_ce0, ap_CS_fsm_state31, ap_CS_fsm_state94)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            hash_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            hash_ce0 <= grp_KeccakWidth1600_Spon_fu_827_data_ce0;
        else 
            hash_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hash_d0 <= grp_KeccakWidth1600_Spon_fu_827_data_d0;

    hash_we0_assign_proc : process(grp_KeccakWidth1600_Spon_fu_827_data_we0, ap_CS_fsm_state31, ap_CS_fsm_state94)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            hash_we0 <= grp_KeccakWidth1600_Spon_fu_827_data_we0;
        else 
            hash_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_52_fu_1475_p2 <= std_logic_vector(unsigned(zext_ln231_19_fu_1471_p1) + unsigned(i_0_i_i_i6_reg_643));
    i_53_fu_1762_p2 <= std_logic_vector(unsigned(zext_ln231_20_fu_1758_p1) + unsigned(i_0_i_i_i139_reg_700));
    i_54_fu_1894_p2 <= std_logic_vector(unsigned(zext_ln231_21_fu_1890_p1) + unsigned(i_0_i_i_i_reg_735));
    i_55_fu_2180_p2 <= std_logic_vector(unsigned(zext_ln231_22_fu_2176_p1) + unsigned(i_0_i_i_i98_reg_792));
    i_fu_1252_p2 <= std_logic_vector(unsigned(zext_ln231_18_fu_1248_p1) + unsigned(i_0_i_i_i36_reg_586));
    icmp_ln139_4_fu_1341_p2 <= "1" when (loop_0_i2_reg_621 = ap_const_lv8_C8) else "0";
    icmp_ln139_fu_1082_p2 <= "1" when (loop_0_i1_reg_553 = ap_const_lv8_C8) else "0";
    icmp_ln194_13_fu_1424_p2 <= "1" when (tmp_77_fu_1414_p4 = ap_const_lv28_0) else "0";
    icmp_ln194_14_fu_1843_p2 <= "1" when (unsigned(i_0_i_i_i_reg_735) < unsigned(ap_const_lv33_4B)) else "0";
    icmp_ln194_15_fu_1706_p2 <= "1" when (tmp_80_fu_1696_p4 = ap_const_lv29_0) else "0";
    icmp_ln194_16_fu_2122_p2 <= "1" when (tmp_83_fu_2112_p4 = ap_const_lv29_0) else "0";
    icmp_ln194_fu_1191_p2 <= "1" when (tmp_76_fu_1181_p4 = ap_const_lv29_0) else "0";
    icmp_ln226_15_fu_1224_p2 <= "1" when (unsigned(add_ln226_15_fu_1218_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_16_fu_1367_p2 <= "1" when (unsigned(add_ln226_16_fu_1361_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_17_fu_1448_p2 <= "1" when (unsigned(add_ln226_17_fu_1443_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_18_fu_1735_p2 <= "1" when (unsigned(add_ln226_18_fu_1730_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_19_fu_1867_p2 <= "1" when (unsigned(add_ln226_19_fu_1862_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_20_fu_2152_p2 <= "1" when (unsigned(add_ln226_20_fu_2146_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln226_fu_1108_p2 <= "1" when (unsigned(add_ln226_fu_1102_p2) > unsigned(ap_const_lv32_A8)) else "0";
    icmp_ln233_15_fu_1258_p2 <= "1" when (loop_1_i_i_i53_reg_610 = select_ln226_18_reg_2382) else "0";
    icmp_ln233_16_fu_1481_p2 <= "1" when (loop_1_i_i_i23_reg_667 = select_ln226_20_reg_2495) else "0";
    icmp_ln233_17_fu_1768_p2 <= "1" when (loop_1_i_i_i156_reg_724 = select_ln226_21_reg_2613) else "0";
    icmp_ln233_18_fu_1900_p2 <= "1" when (loop_1_i_i_i_reg_759 = select_ln226_22_reg_2673) else "0";
    icmp_ln233_19_fu_2186_p2 <= "1" when (loop_1_i_i_i115_reg_816 = select_ln226_23_reg_2780) else "0";
    icmp_ln233_fu_1133_p2 <= "1" when (loop_1_i_i_i_i84_reg_575 = select_ln226_reg_2327) else "0";
    icmp_ln239_15_fu_1313_p2 <= "1" when (ctx_sponge_byteIOInd_86_fu_1308_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_16_fu_1395_p2 <= "1" when (ctx_sponge_byteIOInd_89_fu_1390_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_17_fu_1534_p2 <= "1" when (ctx_sponge_byteIOInd_92_fu_1530_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_18_fu_1812_p2 <= "1" when (ctx_sponge_byteIOInd_95_fu_1808_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_19_fu_1953_p2 <= "1" when (ctx_sponge_byteIOInd_98_fu_1949_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_20_fu_2232_p2 <= "1" when (ctx_sponge_byteIOInd_99_fu_2227_p2 = ap_const_lv32_A8) else "0";
    icmp_ln239_fu_1158_p2 <= "1" when (ctx_sponge_byteIOInd_85_fu_1154_p2 = ap_const_lv32_A8) else "0";
    icmp_ln244_2_fu_1406_p2 <= "1" when (select_ln226_19_reg_2464 = ap_const_lv32_0) else "0";
    icmp_ln244_fu_1176_p2 <= "1" when (select_ln226_reg_2327 = ap_const_lv32_0) else "0";
    icmp_ln34_5_fu_1992_p2 <= "1" when (phi_ln34_5_reg_770 = ap_const_lv7_4A) else "0";
    icmp_ln34_fu_1573_p2 <= "1" when (phi_ln34_reg_678 = ap_const_lv7_4A) else "0";
    loop_56_fu_1088_p2 <= std_logic_vector(unsigned(loop_0_i1_reg_553) + unsigned(ap_const_lv8_1));
    loop_57_fu_1263_p2 <= std_logic_vector(unsigned(loop_1_i_i_i53_reg_610) + unsigned(ap_const_lv32_1));
    loop_58_fu_1347_p2 <= std_logic_vector(unsigned(loop_0_i2_reg_621) + unsigned(ap_const_lv8_1));
    loop_59_fu_1486_p2 <= std_logic_vector(unsigned(loop_1_i_i_i23_reg_667) + unsigned(ap_const_lv32_1));
    loop_60_fu_1617_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(loop_0_i130_reg_689));
    loop_61_fu_1773_p2 <= std_logic_vector(unsigned(loop_1_i_i_i156_reg_724) + unsigned(ap_const_lv32_1));
    loop_62_fu_1905_p2 <= std_logic_vector(unsigned(loop_1_i_i_i_reg_759) + unsigned(ap_const_lv32_1));
    loop_63_fu_2036_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(loop_0_i_reg_781));
    loop_64_fu_2191_p2 <= std_logic_vector(unsigned(loop_1_i_i_i115_reg_816) + unsigned(ap_const_lv32_1));
    loop_fu_1138_p2 <= std_logic_vector(unsigned(loop_1_i_i_i_i84_reg_575) + unsigned(ap_const_lv32_1));
    mul_ln234_fu_2260_p1 <= ap_const_lv17_4B(8 - 1 downto 0);
    or_ln41_5_fu_2062_p2 <= (trunc_ln37_5_reg_2737 or ap_const_lv4_1);
    or_ln41_fu_1643_p2 <= (trunc_ln37_reg_2559 or ap_const_lv4_1);
    or_ln43_5_fu_2092_p2 <= (trunc_ln37_5_reg_2737 or ap_const_lv4_2);
    or_ln43_fu_1673_p2 <= (trunc_ln37_reg_2559 or ap_const_lv4_2);
    or_ln45_5_fu_2102_p2 <= (trunc_ln37_5_reg_2737 or ap_const_lv4_3);
    or_ln45_fu_1683_p2 <= (trunc_ln37_reg_2559 or ap_const_lv4_3);
    p_2_rec_i_i_i122_fu_2255_p2 <= std_logic_vector(unsigned(zext_ln231_15_reg_2786) + unsigned(p_01_rec_i_i_i99_reg_804));
    p_2_rec_i_i_i163_fu_1835_p2 <= std_logic_vector(unsigned(zext_ln231_13_reg_2619) + unsigned(p_01_rec_i_i_i140_reg_712));
    p_2_rec_i_i_i30_fu_1557_p2 <= std_logic_vector(unsigned(zext_ln231_12_reg_2501) + unsigned(p_01_rec_i_i_i7_reg_655));
    p_2_rec_i_i_i60_fu_1336_p2 <= std_logic_vector(unsigned(zext_ln231_reg_2388) + unsigned(p_01_rec_i_i_i37_reg_598));
    p_2_rec_i_i_i_fu_1976_p2 <= std_logic_vector(unsigned(zext_ln231_14_reg_2679) + unsigned(p_01_rec_i_i_i_reg_747));
    partialBlock_48_fu_1201_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln225_fu_1197_p1));
    partialBlock_49_fu_1230_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(offset_assign_27_fu_216));
    partialBlock_50_fu_1378_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_88_reg_2445));
    partialBlock_51_fu_1434_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(trunc_ln225_14_fu_1430_p1));
    partialBlock_52_fu_1454_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_91_reg_2478));
    partialBlock_53_fu_1716_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln225_15_fu_1712_p1));
    partialBlock_54_fu_1741_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_94_reg_2589));
    partialBlock_55_fu_1853_p2 <= std_logic_vector(signed(ap_const_lv7_4B) - signed(trunc_ln225_16_fu_1849_p1));
    partialBlock_56_fu_1873_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_97_reg_2656));
    partialBlock_57_fu_2132_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln225_17_fu_2128_p1));
    partialBlock_58_fu_2158_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(offset_assign_32_fu_236));
    partialBlock_fu_1114_p2 <= std_logic_vector(unsigned(ap_const_lv32_A8) - unsigned(ctx_sponge_byteIOInd_fu_212));
    seed_address0 <= zext_ln234_27_fu_1292_p1(14 - 1 downto 0);

    seed_ce0_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            seed_ce0 <= ap_const_logic_1;
        else 
            seed_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln226_18_fu_1236_p3 <= 
        partialBlock_49_fu_1230_p2 when (icmp_ln226_15_fu_1224_p2(0) = '1') else 
        zext_ln225_fu_1215_p1;
    select_ln226_19_fu_1383_p3 <= 
        partialBlock_50_fu_1378_p2 when (icmp_ln226_16_reg_2451(0) = '1') else 
        ap_const_lv32_1;
    select_ln226_20_fu_1459_p3 <= 
        partialBlock_52_fu_1454_p2 when (icmp_ln226_17_fu_1448_p2(0) = '1') else 
        zext_ln225_12_fu_1440_p1;
    select_ln226_21_fu_1746_p3 <= 
        partialBlock_54_fu_1741_p2 when (icmp_ln226_18_fu_1735_p2(0) = '1') else 
        zext_ln225_13_fu_1727_p1;
    select_ln226_22_fu_1878_p3 <= 
        partialBlock_56_fu_1873_p2 when (icmp_ln226_19_fu_1867_p2(0) = '1') else 
        zext_ln225_14_fu_1859_p1;
    select_ln226_23_fu_2164_p3 <= 
        partialBlock_58_fu_2158_p2 when (icmp_ln226_20_fu_2152_p2(0) = '1') else 
        zext_ln225_15_fu_2143_p1;
    select_ln226_fu_1120_p3 <= 
        partialBlock_fu_1114_p2 when (icmp_ln226_fu_1108_p2(0) = '1') else 
        ap_const_lv32_1;
        sext_ln234_3_fu_1934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln234_46_fu_1929_p2),64));

        sext_ln234_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln234_1_reg_2266),12));

        sext_ln38_1_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln38_1_fu_1026_p2),12));

        sext_ln38_2_fu_1608_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_79_fu_1601_p3),64));

        sext_ln38_3_fu_2027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_82_fu_2020_p3),64));

        sext_ln38_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln38_fu_973_p2),12));


    stateAsWords_25_address0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_address0, grp_fromWordsToBytes_fu_849_stateAsWords_address0, grp_fromBytesToWords_fu_855_stateAsWords_address0, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            stateAsWords_25_address0 <= grp_fromBytesToWords_fu_855_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            stateAsWords_25_address0 <= grp_fromWordsToBytes_fu_849_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            stateAsWords_25_address0 <= grp_KeccakP1600OnWords_fu_840_state_address0;
        else 
            stateAsWords_25_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_25_ce0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce0, grp_fromWordsToBytes_fu_849_stateAsWords_ce0, grp_fromBytesToWords_fu_855_stateAsWords_ce0, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            stateAsWords_25_ce0 <= grp_fromBytesToWords_fu_855_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            stateAsWords_25_ce0 <= grp_fromWordsToBytes_fu_849_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            stateAsWords_25_ce0 <= grp_KeccakP1600OnWords_fu_840_state_ce0;
        else 
            stateAsWords_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_25_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            stateAsWords_25_ce1 <= grp_KeccakP1600OnWords_fu_840_state_ce1;
        else 
            stateAsWords_25_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_25_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_d0, grp_fromBytesToWords_fu_855_stateAsWords_d0, ap_CS_fsm_state27, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            stateAsWords_25_d0 <= grp_fromBytesToWords_fu_855_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            stateAsWords_25_d0 <= grp_KeccakP1600OnWords_fu_840_state_d0;
        else 
            stateAsWords_25_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_25_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we0, grp_fromBytesToWords_fu_855_stateAsWords_we0, ap_CS_fsm_state27, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            stateAsWords_25_we0 <= grp_fromBytesToWords_fu_855_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            stateAsWords_25_we0 <= grp_KeccakP1600OnWords_fu_840_state_we0;
        else 
            stateAsWords_25_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_25_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            stateAsWords_25_we1 <= grp_KeccakP1600OnWords_fu_840_state_we1;
        else 
            stateAsWords_25_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_26_address0_assign_proc : process(icmp_ln239_15_reg_2416, ap_CS_fsm_state20, grp_KeccakP1600OnWords_fu_840_state_address0, grp_fromWordsToBytes_fu_849_stateAsWords_address0, grp_fromBytesToWords_fu_855_stateAsWords_address0, ap_CS_fsm_state18, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stateAsWords_26_address0 <= grp_fromBytesToWords_fu_855_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln239_15_reg_2416 = ap_const_lv1_1))) then 
            stateAsWords_26_address0 <= grp_fromWordsToBytes_fu_849_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stateAsWords_26_address0 <= grp_KeccakP1600OnWords_fu_840_state_address0;
        else 
            stateAsWords_26_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_26_ce0_assign_proc : process(icmp_ln239_15_reg_2416, ap_CS_fsm_state20, grp_KeccakP1600OnWords_fu_840_state_ce0, grp_fromWordsToBytes_fu_849_stateAsWords_ce0, grp_fromBytesToWords_fu_855_stateAsWords_ce0, ap_CS_fsm_state18, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stateAsWords_26_ce0 <= grp_fromBytesToWords_fu_855_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln239_15_reg_2416 = ap_const_lv1_1))) then 
            stateAsWords_26_ce0 <= grp_fromWordsToBytes_fu_849_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stateAsWords_26_ce0 <= grp_KeccakP1600OnWords_fu_840_state_ce0;
        else 
            stateAsWords_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_26_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce1, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stateAsWords_26_ce1 <= grp_KeccakP1600OnWords_fu_840_state_ce1;
        else 
            stateAsWords_26_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_26_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_d0, grp_fromBytesToWords_fu_855_stateAsWords_d0, ap_CS_fsm_state18, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stateAsWords_26_d0 <= grp_fromBytesToWords_fu_855_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stateAsWords_26_d0 <= grp_KeccakP1600OnWords_fu_840_state_d0;
        else 
            stateAsWords_26_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_26_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we0, grp_fromBytesToWords_fu_855_stateAsWords_we0, ap_CS_fsm_state18, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            stateAsWords_26_we0 <= grp_fromBytesToWords_fu_855_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stateAsWords_26_we0 <= grp_KeccakP1600OnWords_fu_840_state_we0;
        else 
            stateAsWords_26_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_26_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we1, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stateAsWords_26_we1 <= grp_KeccakP1600OnWords_fu_840_state_we1;
        else 
            stateAsWords_26_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_27_address0_assign_proc : process(icmp_ln239_16_reg_2469, ap_CS_fsm_state39, grp_KeccakP1600OnWords_fu_840_state_address0, grp_fromWordsToBytes_fu_849_stateAsWords_address0, grp_fromBytesToWords_fu_855_stateAsWords_address0, ap_CS_fsm_state37, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            stateAsWords_27_address0 <= grp_fromBytesToWords_fu_855_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln239_16_reg_2469 = ap_const_lv1_1))) then 
            stateAsWords_27_address0 <= grp_fromWordsToBytes_fu_849_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            stateAsWords_27_address0 <= grp_KeccakP1600OnWords_fu_840_state_address0;
        else 
            stateAsWords_27_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_27_ce0_assign_proc : process(icmp_ln239_16_reg_2469, ap_CS_fsm_state39, grp_KeccakP1600OnWords_fu_840_state_ce0, grp_fromWordsToBytes_fu_849_stateAsWords_ce0, grp_fromBytesToWords_fu_855_stateAsWords_ce0, ap_CS_fsm_state37, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            stateAsWords_27_ce0 <= grp_fromBytesToWords_fu_855_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) and (icmp_ln239_16_reg_2469 = ap_const_lv1_1))) then 
            stateAsWords_27_ce0 <= grp_fromWordsToBytes_fu_849_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            stateAsWords_27_ce0 <= grp_KeccakP1600OnWords_fu_840_state_ce0;
        else 
            stateAsWords_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_27_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce1, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            stateAsWords_27_ce1 <= grp_KeccakP1600OnWords_fu_840_state_ce1;
        else 
            stateAsWords_27_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_27_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_d0, grp_fromBytesToWords_fu_855_stateAsWords_d0, ap_CS_fsm_state37, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            stateAsWords_27_d0 <= grp_fromBytesToWords_fu_855_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            stateAsWords_27_d0 <= grp_KeccakP1600OnWords_fu_840_state_d0;
        else 
            stateAsWords_27_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_27_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we0, grp_fromBytesToWords_fu_855_stateAsWords_we0, ap_CS_fsm_state37, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            stateAsWords_27_we0 <= grp_fromBytesToWords_fu_855_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            stateAsWords_27_we0 <= grp_KeccakP1600OnWords_fu_840_state_we0;
        else 
            stateAsWords_27_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_27_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we1, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            stateAsWords_27_we1 <= grp_KeccakP1600OnWords_fu_840_state_we1;
        else 
            stateAsWords_27_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_28_address0_assign_proc : process(icmp_ln239_17_reg_2529, ap_CS_fsm_state48, grp_KeccakP1600OnWords_fu_840_state_address0, grp_fromWordsToBytes_fu_849_stateAsWords_address0, grp_fromBytesToWords_fu_855_stateAsWords_address0, ap_CS_fsm_state46, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            stateAsWords_28_address0 <= grp_fromBytesToWords_fu_855_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln239_17_reg_2529 = ap_const_lv1_1))) then 
            stateAsWords_28_address0 <= grp_fromWordsToBytes_fu_849_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            stateAsWords_28_address0 <= grp_KeccakP1600OnWords_fu_840_state_address0;
        else 
            stateAsWords_28_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_28_ce0_assign_proc : process(icmp_ln239_17_reg_2529, ap_CS_fsm_state48, grp_KeccakP1600OnWords_fu_840_state_ce0, grp_fromWordsToBytes_fu_849_stateAsWords_ce0, grp_fromBytesToWords_fu_855_stateAsWords_ce0, ap_CS_fsm_state46, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            stateAsWords_28_ce0 <= grp_fromBytesToWords_fu_855_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) and (icmp_ln239_17_reg_2529 = ap_const_lv1_1))) then 
            stateAsWords_28_ce0 <= grp_fromWordsToBytes_fu_849_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            stateAsWords_28_ce0 <= grp_KeccakP1600OnWords_fu_840_state_ce0;
        else 
            stateAsWords_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_28_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce1, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            stateAsWords_28_ce1 <= grp_KeccakP1600OnWords_fu_840_state_ce1;
        else 
            stateAsWords_28_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_28_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_d0, grp_fromBytesToWords_fu_855_stateAsWords_d0, ap_CS_fsm_state46, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            stateAsWords_28_d0 <= grp_fromBytesToWords_fu_855_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            stateAsWords_28_d0 <= grp_KeccakP1600OnWords_fu_840_state_d0;
        else 
            stateAsWords_28_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_28_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we0, grp_fromBytesToWords_fu_855_stateAsWords_we0, ap_CS_fsm_state46, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            stateAsWords_28_we0 <= grp_fromBytesToWords_fu_855_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            stateAsWords_28_we0 <= grp_KeccakP1600OnWords_fu_840_state_we0;
        else 
            stateAsWords_28_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_28_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we1, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            stateAsWords_28_we1 <= grp_KeccakP1600OnWords_fu_840_state_we1;
        else 
            stateAsWords_28_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_29_address0_assign_proc : process(icmp_ln239_18_reg_2647, ap_CS_fsm_state61, grp_KeccakP1600OnWords_fu_840_state_address0, grp_fromWordsToBytes_fu_849_stateAsWords_address0, grp_fromBytesToWords_fu_855_stateAsWords_address0, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            stateAsWords_29_address0 <= grp_fromBytesToWords_fu_855_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln239_18_reg_2647 = ap_const_lv1_1))) then 
            stateAsWords_29_address0 <= grp_fromWordsToBytes_fu_849_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            stateAsWords_29_address0 <= grp_KeccakP1600OnWords_fu_840_state_address0;
        else 
            stateAsWords_29_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_29_ce0_assign_proc : process(icmp_ln239_18_reg_2647, ap_CS_fsm_state61, grp_KeccakP1600OnWords_fu_840_state_ce0, grp_fromWordsToBytes_fu_849_stateAsWords_ce0, grp_fromBytesToWords_fu_855_stateAsWords_ce0, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            stateAsWords_29_ce0 <= grp_fromBytesToWords_fu_855_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln239_18_reg_2647 = ap_const_lv1_1))) then 
            stateAsWords_29_ce0 <= grp_fromWordsToBytes_fu_849_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            stateAsWords_29_ce0 <= grp_KeccakP1600OnWords_fu_840_state_ce0;
        else 
            stateAsWords_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_29_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            stateAsWords_29_ce1 <= grp_KeccakP1600OnWords_fu_840_state_ce1;
        else 
            stateAsWords_29_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_29_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_d0, grp_fromBytesToWords_fu_855_stateAsWords_d0, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            stateAsWords_29_d0 <= grp_fromBytesToWords_fu_855_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            stateAsWords_29_d0 <= grp_KeccakP1600OnWords_fu_840_state_d0;
        else 
            stateAsWords_29_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_29_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we0, grp_fromBytesToWords_fu_855_stateAsWords_we0, ap_CS_fsm_state59, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            stateAsWords_29_we0 <= grp_fromBytesToWords_fu_855_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            stateAsWords_29_we0 <= grp_KeccakP1600OnWords_fu_840_state_we0;
        else 
            stateAsWords_29_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_29_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            stateAsWords_29_we1 <= grp_KeccakP1600OnWords_fu_840_state_we1;
        else 
            stateAsWords_29_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_30_address0_assign_proc : process(icmp_ln239_19_reg_2707, ap_CS_fsm_state70, grp_KeccakP1600OnWords_fu_840_state_address0, grp_fromWordsToBytes_fu_849_stateAsWords_address0, grp_fromBytesToWords_fu_855_stateAsWords_address0, ap_CS_fsm_state68, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            stateAsWords_30_address0 <= grp_fromBytesToWords_fu_855_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state70) and (icmp_ln239_19_reg_2707 = ap_const_lv1_1))) then 
            stateAsWords_30_address0 <= grp_fromWordsToBytes_fu_849_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            stateAsWords_30_address0 <= grp_KeccakP1600OnWords_fu_840_state_address0;
        else 
            stateAsWords_30_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_30_ce0_assign_proc : process(icmp_ln239_19_reg_2707, ap_CS_fsm_state70, grp_KeccakP1600OnWords_fu_840_state_ce0, grp_fromWordsToBytes_fu_849_stateAsWords_ce0, grp_fromBytesToWords_fu_855_stateAsWords_ce0, ap_CS_fsm_state68, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            stateAsWords_30_ce0 <= grp_fromBytesToWords_fu_855_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state70) and (icmp_ln239_19_reg_2707 = ap_const_lv1_1))) then 
            stateAsWords_30_ce0 <= grp_fromWordsToBytes_fu_849_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            stateAsWords_30_ce0 <= grp_KeccakP1600OnWords_fu_840_state_ce0;
        else 
            stateAsWords_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_30_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce1, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            stateAsWords_30_ce1 <= grp_KeccakP1600OnWords_fu_840_state_ce1;
        else 
            stateAsWords_30_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_30_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_d0, grp_fromBytesToWords_fu_855_stateAsWords_d0, ap_CS_fsm_state68, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            stateAsWords_30_d0 <= grp_fromBytesToWords_fu_855_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            stateAsWords_30_d0 <= grp_KeccakP1600OnWords_fu_840_state_d0;
        else 
            stateAsWords_30_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_30_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we0, grp_fromBytesToWords_fu_855_stateAsWords_we0, ap_CS_fsm_state68, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            stateAsWords_30_we0 <= grp_fromBytesToWords_fu_855_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            stateAsWords_30_we0 <= grp_KeccakP1600OnWords_fu_840_state_we0;
        else 
            stateAsWords_30_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_30_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we1, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            stateAsWords_30_we1 <= grp_KeccakP1600OnWords_fu_840_state_we1;
        else 
            stateAsWords_30_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_31_address0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_address0, grp_fromWordsToBytes_fu_849_stateAsWords_address0, grp_fromBytesToWords_fu_855_stateAsWords_address0, ap_CS_fsm_state90, ap_CS_fsm_state92, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            stateAsWords_31_address0 <= grp_fromBytesToWords_fu_855_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            stateAsWords_31_address0 <= grp_fromWordsToBytes_fu_849_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            stateAsWords_31_address0 <= grp_KeccakP1600OnWords_fu_840_state_address0;
        else 
            stateAsWords_31_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_31_ce0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce0, grp_fromWordsToBytes_fu_849_stateAsWords_ce0, grp_fromBytesToWords_fu_855_stateAsWords_ce0, ap_CS_fsm_state90, ap_CS_fsm_state92, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            stateAsWords_31_ce0 <= grp_fromBytesToWords_fu_855_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            stateAsWords_31_ce0 <= grp_fromWordsToBytes_fu_849_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            stateAsWords_31_ce0 <= grp_KeccakP1600OnWords_fu_840_state_ce0;
        else 
            stateAsWords_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_31_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce1, ap_CS_fsm_state90)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            stateAsWords_31_ce1 <= grp_KeccakP1600OnWords_fu_840_state_ce1;
        else 
            stateAsWords_31_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_31_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_d0, grp_fromBytesToWords_fu_855_stateAsWords_d0, ap_CS_fsm_state90, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            stateAsWords_31_d0 <= grp_fromBytesToWords_fu_855_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            stateAsWords_31_d0 <= grp_KeccakP1600OnWords_fu_840_state_d0;
        else 
            stateAsWords_31_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_31_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we0, grp_fromBytesToWords_fu_855_stateAsWords_we0, ap_CS_fsm_state90, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            stateAsWords_31_we0 <= grp_fromBytesToWords_fu_855_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            stateAsWords_31_we0 <= grp_KeccakP1600OnWords_fu_840_state_we0;
        else 
            stateAsWords_31_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_31_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we1, ap_CS_fsm_state90)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            stateAsWords_31_we1 <= grp_KeccakP1600OnWords_fu_840_state_we1;
        else 
            stateAsWords_31_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_32_address0_assign_proc : process(icmp_ln239_20_reg_2814, ap_CS_fsm_state83, grp_KeccakP1600OnWords_fu_840_state_address0, grp_fromWordsToBytes_fu_849_stateAsWords_address0, grp_fromBytesToWords_fu_855_stateAsWords_address0, ap_CS_fsm_state81, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            stateAsWords_32_address0 <= grp_fromBytesToWords_fu_855_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (icmp_ln239_20_reg_2814 = ap_const_lv1_1))) then 
            stateAsWords_32_address0 <= grp_fromWordsToBytes_fu_849_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            stateAsWords_32_address0 <= grp_KeccakP1600OnWords_fu_840_state_address0;
        else 
            stateAsWords_32_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_32_ce0_assign_proc : process(icmp_ln239_20_reg_2814, ap_CS_fsm_state83, grp_KeccakP1600OnWords_fu_840_state_ce0, grp_fromWordsToBytes_fu_849_stateAsWords_ce0, grp_fromBytesToWords_fu_855_stateAsWords_ce0, ap_CS_fsm_state81, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            stateAsWords_32_ce0 <= grp_fromBytesToWords_fu_855_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state83) and (icmp_ln239_20_reg_2814 = ap_const_lv1_1))) then 
            stateAsWords_32_ce0 <= grp_fromWordsToBytes_fu_849_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            stateAsWords_32_ce0 <= grp_KeccakP1600OnWords_fu_840_state_ce0;
        else 
            stateAsWords_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_32_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce1, ap_CS_fsm_state81)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            stateAsWords_32_ce1 <= grp_KeccakP1600OnWords_fu_840_state_ce1;
        else 
            stateAsWords_32_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_32_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_d0, grp_fromBytesToWords_fu_855_stateAsWords_d0, ap_CS_fsm_state81, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            stateAsWords_32_d0 <= grp_fromBytesToWords_fu_855_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            stateAsWords_32_d0 <= grp_KeccakP1600OnWords_fu_840_state_d0;
        else 
            stateAsWords_32_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_32_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we0, grp_fromBytesToWords_fu_855_stateAsWords_we0, ap_CS_fsm_state81, ap_CS_fsm_state79)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            stateAsWords_32_we0 <= grp_fromBytesToWords_fu_855_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            stateAsWords_32_we0 <= grp_KeccakP1600OnWords_fu_840_state_we0;
        else 
            stateAsWords_32_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_32_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we1, ap_CS_fsm_state81)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            stateAsWords_32_we1 <= grp_KeccakP1600OnWords_fu_840_state_we1;
        else 
            stateAsWords_32_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_address0_assign_proc : process(icmp_ln239_reg_2355, ap_CS_fsm_state11, grp_KeccakP1600OnWords_fu_840_state_address0, grp_fromWordsToBytes_fu_849_stateAsWords_address0, grp_fromBytesToWords_fu_855_stateAsWords_address0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stateAsWords_address0 <= grp_fromBytesToWords_fu_855_stateAsWords_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln239_reg_2355 = ap_const_lv1_1))) then 
            stateAsWords_address0 <= grp_fromWordsToBytes_fu_849_stateAsWords_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            stateAsWords_address0 <= grp_KeccakP1600OnWords_fu_840_state_address0;
        else 
            stateAsWords_address0 <= "XXXXX";
        end if; 
    end process;


    stateAsWords_ce0_assign_proc : process(icmp_ln239_reg_2355, ap_CS_fsm_state11, grp_KeccakP1600OnWords_fu_840_state_ce0, grp_fromWordsToBytes_fu_849_stateAsWords_ce0, grp_fromBytesToWords_fu_855_stateAsWords_ce0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stateAsWords_ce0 <= grp_fromBytesToWords_fu_855_stateAsWords_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln239_reg_2355 = ap_const_lv1_1))) then 
            stateAsWords_ce0 <= grp_fromWordsToBytes_fu_849_stateAsWords_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            stateAsWords_ce0 <= grp_KeccakP1600OnWords_fu_840_state_ce0;
        else 
            stateAsWords_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_ce1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            stateAsWords_ce1 <= grp_KeccakP1600OnWords_fu_840_state_ce1;
        else 
            stateAsWords_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_d0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_d0, grp_fromBytesToWords_fu_855_stateAsWords_d0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stateAsWords_d0 <= grp_fromBytesToWords_fu_855_stateAsWords_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            stateAsWords_d0 <= grp_KeccakP1600OnWords_fu_840_state_d0;
        else 
            stateAsWords_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stateAsWords_we0_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we0, grp_fromBytesToWords_fu_855_stateAsWords_we0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            stateAsWords_we0 <= grp_fromBytesToWords_fu_855_stateAsWords_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            stateAsWords_we0 <= grp_KeccakP1600OnWords_fu_840_state_we0;
        else 
            stateAsWords_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stateAsWords_we1_assign_proc : process(grp_KeccakP1600OnWords_fu_840_state_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            stateAsWords_we1 <= grp_KeccakP1600OnWords_fu_840_state_we1;
        else 
            stateAsWords_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln234_1_fu_907_p2 <= std_logic_vector(unsigned(zext_ln234_22_fu_903_p1) - unsigned(zext_ln234_21_fu_891_p1));
    sub_ln234_2_fu_1062_p2 <= std_logic_vector(unsigned(zext_ln234_25_fu_1058_p1) - unsigned(zext_ln234_24_fu_1046_p1));
    sub_ln234_fu_933_p2 <= std_logic_vector(unsigned(zext_ln234_20_fu_929_p1) - unsigned(zext_ln234_19_fu_917_p1));
    sub_ln38_1_fu_1026_p2 <= std_logic_vector(unsigned(zext_ln38_7_fu_1022_p1) - unsigned(zext_ln38_6_fu_1010_p1));
    sub_ln38_fu_973_p2 <= std_logic_vector(unsigned(zext_ln38_5_fu_969_p1) - unsigned(zext_ln38_fu_957_p1));

    temp_5_address0_assign_proc : process(ap_CS_fsm_state71, zext_ln37_5_reg_2724, ap_CS_fsm_state73, ap_CS_fsm_state74, zext_ln34_5_fu_1987_p1, zext_ln45_5_fu_2107_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            temp_5_address0 <= zext_ln45_5_fu_2107_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            temp_5_address0 <= zext_ln37_5_reg_2724(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            temp_5_address0 <= zext_ln34_5_fu_1987_p1(7 - 1 downto 0);
        else 
            temp_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    temp_5_address1_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state77, ap_CS_fsm_state74, zext_ln41_7_fu_2067_p1, zext_ln43_5_fu_2097_p1, zext_ln234_18_fu_2211_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            temp_5_address1 <= zext_ln234_18_fu_2211_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            temp_5_address1 <= zext_ln43_5_fu_2097_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            temp_5_address1 <= zext_ln41_7_fu_2067_p1(7 - 1 downto 0);
        else 
            temp_5_address1 <= "XXXXXXX";
        end if; 
    end process;


    temp_5_ce0_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state73, ap_CS_fsm_state74)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            temp_5_ce0 <= ap_const_logic_1;
        else 
            temp_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_5_ce1_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state77, ap_CS_fsm_state74)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            temp_5_ce1 <= ap_const_logic_1;
        else 
            temp_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_5_d0_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state73, trunc_ln45_5_reg_2762, ap_CS_fsm_state74, trunc_ln39_5_fu_2046_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            temp_5_d0 <= trunc_ln45_5_reg_2762;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            temp_5_d0 <= trunc_ln39_5_fu_2046_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            temp_5_d0 <= ap_const_lv8_0;
        else 
            temp_5_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_5_d1_assign_proc : process(view_outputShare_q0, trunc_ln43_5_reg_2757, ap_CS_fsm_state73, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            temp_5_d1 <= trunc_ln43_5_reg_2757;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            temp_5_d1 <= view_outputShare_q0(15 downto 8);
        else 
            temp_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    temp_5_we0_assign_proc : process(ap_CS_fsm_state71, ap_CS_fsm_state73, ap_CS_fsm_state74)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            temp_5_we0 <= ap_const_logic_1;
        else 
            temp_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_5_we1_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state74)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            temp_5_we1 <= ap_const_logic_1;
        else 
            temp_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_address0_assign_proc : process(ap_CS_fsm_state49, zext_ln37_reg_2546, ap_CS_fsm_state51, ap_CS_fsm_state52, zext_ln34_fu_1568_p1, zext_ln45_fu_1688_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            temp_address0 <= zext_ln45_fu_1688_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            temp_address0 <= zext_ln37_reg_2546(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            temp_address0 <= zext_ln34_fu_1568_p1(7 - 1 downto 0);
        else 
            temp_address0 <= "XXXXXXX";
        end if; 
    end process;


    temp_address1_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state55, ap_CS_fsm_state52, zext_ln41_fu_1648_p1, zext_ln43_fu_1678_p1, zext_ln234_16_fu_1793_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            temp_address1 <= zext_ln234_16_fu_1793_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            temp_address1 <= zext_ln43_fu_1678_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            temp_address1 <= zext_ln41_fu_1648_p1(7 - 1 downto 0);
        else 
            temp_address1 <= "XXXXXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state51, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            temp_ce0 <= ap_const_logic_1;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_ce1_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state55, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            temp_ce1 <= ap_const_logic_1;
        else 
            temp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_d0_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state51, trunc_ln11_reg_2584, ap_CS_fsm_state52, trunc_ln39_fu_1627_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            temp_d0 <= trunc_ln11_reg_2584;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            temp_d0 <= trunc_ln39_fu_1627_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            temp_d0 <= ap_const_lv8_0;
        else 
            temp_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_d1_assign_proc : process(view_inputShare_q0, trunc_ln10_reg_2579, ap_CS_fsm_state51, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            temp_d1 <= trunc_ln10_reg_2579;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            temp_d1 <= view_inputShare_q0(15 downto 8);
        else 
            temp_d1 <= "XXXXXXXX";
        end if; 
    end process;


    temp_we0_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state51, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            temp_we0 <= ap_const_logic_1;
        else 
            temp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_we1_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            temp_we1 <= ap_const_logic_1;
        else 
            temp_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_20_fu_895_p3 <= (view_communicatedBits_offset & ap_const_lv2_0);
    tmp_21_fu_1014_p3 <= (view_inputShare_offset & ap_const_lv2_0);
    tmp_22_fu_1050_p3 <= (seed_offset & ap_const_lv2_0);
    tmp_65_cast_fu_945_p3 <= (add_ln234_35_fu_939_p2 & ap_const_lv5_0);
    tmp_73_cast_fu_1074_p3 <= (add_ln234_39_fu_1068_p2 & ap_const_lv4_0);
    tmp_76_fu_1181_p4 <= i_0_i_i_i36_reg_586(32 downto 4);
    tmp_77_fu_1414_p4 <= i_0_i_i_i6_reg_643(32 downto 5);
    tmp_78_fu_1583_p3 <= loop_0_i130_reg_689(4 downto 4);
    tmp_79_fu_1601_p3 <= (add_ln38_1_reg_2296 & trunc_ln_fu_1591_p4);
    tmp_80_fu_1696_p4 <= i_0_i_i_i139_reg_700(32 downto 4);
    tmp_81_fu_2002_p3 <= loop_0_i_reg_781(4 downto 4);
    tmp_82_fu_2020_p3 <= (add_ln38_reg_2286 & trunc_ln38_s_fu_2010_p4);
    tmp_83_fu_2112_p4 <= i_0_i_i_i98_reg_792(32 downto 4);
    tmp_fu_921_p3 <= (hash_offset & ap_const_lv2_0);
    tmp_s_fu_961_p3 <= (view_outputShare_offset & ap_const_lv2_0);
    trunc_ln194_13_fu_1496_p1 <= p_01_rec_i_i_i7_reg_655(7 - 1 downto 0);
    trunc_ln194_14_fu_1783_p1 <= p_01_rec_i_i_i140_reg_712(8 - 1 downto 0);
    trunc_ln194_15_fu_1915_p1 <= p_01_rec_i_i_i_reg_747(8 - 1 downto 0);
    trunc_ln194_16_fu_2201_p1 <= p_01_rec_i_i_i99_reg_804(8 - 1 downto 0);
    trunc_ln194_fu_1273_p1 <= p_01_rec_i_i_i37_reg_598(6 - 1 downto 0);
    trunc_ln225_14_fu_1430_p1 <= i_0_i_i_i6_reg_643(6 - 1 downto 0);
    trunc_ln225_15_fu_1712_p1 <= i_0_i_i_i139_reg_700(5 - 1 downto 0);
    trunc_ln225_16_fu_1849_p1 <= i_0_i_i_i_reg_735(7 - 1 downto 0);
    trunc_ln225_17_fu_2128_p1 <= i_0_i_i_i98_reg_792(5 - 1 downto 0);
    trunc_ln225_fu_1197_p1 <= i_0_i_i_i36_reg_586(5 - 1 downto 0);
    trunc_ln234_15_fu_1492_p1 <= loop_1_i_i_i23_reg_667(7 - 1 downto 0);
    trunc_ln234_16_fu_1779_p1 <= loop_1_i_i_i156_reg_724(8 - 1 downto 0);
    trunc_ln234_17_fu_1911_p1 <= loop_1_i_i_i_reg_759(8 - 1 downto 0);
    trunc_ln234_18_fu_2197_p1 <= loop_1_i_i_i115_reg_816(8 - 1 downto 0);
    trunc_ln234_fu_1269_p1 <= loop_1_i_i_i53_reg_610(6 - 1 downto 0);
    trunc_ln37_5_fu_2032_p1 <= loop_0_i_reg_781(4 - 1 downto 0);
    trunc_ln37_fu_1613_p1 <= loop_0_i130_reg_689(4 - 1 downto 0);
    trunc_ln38_s_fu_2010_p4 <= loop_0_i_reg_781(3 downto 2);
    trunc_ln39_5_fu_2046_p1 <= view_outputShare_q0(8 - 1 downto 0);
    trunc_ln39_fu_1627_p1 <= view_inputShare_q0(8 - 1 downto 0);
    trunc_ln81_fu_1212_p1 <= hash_offset6(2 - 1 downto 0);
    trunc_ln_fu_1591_p4 <= loop_0_i130_reg_689(3 downto 2);
    view_communicatedBit_2_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(view_communicatedBits_offset4),12));
    view_communicatedBits_address0 <= sext_ln234_3_fu_1934_p1(16 - 1 downto 0);

    view_communicatedBits_ce0_assign_proc : process(ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            view_communicatedBits_ce0 <= ap_const_logic_1;
        else 
            view_communicatedBits_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    view_inputShare_address0 <= sext_ln38_2_fu_1608_p1(12 - 1 downto 0);

    view_inputShare_ce0_assign_proc : process(ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            view_inputShare_ce0 <= ap_const_logic_1;
        else 
            view_inputShare_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    view_inputShare_offs_2_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(view_inputShare_offset3),12));
    view_outputShare_address0 <= sext_ln38_3_fu_2027_p1(12 - 1 downto 0);

    view_outputShare_ce0_assign_proc : process(ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            view_outputShare_ce0 <= ap_const_logic_1;
        else 
            view_outputShare_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    view_outputShare_off_2_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(view_outputShare_offset5),12));
    xor_ln149_32_fu_1329_p2 <= (seed_q0 xor ctx_sponge_state_q0);
    xor_ln149_33_fu_1550_p2 <= (hash_q0 xor ctx_sponge_state_q0);
    xor_ln149_34_fu_1828_p2 <= (temp_q1 xor ctx_sponge_state_q0);
    xor_ln149_35_fu_1969_p2 <= (view_communicatedBits_q0 xor ctx_sponge_state_q0);
    xor_ln149_38_fu_2248_p2 <= (temp_5_q1 xor ctx_sponge_state_q0);
    xor_ln149_fu_1169_p2 <= (ctx_sponge_state_q0 xor ap_const_lv8_4);
    zext_ln140_4_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i2_reg_621),64));
    zext_ln140_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i1_reg_553),64));
    zext_ln149_22_fu_1207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_assign_27_fu_216),64));
    zext_ln149_23_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_42_fu_1297_p2),64));
    zext_ln149_24_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_44_fu_1520_p2),64));
    zext_ln149_25_fu_1803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_45_fu_1798_p2),64));
    zext_ln149_26_fu_1944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_47_fu_1939_p2),64));
    zext_ln149_27_fu_2138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_assign_32_fu_236),64));
    zext_ln149_28_fu_2222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_48_fu_2216_p2),64));
    zext_ln149_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_40_fu_1144_p2),64));
    zext_ln225_12_fu_1440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_51_reg_2490),32));
    zext_ln225_13_fu_1727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_53_reg_2600),32));
    zext_ln225_14_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_55_reg_2668),32));
    zext_ln225_15_fu_2143_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_57_reg_2770),32));
    zext_ln225_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(partialBlock_48_reg_2367),32));
    zext_ln231_12_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_20_fu_1459_p3),64));
    zext_ln231_13_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_21_fu_1746_p3),64));
    zext_ln231_14_fu_1886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_22_fu_1878_p3),64));
    zext_ln231_15_fu_2172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_23_fu_2164_p3),64));
    zext_ln231_18_fu_1248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_18_fu_1236_p3),33));
    zext_ln231_19_fu_1471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_20_fu_1459_p3),33));
    zext_ln231_20_fu_1758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_21_fu_1746_p3),33));
    zext_ln231_21_fu_1890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_22_fu_1878_p3),33));
    zext_ln231_22_fu_2176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_23_fu_2164_p3),33));
    zext_ln231_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln226_18_fu_1236_p3),64));
    zext_ln234_16_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_34_fu_1787_p2),64));
    zext_ln234_18_fu_2211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_38_fu_2205_p2),64));
    zext_ln234_19_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hash_offset),11));
    zext_ln234_20_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_921_p3),11));
    zext_ln234_21_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(view_communicatedBits_offset),11));
    zext_ln234_22_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_895_p3),11));
    zext_ln234_23_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(seed_offset1),11));
    zext_ln234_24_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(seed_offset),11));
    zext_ln234_25_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_1050_p3),11));
    zext_ln234_26_fu_1283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_fu_1277_p2),15));
    zext_ln234_27_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_41_fu_1287_p2),64));
    zext_ln234_28_fu_1506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_32_fu_1500_p2),16));
    zext_ln234_29_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_43_fu_1510_p2),64));
    zext_ln234_30_fu_1925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln234_36_fu_1919_p2),17));
    zext_ln234_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hash_offset6),11));
    zext_ln34_5_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln34_5_reg_770),64));
    zext_ln34_fu_1568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln34_reg_678),64));
    zext_ln37_5_fu_1998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i_reg_781),64));
    zext_ln37_fu_1579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_0_i130_reg_689),64));
    zext_ln38_5_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_961_p3),11));
    zext_ln38_6_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(view_inputShare_offset),11));
    zext_ln38_7_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1014_p3),11));
    zext_ln38_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(view_outputShare_offset),11));
    zext_ln41_7_fu_2067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_5_fu_2062_p2),64));
    zext_ln41_fu_1648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln41_fu_1643_p2),64));
    zext_ln43_5_fu_2097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln43_5_fu_2092_p2),64));
    zext_ln43_fu_1678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln43_fu_1673_p2),64));
    zext_ln45_5_fu_2107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln45_5_fu_2102_p2),64));
    zext_ln45_fu_1688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln45_fu_1683_p2),64));
end behav;
