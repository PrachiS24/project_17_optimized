// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sign_picnic1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        privateKey_address0,
        privateKey_ce0,
        privateKey_q0,
        pubKey_address0,
        pubKey_ce0,
        pubKey_q0,
        plaintext_address0,
        plaintext_ce0,
        plaintext_q0,
        message_address0,
        message_ce0,
        message_q0,
        messageByteLength,
        sig_0_proofs_seed1_address0,
        sig_0_proofs_seed1_ce0,
        sig_0_proofs_seed1_we0,
        sig_0_proofs_seed1_d0,
        sig_0_proofs_seed2_address0,
        sig_0_proofs_seed2_ce0,
        sig_0_proofs_seed2_we0,
        sig_0_proofs_seed2_d0,
        sig_0_proofs_inputS_address0,
        sig_0_proofs_inputS_ce0,
        sig_0_proofs_inputS_we0,
        sig_0_proofs_inputS_d0,
        sig_0_proofs_commun_address0,
        sig_0_proofs_commun_ce0,
        sig_0_proofs_commun_we0,
        sig_0_proofs_commun_d0,
        sig_0_proofs_view3C_address0,
        sig_0_proofs_view3C_ce0,
        sig_0_proofs_view3C_we0,
        sig_0_proofs_view3C_d0,
        sig_0_challengeBits_address0,
        sig_0_challengeBits_ce0,
        sig_0_challengeBits_we0,
        sig_0_challengeBits_d0,
        sig_0_challengeBits_q0,
        sig_0_salt_address0,
        sig_0_salt_ce0,
        sig_0_salt_we0,
        sig_0_salt_d0,
        sig_0_salt_q0,
        viewOutputs_address0,
        viewOutputs_ce0,
        viewOutputs_we0,
        viewOutputs_d0,
        viewOutputs_q0,
        viewOutputs_address1,
        viewOutputs_ce1,
        viewOutputs_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_pp0_stage0 = 29'd32;
parameter    ap_ST_fsm_pp0_stage1 = 29'd64;
parameter    ap_ST_fsm_state9 = 29'd128;
parameter    ap_ST_fsm_pp1_stage0 = 29'd256;
parameter    ap_ST_fsm_state22 = 29'd512;
parameter    ap_ST_fsm_state23 = 29'd1024;
parameter    ap_ST_fsm_state24 = 29'd2048;
parameter    ap_ST_fsm_state25 = 29'd4096;
parameter    ap_ST_fsm_state26 = 29'd8192;
parameter    ap_ST_fsm_state27 = 29'd16384;
parameter    ap_ST_fsm_state28 = 29'd32768;
parameter    ap_ST_fsm_state29 = 29'd65536;
parameter    ap_ST_fsm_state30 = 29'd131072;
parameter    ap_ST_fsm_state31 = 29'd262144;
parameter    ap_ST_fsm_state32 = 29'd524288;
parameter    ap_ST_fsm_pp2_stage0 = 29'd1048576;
parameter    ap_ST_fsm_state36 = 29'd2097152;
parameter    ap_ST_fsm_state37 = 29'd4194304;
parameter    ap_ST_fsm_state38 = 29'd8388608;
parameter    ap_ST_fsm_state39 = 29'd16777216;
parameter    ap_ST_fsm_state40 = 29'd33554432;
parameter    ap_ST_fsm_state41 = 29'd67108864;
parameter    ap_ST_fsm_state42 = 29'd134217728;
parameter    ap_ST_fsm_state43 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] privateKey_address0;
output   privateKey_ce0;
input  [31:0] privateKey_q0;
output  [2:0] pubKey_address0;
output   pubKey_ce0;
input  [31:0] pubKey_q0;
output  [2:0] plaintext_address0;
output   plaintext_ce0;
input  [31:0] plaintext_q0;
output  [11:0] message_address0;
output   message_ce0;
input  [7:0] message_q0;
input  [63:0] messageByteLength;
output  [11:0] sig_0_proofs_seed1_address0;
output   sig_0_proofs_seed1_ce0;
output   sig_0_proofs_seed1_we0;
output  [7:0] sig_0_proofs_seed1_d0;
output  [11:0] sig_0_proofs_seed2_address0;
output   sig_0_proofs_seed2_ce0;
output   sig_0_proofs_seed2_we0;
output  [7:0] sig_0_proofs_seed2_d0;
output  [9:0] sig_0_proofs_inputS_address0;
output   sig_0_proofs_inputS_ce0;
output   sig_0_proofs_inputS_we0;
output  [31:0] sig_0_proofs_inputS_d0;
output  [14:0] sig_0_proofs_commun_address0;
output   sig_0_proofs_commun_ce0;
output   sig_0_proofs_commun_we0;
output  [7:0] sig_0_proofs_commun_d0;
output  [12:0] sig_0_proofs_view3C_address0;
output   sig_0_proofs_view3C_ce0;
output   sig_0_proofs_view3C_we0;
output  [7:0] sig_0_proofs_view3C_d0;
output  [5:0] sig_0_challengeBits_address0;
output   sig_0_challengeBits_ce0;
output   sig_0_challengeBits_we0;
output  [7:0] sig_0_challengeBits_d0;
input  [7:0] sig_0_challengeBits_q0;
output  [4:0] sig_0_salt_address0;
output   sig_0_salt_ce0;
output   sig_0_salt_we0;
output  [7:0] sig_0_salt_d0;
input  [7:0] sig_0_salt_q0;
output  [13:0] viewOutputs_address0;
output   viewOutputs_ce0;
output   viewOutputs_we0;
output  [31:0] viewOutputs_d0;
input  [31:0] viewOutputs_q0;
output  [13:0] viewOutputs_address1;
output   viewOutputs_ce1;
input  [31:0] viewOutputs_q1;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] privateKey_address0;
reg privateKey_ce0;
reg[2:0] plaintext_address0;
reg plaintext_ce0;
reg[11:0] message_address0;
reg message_ce0;
reg[5:0] sig_0_challengeBits_address0;
reg sig_0_challengeBits_ce0;
reg sig_0_challengeBits_we0;
reg[4:0] sig_0_salt_address0;
reg sig_0_salt_ce0;
reg sig_0_salt_we0;
reg[13:0] viewOutputs_address0;
reg viewOutputs_ce0;
reg viewOutputs_we0;
reg viewOutputs_ce1;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] loop_0_reg_521;
reg   [6:0] loop_1_reg_533;
reg   [6:0] loop_1_reg_533_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
wire    ap_block_state13_pp1_stage0_iter3;
wire    ap_block_state14_pp1_stage0_iter4;
wire    ap_block_state15_pp1_stage0_iter5;
wire    ap_block_state16_pp1_stage0_iter6;
wire    ap_block_state17_pp1_stage0_iter7;
wire    ap_block_state18_pp1_stage0_iter8;
wire    ap_block_state19_pp1_stage0_iter9;
wire    ap_block_state20_pp1_stage0_iter10;
wire    ap_block_state21_pp1_stage0_iter11;
wire    ap_block_pp1_stage0_11001;
reg   [6:0] loop_1_reg_533_pp1_iter2_reg;
reg   [6:0] loop_1_reg_533_pp1_iter3_reg;
reg   [6:0] loop_1_reg_533_pp1_iter4_reg;
reg   [6:0] loop_1_reg_533_pp1_iter5_reg;
reg   [6:0] loop_1_reg_533_pp1_iter6_reg;
reg   [6:0] loop_1_reg_533_pp1_iter7_reg;
reg   [6:0] loop_1_reg_533_pp1_iter8_reg;
reg   [6:0] loop_1_reg_533_pp1_iter9_reg;
reg   [11:0] indvar_flatten19_reg_556;
reg   [7:0] i_0_reg_567;
reg   [4:0] indvar_flatten_reg_578;
reg   [1:0] j1_0_reg_589;
reg   [2:0] loop_2_reg_600;
wire   [0:0] icmp_ln1761_fu_800_p2;
wire    ap_CS_fsm_state3;
wire   [7:0] k_fu_806_p2;
reg   [7:0] k_reg_1541;
wire  signed [11:0] sext_ln1772_fu_838_p1;
reg  signed [11:0] sext_ln1772_reg_1546;
wire   [12:0] sub_ln1786_fu_854_p2;
reg   [12:0] sub_ln1786_reg_1551;
wire   [12:0] add_ln1786_fu_860_p2;
reg   [12:0] add_ln1786_reg_1556;
wire   [12:0] add_ln1786_1_fu_866_p2;
reg   [12:0] add_ln1786_1_reg_1561;
wire   [8:0] add_ln1763_fu_872_p2;
reg   [8:0] add_ln1763_reg_1566;
wire    ap_CS_fsm_state4;
wire   [1:0] j_3_fu_886_p2;
reg   [1:0] j_3_reg_1574;
wire   [11:0] add_ln1772_fu_896_p2;
reg   [11:0] add_ln1772_reg_1579;
wire   [0:0] tmp_7_fu_878_p3;
wire   [0:0] tmp_11_fu_901_p3;
reg   [0:0] tmp_11_reg_1584;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] trunc_ln1771_fu_909_p1;
reg   [3:0] trunc_ln1771_reg_1588;
reg   [1:0] trunc_ln1_reg_1604;
wire   [7:0] tmp_0_q0;
reg   [7:0] tmp_0_load_reg_1609;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state7_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [7:0] tmp_0_q1;
reg   [7:0] tmp_0_load_1_reg_1614;
wire   [4:0] loop_fu_959_p2;
reg   [4:0] loop_reg_1629;
wire   [0:0] icmp_ln1774_fu_987_p2;
reg   [0:0] icmp_ln1774_reg_1634;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter1_reg;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter2_reg;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter3_reg;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter4_reg;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter5_reg;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter6_reg;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter7_reg;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter8_reg;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter9_reg;
reg   [0:0] icmp_ln1774_reg_1634_pp1_iter10_reg;
wire   [6:0] loop_4_fu_993_p2;
reg   [6:0] loop_4_reg_1638;
reg    ap_enable_reg_pp1_iter0;
wire   [6:0] add_ln1775_fu_999_p2;
reg   [2:0] tmp_15_reg_1648;
reg   [2:0] tmp_15_reg_1648_pp1_iter1_reg;
reg   [2:0] tmp_15_reg_1648_pp1_iter2_reg;
reg   [2:0] tmp_15_reg_1648_pp1_iter3_reg;
reg   [2:0] tmp_15_reg_1648_pp1_iter4_reg;
reg   [2:0] tmp_15_reg_1648_pp1_iter5_reg;
reg   [2:0] tmp_15_reg_1648_pp1_iter6_reg;
reg   [2:0] tmp_15_reg_1648_pp1_iter7_reg;
reg   [2:0] tmp_15_reg_1648_pp1_iter8_reg;
reg   [2:0] tmp_15_reg_1648_pp1_iter9_reg;
reg   [2:0] tmp_15_reg_1648_pp1_iter10_reg;
wire   [8:0] add_ln1775_1_fu_1043_p2;
reg   [8:0] add_ln1775_1_reg_1673;
wire   [2:0] j_fu_1081_p2;
reg   [2:0] j_reg_1681;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln1785_fu_1075_p2;
wire   [12:0] add_ln1786_4_fu_1116_p2;
reg   [12:0] add_ln1786_4_reg_1696;
wire   [0:0] icmp_ln1808_fu_1170_p2;
reg   [0:0] icmp_ln1808_reg_1706;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state33_pp2_stage0_iter0;
wire    ap_block_state34_pp2_stage0_iter1;
wire    ap_block_state35_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln1808_reg_1706_pp2_iter1_reg;
wire   [11:0] add_ln1808_fu_1176_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [7:0] select_ln1808_1_fu_1202_p3;
reg   [7:0] select_ln1808_1_reg_1715;
wire   [2:0] select_ln1809_fu_1270_p3;
reg   [2:0] select_ln1809_reg_1722;
reg   [2:0] select_ln1809_reg_1722_pp2_iter1_reg;
wire   [1:0] select_ln1809_1_fu_1282_p3;
reg   [1:0] select_ln1809_1_reg_1728;
wire   [10:0] select_ln1809_2_fu_1304_p3;
reg   [10:0] select_ln1809_2_reg_1734;
reg   [10:0] select_ln1809_2_reg_1734_pp2_iter1_reg;
wire   [2:0] loop_3_fu_1312_p2;
wire   [4:0] select_ln1809_3_fu_1324_p3;
wire   [2:0] j_5_fu_1402_p2;
reg   [2:0] j_5_reg_1757;
wire    ap_CS_fsm_state37;
wire   [63:0] zext_ln1817_fu_1408_p1;
reg   [63:0] zext_ln1817_reg_1762;
wire   [0:0] icmp_ln1816_fu_1396_p2;
wire    ap_CS_fsm_state38;
reg   [31:0] viewOutputs_load_reg_1782;
wire   [7:0] i_1_fu_1449_p2;
reg   [7:0] i_1_reg_1790;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln1826_fu_1443_p2;
wire   [1:0] or_ln_fu_1522_p3;
reg   [1:0] or_ln_reg_1800;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state5;
wire    grp_createRandomTape_fu_657_ap_ready;
wire    grp_createRandomTape_fu_657_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_state9;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state33;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg   [11:0] views_inputShare_address0;
reg    views_inputShare_ce0;
reg    views_inputShare_we0;
wire   [31:0] views_inputShare_d0;
wire   [31:0] views_inputShare_q0;
reg   [11:0] views_inputShare_address1;
reg    views_inputShare_ce1;
reg    views_inputShare_we1;
wire   [31:0] views_inputShare_d1;
wire   [31:0] views_inputShare_q1;
reg   [15:0] views_communicatedBi_address0;
reg    views_communicatedBi_ce0;
reg    views_communicatedBi_we0;
wire   [7:0] views_communicatedBi_q0;
reg   [11:0] views_outputShare_address0;
reg    views_outputShare_ce0;
reg    views_outputShare_we0;
wire   [31:0] views_outputShare_q0;
reg   [14:0] as_hashes_address0;
reg    as_hashes_ce0;
reg    as_hashes_we0;
wire   [7:0] as_hashes_q0;
reg   [13:0] seeds_seed_address0;
reg    seeds_seed_ce0;
reg    seeds_seed_we0;
wire   [7:0] seeds_seed_q0;
reg   [8:0] tape_tape_address0;
reg    tape_tape_ce0;
reg    tape_tape_we0;
reg   [7:0] tape_tape_d0;
wire   [7:0] tape_tape_q0;
reg    tape_tape_ce1;
wire   [7:0] tape_tape_q1;
reg   [5:0] tmp_0_address0;
reg    tmp_0_ce0;
reg    tmp_0_we0;
reg   [5:0] tmp_0_address1;
reg    tmp_0_ce1;
reg   [5:0] tmp_1_address0;
reg    tmp_1_ce0;
reg    tmp_1_we0;
wire   [7:0] tmp_1_q0;
reg   [5:0] tmp_2_address0;
reg    tmp_2_ce0;
reg    tmp_2_we0;
wire   [7:0] tmp_2_q0;
reg   [5:0] tmp_3_address0;
reg    tmp_3_ce0;
reg    tmp_3_we0;
wire   [7:0] tmp_3_q0;
wire   [31:0] slab_assign_q0;
wire   [31:0] slab_assign_q1;
reg   [5:0] output_address0;
reg    output_ce0;
reg    output_we0;
wire   [31:0] output_d0;
wire   [31:0] output_q0;
wire    grp_computeSeeds_2_fu_635_ap_start;
wire    grp_computeSeeds_2_fu_635_ap_done;
wire    grp_computeSeeds_2_fu_635_ap_idle;
wire    grp_computeSeeds_2_fu_635_ap_ready;
wire   [13:0] grp_computeSeeds_2_fu_635_allSeeds_seed_address0;
wire    grp_computeSeeds_2_fu_635_allSeeds_seed_ce0;
wire    grp_computeSeeds_2_fu_635_allSeeds_seed_we0;
wire   [7:0] grp_computeSeeds_2_fu_635_allSeeds_seed_d0;
wire   [4:0] grp_computeSeeds_2_fu_635_salt_0_address0;
wire    grp_computeSeeds_2_fu_635_salt_0_ce0;
wire    grp_computeSeeds_2_fu_635_salt_0_we0;
wire   [7:0] grp_computeSeeds_2_fu_635_salt_0_d0;
wire   [2:0] grp_computeSeeds_2_fu_635_privateKey_address0;
wire    grp_computeSeeds_2_fu_635_privateKey_ce0;
wire   [2:0] grp_computeSeeds_2_fu_635_publicKey_address0;
wire    grp_computeSeeds_2_fu_635_publicKey_ce0;
wire   [2:0] grp_computeSeeds_2_fu_635_plaintext_address0;
wire    grp_computeSeeds_2_fu_635_plaintext_ce0;
wire   [11:0] grp_computeSeeds_2_fu_635_message_address0;
wire    grp_computeSeeds_2_fu_635_message_ce0;
wire    grp_createRandomTape_fu_657_ap_start;
wire    grp_createRandomTape_fu_657_ap_idle;
wire   [13:0] grp_createRandomTape_fu_657_seed_address0;
wire    grp_createRandomTape_fu_657_seed_ce0;
wire   [4:0] grp_createRandomTape_fu_657_salt_0_address0;
wire    grp_createRandomTape_fu_657_salt_0_ce0;
wire   [5:0] grp_createRandomTape_fu_657_tape_0_address0;
wire    grp_createRandomTape_fu_657_tape_0_ce0;
wire    grp_createRandomTape_fu_657_tape_0_we0;
wire   [7:0] grp_createRandomTape_fu_657_tape_0_d0;
wire   [5:0] grp_createRandomTape_fu_657_tape_1_address0;
wire    grp_createRandomTape_fu_657_tape_1_ce0;
wire    grp_createRandomTape_fu_657_tape_1_we0;
wire   [7:0] grp_createRandomTape_fu_657_tape_1_d0;
wire   [5:0] grp_createRandomTape_fu_657_tape_2_address0;
wire    grp_createRandomTape_fu_657_tape_2_ce0;
wire    grp_createRandomTape_fu_657_tape_2_we0;
wire   [7:0] grp_createRandomTape_fu_657_tape_2_d0;
wire   [5:0] grp_createRandomTape_fu_657_tape_3_address0;
wire    grp_createRandomTape_fu_657_tape_3_ce0;
wire    grp_createRandomTape_fu_657_tape_3_we0;
wire   [7:0] grp_createRandomTape_fu_657_tape_3_d0;
wire    grp_H3_2_fu_680_ap_start;
wire    grp_H3_2_fu_680_ap_done;
wire    grp_H3_2_fu_680_ap_idle;
wire    grp_H3_2_fu_680_ap_ready;
wire   [5:0] grp_H3_2_fu_680_circuitOutput_address0;
wire    grp_H3_2_fu_680_circuitOutput_ce0;
wire   [2:0] grp_H3_2_fu_680_plaintext_address0;
wire    grp_H3_2_fu_680_plaintext_ce0;
wire   [14:0] grp_H3_2_fu_680_as_hashes_address0;
wire    grp_H3_2_fu_680_as_hashes_ce0;
wire   [5:0] grp_H3_2_fu_680_challengeBits_0_address0;
wire    grp_H3_2_fu_680_challengeBits_0_ce0;
wire    grp_H3_2_fu_680_challengeBits_0_we0;
wire   [7:0] grp_H3_2_fu_680_challengeBits_0_d0;
wire   [4:0] grp_H3_2_fu_680_salt_0_address0;
wire    grp_H3_2_fu_680_salt_0_ce0;
wire   [11:0] grp_H3_2_fu_680_message_address0;
wire    grp_H3_2_fu_680_message_ce0;
wire   [13:0] grp_H3_2_fu_680_viewOutputs_address0;
wire    grp_H3_2_fu_680_viewOutputs_ce0;
wire    grp_createRandomTape_1_fu_701_ap_start;
wire    grp_createRandomTape_1_fu_701_ap_done;
wire    grp_createRandomTape_1_fu_701_ap_idle;
wire    grp_createRandomTape_1_fu_701_ap_ready;
wire   [13:0] grp_createRandomTape_1_fu_701_seed_address0;
wire    grp_createRandomTape_1_fu_701_seed_ce0;
wire   [4:0] grp_createRandomTape_1_fu_701_salt_0_address0;
wire    grp_createRandomTape_1_fu_701_salt_0_ce0;
wire   [8:0] grp_createRandomTape_1_fu_701_tape_address0;
wire    grp_createRandomTape_1_fu_701_tape_ce0;
wire    grp_createRandomTape_1_fu_701_tape_we0;
wire   [7:0] grp_createRandomTape_1_fu_701_tape_d0;
wire    grp_Commit_2_fu_717_ap_start;
wire    grp_Commit_2_fu_717_ap_done;
wire    grp_Commit_2_fu_717_ap_idle;
wire    grp_Commit_2_fu_717_ap_ready;
wire   [13:0] grp_Commit_2_fu_717_seed_address0;
wire    grp_Commit_2_fu_717_seed_ce0;
reg   [2:0] grp_Commit_2_fu_717_seed_offset1;
wire   [11:0] grp_Commit_2_fu_717_view_inputShare_address0;
wire    grp_Commit_2_fu_717_view_inputShare_ce0;
reg   [2:0] grp_Commit_2_fu_717_view_inputShare_offset3;
wire   [15:0] grp_Commit_2_fu_717_view_communicatedBits_address0;
wire    grp_Commit_2_fu_717_view_communicatedBits_ce0;
reg   [2:0] grp_Commit_2_fu_717_view_communicatedBits_offset4;
wire   [11:0] grp_Commit_2_fu_717_view_outputShare_address0;
wire    grp_Commit_2_fu_717_view_outputShare_ce0;
reg   [2:0] grp_Commit_2_fu_717_view_outputShare_offset5;
wire   [14:0] grp_Commit_2_fu_717_hash_address0;
wire    grp_Commit_2_fu_717_hash_ce0;
wire    grp_Commit_2_fu_717_hash_we0;
wire   [7:0] grp_Commit_2_fu_717_hash_d0;
reg   [2:0] grp_Commit_2_fu_717_hash_offset6;
wire    grp_mpc_LowMC_2_fu_760_ap_start;
wire    grp_mpc_LowMC_2_fu_760_ap_done;
wire    grp_mpc_LowMC_2_fu_760_ap_idle;
wire    grp_mpc_LowMC_2_fu_760_ap_ready;
wire   [8:0] grp_mpc_LowMC_2_fu_760_tapes_tape_address0;
wire    grp_mpc_LowMC_2_fu_760_tapes_tape_ce0;
wire   [8:0] grp_mpc_LowMC_2_fu_760_tapes_tape_address1;
wire    grp_mpc_LowMC_2_fu_760_tapes_tape_ce1;
wire   [11:0] grp_mpc_LowMC_2_fu_760_views_inputShare_address0;
wire    grp_mpc_LowMC_2_fu_760_views_inputShare_ce0;
wire   [15:0] grp_mpc_LowMC_2_fu_760_views_communicatedBi_address0;
wire    grp_mpc_LowMC_2_fu_760_views_communicatedBi_ce0;
wire    grp_mpc_LowMC_2_fu_760_views_communicatedBi_we0;
wire   [7:0] grp_mpc_LowMC_2_fu_760_views_communicatedBi_d0;
wire   [11:0] grp_mpc_LowMC_2_fu_760_views_outputShare_address0;
wire    grp_mpc_LowMC_2_fu_760_views_outputShare_ce0;
wire    grp_mpc_LowMC_2_fu_760_views_outputShare_we0;
wire   [31:0] grp_mpc_LowMC_2_fu_760_views_outputShare_d0;
wire   [2:0] grp_mpc_LowMC_2_fu_760_plaintext_address0;
wire    grp_mpc_LowMC_2_fu_760_plaintext_ce0;
wire   [5:0] grp_mpc_LowMC_2_fu_760_slab_address0;
wire    grp_mpc_LowMC_2_fu_760_slab_ce0;
wire   [3:0] grp_mpc_LowMC_2_fu_760_slab_we0;
wire   [31:0] grp_mpc_LowMC_2_fu_760_slab_d0;
wire   [5:0] grp_mpc_LowMC_2_fu_760_slab_address1;
wire    grp_mpc_LowMC_2_fu_760_slab_ce1;
wire   [3:0] grp_mpc_LowMC_2_fu_760_slab_we1;
wire   [31:0] grp_mpc_LowMC_2_fu_760_slab_d1;
wire    grp_prove_25_fu_779_ap_start;
wire    grp_prove_25_fu_779_ap_done;
wire    grp_prove_25_fu_779_ap_idle;
wire    grp_prove_25_fu_779_ap_ready;
wire   [11:0] grp_prove_25_fu_779_proof_0_seed1_address0;
wire    grp_prove_25_fu_779_proof_0_seed1_ce0;
wire    grp_prove_25_fu_779_proof_0_seed1_we0;
wire   [7:0] grp_prove_25_fu_779_proof_0_seed1_d0;
wire   [11:0] grp_prove_25_fu_779_proof_0_seed2_address0;
wire    grp_prove_25_fu_779_proof_0_seed2_ce0;
wire    grp_prove_25_fu_779_proof_0_seed2_we0;
wire   [7:0] grp_prove_25_fu_779_proof_0_seed2_d0;
wire   [9:0] grp_prove_25_fu_779_proof_0_inputShare_address0;
wire    grp_prove_25_fu_779_proof_0_inputShare_ce0;
wire    grp_prove_25_fu_779_proof_0_inputShare_we0;
wire   [31:0] grp_prove_25_fu_779_proof_0_inputShare_d0;
wire   [14:0] grp_prove_25_fu_779_proof_0_communicatedBits_address0;
wire    grp_prove_25_fu_779_proof_0_communicatedBits_ce0;
wire    grp_prove_25_fu_779_proof_0_communicatedBits_we0;
wire   [7:0] grp_prove_25_fu_779_proof_0_communicatedBits_d0;
wire   [12:0] grp_prove_25_fu_779_proof_0_view3Commitment_address0;
wire    grp_prove_25_fu_779_proof_0_view3Commitment_ce0;
wire    grp_prove_25_fu_779_proof_0_view3Commitment_we0;
wire   [7:0] grp_prove_25_fu_779_proof_0_view3Commitment_d0;
wire   [13:0] grp_prove_25_fu_779_seeds_seed_address0;
wire    grp_prove_25_fu_779_seeds_seed_ce0;
wire   [11:0] grp_prove_25_fu_779_views_inputShare_address0;
wire    grp_prove_25_fu_779_views_inputShare_ce0;
wire   [15:0] grp_prove_25_fu_779_views_communicatedBits_address0;
wire    grp_prove_25_fu_779_views_communicatedBits_ce0;
wire   [14:0] grp_prove_25_fu_779_commitments_hashes_address0;
wire    grp_prove_25_fu_779_commitments_hashes_ce0;
reg   [7:0] k_0_reg_485;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state32;
reg   [1:0] j_0_reg_497;
wire    ap_CS_fsm_state22;
reg   [8:0] phi_mul_reg_509;
reg   [4:0] ap_phi_mux_loop_0_phi_fu_525_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_loop_1_phi_fu_537_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] j_1_reg_545;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state23;
reg   [7:0] ap_phi_mux_i_0_phi_fu_571_p4;
wire    ap_block_pp2_stage0;
reg   [1:0] ap_phi_mux_j1_0_phi_fu_593_p4;
reg   [2:0] j_2_reg_611;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state36;
reg   [7:0] round_assign_reg_623;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state43;
reg    grp_computeSeeds_2_fu_635_ap_start_reg;
reg    grp_createRandomTape_fu_657_ap_start_reg;
reg    grp_H3_2_fu_680_ap_start_reg;
reg    grp_createRandomTape_1_fu_701_ap_start_reg;
reg    grp_Commit_2_fu_717_ap_start_reg;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
reg    grp_mpc_LowMC_2_fu_760_ap_start_reg;
wire    ap_CS_fsm_state26;
reg    grp_prove_25_fu_779_ap_start_reg;
wire   [63:0] zext_ln1772_fu_913_p1;
wire   [63:0] zext_ln1772_1_fu_924_p1;
wire   [63:0] zext_ln1772_2_fu_944_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1772_3_fu_954_p1;
wire  signed [63:0] sext_ln1772_1_fu_982_p1;
wire   [63:0] zext_ln1775_fu_1031_p1;
wire   [63:0] zext_ln1775_4_fu_1071_p1;
wire  signed [63:0] sext_ln1786_fu_1101_p1;
wire  signed [63:0] sext_ln1786_1_fu_1111_p1;
wire   [63:0] zext_ln1786_fu_1087_p1;
wire  signed [63:0] sext_ln1786_2_fu_1121_p1;
wire   [63:0] zext_ln1811_6_fu_1378_p1;
wire  signed [63:0] sext_ln1811_fu_1391_p1;
wire   [63:0] tmp_13_fu_1413_p3;
wire   [63:0] tmp_14_fu_1422_p3;
wire   [63:0] zext_ln54_fu_1465_p1;
wire   [7:0] tmp_4_fu_1056_p6;
wire   [9:0] tmp_5_fu_816_p3;
wire   [10:0] zext_ln1772_6_fu_828_p1;
wire   [10:0] zext_ln1772_4_fu_812_p1;
wire   [10:0] sub_ln1772_fu_832_p2;
wire   [11:0] tmp_6_fu_842_p3;
wire   [12:0] zext_ln1786_1_fu_850_p1;
wire   [12:0] zext_ln1772_5_fu_824_p1;
wire   [11:0] zext_ln1772_7_fu_892_p1;
wire   [3:0] or_ln1772_fu_918_p2;
wire   [3:0] or_ln1772_1_fu_939_p2;
wire   [3:0] or_ln1772_2_fu_949_p2;
wire   [13:0] tmp_12_fu_976_p3;
wire   [6:0] mul_ln1775_fu_1009_p0;
wire   [15:0] mul_ln1775_fu_1009_p2;
wire   [6:0] grp_fu_1025_p2;
wire   [8:0] zext_ln1775_3_fu_1039_p1;
wire  signed [6:0] sext_ln1775_fu_1049_p1;
wire   [31:0] tmp_4_fu_1056_p5;
wire   [12:0] zext_ln1786_2_fu_1092_p1;
wire   [12:0] add_ln1786_2_fu_1096_p2;
wire   [12:0] add_ln1786_3_fu_1106_p2;
wire   [31:0] xor_ln1786_fu_1125_p2;
wire   [9:0] shl_ln_fu_1142_p3;
wire   [10:0] zext_ln1811_fu_1150_p1;
wire   [10:0] zext_ln1808_fu_1138_p1;
wire   [10:0] sub_ln1811_fu_1154_p2;
wire   [10:0] zext_ln1809_fu_1160_p1;
wire   [0:0] icmp_ln1809_fu_1188_p2;
wire   [7:0] i_fu_1182_p2;
wire   [9:0] shl_ln1811_mid1_fu_1214_p3;
wire   [10:0] zext_ln1811_3_fu_1222_p1;
wire   [10:0] zext_ln1808_1_fu_1210_p1;
wire   [10:0] sub_ln1811_2_fu_1226_p2;
wire   [0:0] icmp_ln1810_fu_1246_p2;
wire   [0:0] xor_ln1808_fu_1240_p2;
wire   [1:0] select_ln1808_fu_1194_p3;
wire   [0:0] and_ln1808_fu_1252_p2;
wire   [0:0] or_ln1809_fu_1264_p2;
wire   [1:0] j_6_fu_1258_p2;
wire   [10:0] select_ln1808_2_fu_1232_p3;
wire   [10:0] zext_ln1809_1_fu_1278_p1;
wire   [10:0] add_ln1811_fu_1164_p2;
wire   [10:0] add_ln1811_2_fu_1290_p2;
wire   [10:0] select_ln1808_3_fu_1296_p3;
wire   [4:0] add_ln1809_1_fu_1318_p2;
wire   [9:0] tmp_8_fu_1335_p3;
wire   [10:0] zext_ln1811_2_fu_1342_p1;
wire   [10:0] zext_ln1811_1_fu_1332_p1;
wire   [10:0] sub_ln1811_1_fu_1346_p2;
wire   [10:0] zext_ln1811_4_fu_1352_p1;
wire   [10:0] add_ln1811_1_fu_1355_p2;
wire   [12:0] tmp_12_cast_fu_1361_p3;
wire   [12:0] zext_ln1811_5_fu_1369_p1;
wire   [12:0] add_ln1811_3_fu_1372_p2;
wire   [14:0] tmp_10_fu_1383_p4;
wire   [31:0] xor_ln1817_fu_1431_p2;
wire   [5:0] trunc_ln2_fu_1455_p4;
wire   [1:0] trunc_ln386_fu_1470_p1;
wire   [2:0] bitNumber_assign_fu_1474_p3;
wire   [2:0] xor_ln54_fu_1482_p2;
wire   [7:0] zext_ln54_1_fu_1488_p1;
wire   [7:0] lshr_ln54_fu_1492_p2;
wire   [2:0] xor_ln54_1_fu_1502_p2;
wire   [7:0] zext_ln54_2_fu_1508_p1;
wire   [7:0] lshr_ln54_1_fu_1512_p2;
wire   [0:0] trunc_ln386_1_fu_1498_p1;
wire   [0:0] trunc_ln54_fu_1518_p1;
reg   [28:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [15:0] mul_ln1775_fu_1009_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 grp_computeSeeds_2_fu_635_ap_start_reg = 1'b0;
#0 grp_createRandomTape_fu_657_ap_start_reg = 1'b0;
#0 grp_H3_2_fu_680_ap_start_reg = 1'b0;
#0 grp_createRandomTape_1_fu_701_ap_start_reg = 1'b0;
#0 grp_Commit_2_fu_717_ap_start_reg = 1'b0;
#0 grp_mpc_LowMC_2_fu_760_ap_start_reg = 1'b0;
#0 grp_prove_25_fu_779_ap_start_reg = 1'b0;
end

sign_picnic1_viewbtn #(
    .DataWidth( 32 ),
    .AddressRange( 2628 ),
    .AddressWidth( 12 ))
views_inputShare_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(views_inputShare_address0),
    .ce0(views_inputShare_ce0),
    .we0(views_inputShare_we0),
    .d0(views_inputShare_d0),
    .q0(views_inputShare_q0),
    .address1(views_inputShare_address1),
    .ce1(views_inputShare_ce1),
    .we1(views_inputShare_we1),
    .d1(views_inputShare_d1),
    .q1(views_inputShare_q1)
);

sign_picnic1_viewbun #(
    .DataWidth( 8 ),
    .AddressRange( 49275 ),
    .AddressWidth( 16 ))
views_communicatedBi_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(views_communicatedBi_address0),
    .ce0(views_communicatedBi_ce0),
    .we0(views_communicatedBi_we0),
    .d0(grp_mpc_LowMC_2_fu_760_views_communicatedBi_d0),
    .q0(views_communicatedBi_q0)
);

sign_picnic1_viewbvn #(
    .DataWidth( 32 ),
    .AddressRange( 2628 ),
    .AddressWidth( 12 ))
views_outputShare_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(views_outputShare_address0),
    .ce0(views_outputShare_ce0),
    .we0(views_outputShare_we0),
    .d0(grp_mpc_LowMC_2_fu_760_views_outputShare_d0),
    .q0(views_outputShare_q0)
);

sign_picnic1_as_hbwn #(
    .DataWidth( 8 ),
    .AddressRange( 21024 ),
    .AddressWidth( 15 ))
as_hashes_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(as_hashes_address0),
    .ce0(as_hashes_ce0),
    .we0(as_hashes_we0),
    .d0(grp_Commit_2_fu_717_hash_d0),
    .q0(as_hashes_q0)
);

sign_picnic1_seedbxn #(
    .DataWidth( 8 ),
    .AddressRange( 10512 ),
    .AddressWidth( 14 ))
seeds_seed_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(seeds_seed_address0),
    .ce0(seeds_seed_ce0),
    .we0(seeds_seed_we0),
    .d0(grp_computeSeeds_2_fu_635_allSeeds_seed_d0),
    .q0(seeds_seed_q0)
);

sign_picnic1_tapebyn #(
    .DataWidth( 8 ),
    .AddressRange( 498 ),
    .AddressWidth( 9 ))
tape_tape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tape_tape_address0),
    .ce0(tape_tape_ce0),
    .we0(tape_tape_we0),
    .d0(tape_tape_d0),
    .q0(tape_tape_q0),
    .address1(grp_mpc_LowMC_2_fu_760_tapes_tape_address1),
    .ce1(tape_tape_ce1),
    .q1(tape_tape_q1)
);

sign_picnic1_tmp_0 #(
    .DataWidth( 8 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
tmp_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_0_address0),
    .ce0(tmp_0_ce0),
    .we0(tmp_0_we0),
    .d0(grp_createRandomTape_fu_657_tape_0_d0),
    .q0(tmp_0_q0),
    .address1(tmp_0_address1),
    .ce1(tmp_0_ce1),
    .q1(tmp_0_q1)
);

sign_picnic1_tmp_1 #(
    .DataWidth( 8 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
tmp_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_1_address0),
    .ce0(tmp_1_ce0),
    .we0(tmp_1_we0),
    .d0(grp_createRandomTape_fu_657_tape_1_d0),
    .q0(tmp_1_q0)
);

sign_picnic1_tmp_1 #(
    .DataWidth( 8 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
tmp_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_2_address0),
    .ce0(tmp_2_ce0),
    .we0(tmp_2_we0),
    .d0(grp_createRandomTape_fu_657_tape_2_d0),
    .q0(tmp_2_q0)
);

sign_picnic1_tmp_1 #(
    .DataWidth( 8 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
tmp_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_3_address0),
    .ce0(tmp_3_ce0),
    .we0(tmp_3_we0),
    .d0(grp_createRandomTape_fu_657_tape_3_d0),
    .q0(tmp_3_q0)
);

sign_picnic1_slabbzo #(
    .DataWidth( 32 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
slab_assign_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_mpc_LowMC_2_fu_760_slab_address0),
    .ce0(grp_mpc_LowMC_2_fu_760_slab_ce0),
    .we0(grp_mpc_LowMC_2_fu_760_slab_we0),
    .d0(grp_mpc_LowMC_2_fu_760_slab_d0),
    .q0(slab_assign_q0),
    .address1(grp_mpc_LowMC_2_fu_760_slab_address1),
    .ce1(grp_mpc_LowMC_2_fu_760_slab_ce1),
    .we1(grp_mpc_LowMC_2_fu_760_slab_we1),
    .d1(grp_mpc_LowMC_2_fu_760_slab_d1),
    .q1(slab_assign_q1)
);

matrix_mul_prod #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_address0),
    .ce0(output_ce0),
    .we0(output_we0),
    .d0(output_d0),
    .q0(output_q0)
);

computeSeeds_2 grp_computeSeeds_2_fu_635(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_computeSeeds_2_fu_635_ap_start),
    .ap_done(grp_computeSeeds_2_fu_635_ap_done),
    .ap_idle(grp_computeSeeds_2_fu_635_ap_idle),
    .ap_ready(grp_computeSeeds_2_fu_635_ap_ready),
    .allSeeds_seed_address0(grp_computeSeeds_2_fu_635_allSeeds_seed_address0),
    .allSeeds_seed_ce0(grp_computeSeeds_2_fu_635_allSeeds_seed_ce0),
    .allSeeds_seed_we0(grp_computeSeeds_2_fu_635_allSeeds_seed_we0),
    .allSeeds_seed_d0(grp_computeSeeds_2_fu_635_allSeeds_seed_d0),
    .salt_0_address0(grp_computeSeeds_2_fu_635_salt_0_address0),
    .salt_0_ce0(grp_computeSeeds_2_fu_635_salt_0_ce0),
    .salt_0_we0(grp_computeSeeds_2_fu_635_salt_0_we0),
    .salt_0_d0(grp_computeSeeds_2_fu_635_salt_0_d0),
    .privateKey_address0(grp_computeSeeds_2_fu_635_privateKey_address0),
    .privateKey_ce0(grp_computeSeeds_2_fu_635_privateKey_ce0),
    .privateKey_q0(privateKey_q0),
    .publicKey_address0(grp_computeSeeds_2_fu_635_publicKey_address0),
    .publicKey_ce0(grp_computeSeeds_2_fu_635_publicKey_ce0),
    .publicKey_q0(pubKey_q0),
    .plaintext_address0(grp_computeSeeds_2_fu_635_plaintext_address0),
    .plaintext_ce0(grp_computeSeeds_2_fu_635_plaintext_ce0),
    .plaintext_q0(plaintext_q0),
    .message_address0(grp_computeSeeds_2_fu_635_message_address0),
    .message_ce0(grp_computeSeeds_2_fu_635_message_ce0),
    .message_q0(message_q0),
    .messageByteLength(messageByteLength)
);

createRandomTape grp_createRandomTape_fu_657(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_createRandomTape_fu_657_ap_start),
    .ap_done(grp_createRandomTape_fu_657_ap_done),
    .ap_idle(grp_createRandomTape_fu_657_ap_idle),
    .ap_ready(grp_createRandomTape_fu_657_ap_ready),
    .seed_address0(grp_createRandomTape_fu_657_seed_address0),
    .seed_ce0(grp_createRandomTape_fu_657_seed_ce0),
    .seed_q0(seeds_seed_q0),
    .seed_offset(k_0_reg_485),
    .seed_offset1(j_0_reg_497),
    .salt_0_address0(grp_createRandomTape_fu_657_salt_0_address0),
    .salt_0_ce0(grp_createRandomTape_fu_657_salt_0_ce0),
    .salt_0_q0(sig_0_salt_q0),
    .roundNumber(k_0_reg_485),
    .playerNumber(j_0_reg_497),
    .tape_0_address0(grp_createRandomTape_fu_657_tape_0_address0),
    .tape_0_ce0(grp_createRandomTape_fu_657_tape_0_ce0),
    .tape_0_we0(grp_createRandomTape_fu_657_tape_0_we0),
    .tape_0_d0(grp_createRandomTape_fu_657_tape_0_d0),
    .tape_0_q0(tmp_0_q0),
    .tape_1_address0(grp_createRandomTape_fu_657_tape_1_address0),
    .tape_1_ce0(grp_createRandomTape_fu_657_tape_1_ce0),
    .tape_1_we0(grp_createRandomTape_fu_657_tape_1_we0),
    .tape_1_d0(grp_createRandomTape_fu_657_tape_1_d0),
    .tape_1_q0(tmp_1_q0),
    .tape_2_address0(grp_createRandomTape_fu_657_tape_2_address0),
    .tape_2_ce0(grp_createRandomTape_fu_657_tape_2_ce0),
    .tape_2_we0(grp_createRandomTape_fu_657_tape_2_we0),
    .tape_2_d0(grp_createRandomTape_fu_657_tape_2_d0),
    .tape_2_q0(tmp_2_q0),
    .tape_3_address0(grp_createRandomTape_fu_657_tape_3_address0),
    .tape_3_ce0(grp_createRandomTape_fu_657_tape_3_ce0),
    .tape_3_we0(grp_createRandomTape_fu_657_tape_3_we0),
    .tape_3_d0(grp_createRandomTape_fu_657_tape_3_d0),
    .tape_3_q0(tmp_3_q0)
);

H3_2 grp_H3_2_fu_680(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_H3_2_fu_680_ap_start),
    .ap_done(grp_H3_2_fu_680_ap_done),
    .ap_idle(grp_H3_2_fu_680_ap_idle),
    .ap_ready(grp_H3_2_fu_680_ap_ready),
    .circuitOutput_address0(grp_H3_2_fu_680_circuitOutput_address0),
    .circuitOutput_ce0(grp_H3_2_fu_680_circuitOutput_ce0),
    .circuitOutput_q0(output_q0),
    .plaintext_address0(grp_H3_2_fu_680_plaintext_address0),
    .plaintext_ce0(grp_H3_2_fu_680_plaintext_ce0),
    .plaintext_q0(plaintext_q0),
    .as_hashes_address0(grp_H3_2_fu_680_as_hashes_address0),
    .as_hashes_ce0(grp_H3_2_fu_680_as_hashes_ce0),
    .as_hashes_q0(as_hashes_q0),
    .challengeBits_0_address0(grp_H3_2_fu_680_challengeBits_0_address0),
    .challengeBits_0_ce0(grp_H3_2_fu_680_challengeBits_0_ce0),
    .challengeBits_0_we0(grp_H3_2_fu_680_challengeBits_0_we0),
    .challengeBits_0_d0(grp_H3_2_fu_680_challengeBits_0_d0),
    .challengeBits_0_q0(sig_0_challengeBits_q0),
    .salt_0_address0(grp_H3_2_fu_680_salt_0_address0),
    .salt_0_ce0(grp_H3_2_fu_680_salt_0_ce0),
    .salt_0_q0(sig_0_salt_q0),
    .message_address0(grp_H3_2_fu_680_message_address0),
    .message_ce0(grp_H3_2_fu_680_message_ce0),
    .message_q0(message_q0),
    .messageByteLength(messageByteLength),
    .viewOutputs_address0(grp_H3_2_fu_680_viewOutputs_address0),
    .viewOutputs_ce0(grp_H3_2_fu_680_viewOutputs_ce0),
    .viewOutputs_q0(viewOutputs_q0)
);

createRandomTape_1 grp_createRandomTape_1_fu_701(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_createRandomTape_1_fu_701_ap_start),
    .ap_done(grp_createRandomTape_1_fu_701_ap_done),
    .ap_idle(grp_createRandomTape_1_fu_701_ap_idle),
    .ap_ready(grp_createRandomTape_1_fu_701_ap_ready),
    .seed_address0(grp_createRandomTape_1_fu_701_seed_address0),
    .seed_ce0(grp_createRandomTape_1_fu_701_seed_ce0),
    .seed_q0(seeds_seed_q0),
    .seed_offset(k_0_reg_485),
    .salt_0_address0(grp_createRandomTape_1_fu_701_salt_0_address0),
    .salt_0_ce0(grp_createRandomTape_1_fu_701_salt_0_ce0),
    .salt_0_q0(sig_0_salt_q0),
    .roundNumber(k_0_reg_485),
    .tape_address0(grp_createRandomTape_1_fu_701_tape_address0),
    .tape_ce0(grp_createRandomTape_1_fu_701_tape_ce0),
    .tape_we0(grp_createRandomTape_1_fu_701_tape_we0),
    .tape_d0(grp_createRandomTape_1_fu_701_tape_d0),
    .tape_q0(tape_tape_q0)
);

Commit_2 grp_Commit_2_fu_717(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Commit_2_fu_717_ap_start),
    .ap_done(grp_Commit_2_fu_717_ap_done),
    .ap_idle(grp_Commit_2_fu_717_ap_idle),
    .ap_ready(grp_Commit_2_fu_717_ap_ready),
    .seed_address0(grp_Commit_2_fu_717_seed_address0),
    .seed_ce0(grp_Commit_2_fu_717_seed_ce0),
    .seed_q0(seeds_seed_q0),
    .seed_offset(k_0_reg_485),
    .seed_offset1(grp_Commit_2_fu_717_seed_offset1),
    .view_inputShare_address0(grp_Commit_2_fu_717_view_inputShare_address0),
    .view_inputShare_ce0(grp_Commit_2_fu_717_view_inputShare_ce0),
    .view_inputShare_q0(views_inputShare_q0),
    .view_inputShare_offset(k_0_reg_485),
    .view_inputShare_offset3(grp_Commit_2_fu_717_view_inputShare_offset3),
    .view_communicatedBits_address0(grp_Commit_2_fu_717_view_communicatedBits_address0),
    .view_communicatedBits_ce0(grp_Commit_2_fu_717_view_communicatedBits_ce0),
    .view_communicatedBits_q0(views_communicatedBi_q0),
    .view_communicatedBits_offset(k_0_reg_485),
    .view_communicatedBits_offset4(grp_Commit_2_fu_717_view_communicatedBits_offset4),
    .view_outputShare_address0(grp_Commit_2_fu_717_view_outputShare_address0),
    .view_outputShare_ce0(grp_Commit_2_fu_717_view_outputShare_ce0),
    .view_outputShare_q0(views_outputShare_q0),
    .view_outputShare_offset(k_0_reg_485),
    .view_outputShare_offset5(grp_Commit_2_fu_717_view_outputShare_offset5),
    .hash_address0(grp_Commit_2_fu_717_hash_address0),
    .hash_ce0(grp_Commit_2_fu_717_hash_ce0),
    .hash_we0(grp_Commit_2_fu_717_hash_we0),
    .hash_d0(grp_Commit_2_fu_717_hash_d0),
    .hash_q0(as_hashes_q0),
    .hash_offset(k_0_reg_485),
    .hash_offset6(grp_Commit_2_fu_717_hash_offset6)
);

mpc_LowMC_2 grp_mpc_LowMC_2_fu_760(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mpc_LowMC_2_fu_760_ap_start),
    .ap_done(grp_mpc_LowMC_2_fu_760_ap_done),
    .ap_idle(grp_mpc_LowMC_2_fu_760_ap_idle),
    .ap_ready(grp_mpc_LowMC_2_fu_760_ap_ready),
    .tapes_tape_address0(grp_mpc_LowMC_2_fu_760_tapes_tape_address0),
    .tapes_tape_ce0(grp_mpc_LowMC_2_fu_760_tapes_tape_ce0),
    .tapes_tape_q0(tape_tape_q0),
    .tapes_tape_address1(grp_mpc_LowMC_2_fu_760_tapes_tape_address1),
    .tapes_tape_ce1(grp_mpc_LowMC_2_fu_760_tapes_tape_ce1),
    .tapes_tape_q1(tape_tape_q1),
    .views_inputShare_address0(grp_mpc_LowMC_2_fu_760_views_inputShare_address0),
    .views_inputShare_ce0(grp_mpc_LowMC_2_fu_760_views_inputShare_ce0),
    .views_inputShare_q0(views_inputShare_q0),
    .views_inputShare_offset(k_0_reg_485),
    .views_communicatedBi_address0(grp_mpc_LowMC_2_fu_760_views_communicatedBi_address0),
    .views_communicatedBi_ce0(grp_mpc_LowMC_2_fu_760_views_communicatedBi_ce0),
    .views_communicatedBi_we0(grp_mpc_LowMC_2_fu_760_views_communicatedBi_we0),
    .views_communicatedBi_d0(grp_mpc_LowMC_2_fu_760_views_communicatedBi_d0),
    .views_communicatedBi_q0(views_communicatedBi_q0),
    .views_outputShare_address0(grp_mpc_LowMC_2_fu_760_views_outputShare_address0),
    .views_outputShare_ce0(grp_mpc_LowMC_2_fu_760_views_outputShare_ce0),
    .views_outputShare_we0(grp_mpc_LowMC_2_fu_760_views_outputShare_we0),
    .views_outputShare_d0(grp_mpc_LowMC_2_fu_760_views_outputShare_d0),
    .plaintext_address0(grp_mpc_LowMC_2_fu_760_plaintext_address0),
    .plaintext_ce0(grp_mpc_LowMC_2_fu_760_plaintext_ce0),
    .plaintext_q0(plaintext_q0),
    .slab_address0(grp_mpc_LowMC_2_fu_760_slab_address0),
    .slab_ce0(grp_mpc_LowMC_2_fu_760_slab_ce0),
    .slab_we0(grp_mpc_LowMC_2_fu_760_slab_we0),
    .slab_d0(grp_mpc_LowMC_2_fu_760_slab_d0),
    .slab_q0(slab_assign_q0),
    .slab_address1(grp_mpc_LowMC_2_fu_760_slab_address1),
    .slab_ce1(grp_mpc_LowMC_2_fu_760_slab_ce1),
    .slab_we1(grp_mpc_LowMC_2_fu_760_slab_we1),
    .slab_d1(grp_mpc_LowMC_2_fu_760_slab_d1),
    .slab_q1(slab_assign_q1)
);

prove_25 grp_prove_25_fu_779(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_prove_25_fu_779_ap_start),
    .ap_done(grp_prove_25_fu_779_ap_done),
    .ap_idle(grp_prove_25_fu_779_ap_idle),
    .ap_ready(grp_prove_25_fu_779_ap_ready),
    .proof_0_seed1_address0(grp_prove_25_fu_779_proof_0_seed1_address0),
    .proof_0_seed1_ce0(grp_prove_25_fu_779_proof_0_seed1_ce0),
    .proof_0_seed1_we0(grp_prove_25_fu_779_proof_0_seed1_we0),
    .proof_0_seed1_d0(grp_prove_25_fu_779_proof_0_seed1_d0),
    .proof_seed1_offset1(round_assign_reg_623),
    .proof_0_seed2_address0(grp_prove_25_fu_779_proof_0_seed2_address0),
    .proof_0_seed2_ce0(grp_prove_25_fu_779_proof_0_seed2_ce0),
    .proof_0_seed2_we0(grp_prove_25_fu_779_proof_0_seed2_we0),
    .proof_0_seed2_d0(grp_prove_25_fu_779_proof_0_seed2_d0),
    .proof_0_inputShare_address0(grp_prove_25_fu_779_proof_0_inputShare_address0),
    .proof_0_inputShare_ce0(grp_prove_25_fu_779_proof_0_inputShare_ce0),
    .proof_0_inputShare_we0(grp_prove_25_fu_779_proof_0_inputShare_we0),
    .proof_0_inputShare_d0(grp_prove_25_fu_779_proof_0_inputShare_d0),
    .proof_0_communicatedBits_address0(grp_prove_25_fu_779_proof_0_communicatedBits_address0),
    .proof_0_communicatedBits_ce0(grp_prove_25_fu_779_proof_0_communicatedBits_ce0),
    .proof_0_communicatedBits_we0(grp_prove_25_fu_779_proof_0_communicatedBits_we0),
    .proof_0_communicatedBits_d0(grp_prove_25_fu_779_proof_0_communicatedBits_d0),
    .proof_0_view3Commitment_address0(grp_prove_25_fu_779_proof_0_view3Commitment_address0),
    .proof_0_view3Commitment_ce0(grp_prove_25_fu_779_proof_0_view3Commitment_ce0),
    .proof_0_view3Commitment_we0(grp_prove_25_fu_779_proof_0_view3Commitment_we0),
    .proof_0_view3Commitment_d0(grp_prove_25_fu_779_proof_0_view3Commitment_d0),
    .challenge(or_ln_reg_1800),
    .seeds_seed_address0(grp_prove_25_fu_779_seeds_seed_address0),
    .seeds_seed_ce0(grp_prove_25_fu_779_seeds_seed_ce0),
    .seeds_seed_q0(seeds_seed_q0),
    .views_inputShare_address0(grp_prove_25_fu_779_views_inputShare_address0),
    .views_inputShare_ce0(grp_prove_25_fu_779_views_inputShare_ce0),
    .views_inputShare_q0(views_inputShare_q0),
    .views_communicatedBits_address0(grp_prove_25_fu_779_views_communicatedBits_address0),
    .views_communicatedBits_ce0(grp_prove_25_fu_779_views_communicatedBits_ce0),
    .views_communicatedBits_q0(views_communicatedBi_q0),
    .commitments_hashes_address0(grp_prove_25_fu_779_commitments_hashes_address0),
    .commitments_hashes_ce0(grp_prove_25_fu_779_commitments_hashes_ce0),
    .commitments_hashes_q0(as_hashes_q0)
);

crypto_sign_urem_bAo #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
crypto_sign_urem_bAo_U186(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln1775_fu_999_p2),
    .din1(7'd36),
    .ce(1'b1),
    .dout(grp_fu_1025_p2)
);

crypto_sign_mux_4bBo #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
crypto_sign_mux_4bBo_U187(
    .din0(tmp_0_q0),
    .din1(tmp_1_q0),
    .din2(tmp_2_q0),
    .din3(tmp_3_q0),
    .din4(tmp_4_fu_1056_p5),
    .dout(tmp_4_fu_1056_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_createRandomTape_fu_657_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((grp_createRandomTape_fu_657_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state10)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state33) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state33)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state33);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Commit_2_fu_717_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27))) begin
            grp_Commit_2_fu_717_ap_start_reg <= 1'b1;
        end else if ((grp_Commit_2_fu_717_ap_ready == 1'b1)) begin
            grp_Commit_2_fu_717_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_H3_2_fu_680_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln1816_fu_1396_p2 == 1'd1))) begin
            grp_H3_2_fu_680_ap_start_reg <= 1'b1;
        end else if ((grp_H3_2_fu_680_ap_ready == 1'b1)) begin
            grp_H3_2_fu_680_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_computeSeeds_2_fu_635_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_computeSeeds_2_fu_635_ap_start_reg <= 1'b1;
        end else if ((grp_computeSeeds_2_fu_635_ap_ready == 1'b1)) begin
            grp_computeSeeds_2_fu_635_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_createRandomTape_1_fu_701_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_878_p3 == 1'd1))) begin
            grp_createRandomTape_1_fu_701_ap_start_reg <= 1'b1;
        end else if ((grp_createRandomTape_1_fu_701_ap_ready == 1'b1)) begin
            grp_createRandomTape_1_fu_701_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_createRandomTape_fu_657_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_7_fu_878_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_createRandomTape_fu_657_ap_start_reg <= 1'b1;
        end else if ((grp_createRandomTape_fu_657_ap_ready == 1'b1)) begin
            grp_createRandomTape_fu_657_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mpc_LowMC_2_fu_760_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln1785_fu_1075_p2 == 1'd1))) begin
            grp_mpc_LowMC_2_fu_760_ap_start_reg <= 1'b1;
        end else if ((grp_mpc_LowMC_2_fu_760_ap_ready == 1'b1)) begin
            grp_mpc_LowMC_2_fu_760_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_prove_25_fu_779_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state42)) begin
            grp_prove_25_fu_779_ap_start_reg <= 1'b1;
        end else if ((grp_prove_25_fu_779_ap_ready == 1'b1)) begin
            grp_prove_25_fu_779_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd0))) begin
        i_0_reg_567 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln1808_reg_1706 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_0_reg_567 <= select_ln1808_1_reg_1715;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd0))) begin
        indvar_flatten19_reg_556 <= 12'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln1808_fu_1170_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten19_reg_556 <= add_ln1808_fu_1176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd0))) begin
        indvar_flatten_reg_578 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln1808_fu_1170_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten_reg_578 <= select_ln1809_3_fu_1324_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd0))) begin
        j1_0_reg_589 <= 2'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln1808_reg_1706 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j1_0_reg_589 <= select_ln1809_1_reg_1728;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j_0_reg_497 <= j_3_reg_1574;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd1))) begin
        j_0_reg_497 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_createRandomTape_1_fu_701_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        j_1_reg_545 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        j_1_reg_545 <= j_reg_1681;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        j_2_reg_611 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        j_2_reg_611 <= j_5_reg_1757;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Commit_2_fu_717_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        k_0_reg_485 <= k_reg_1541;
    end else if (((grp_computeSeeds_2_fu_635_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        k_0_reg_485 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_createRandomTape_fu_657_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        loop_0_reg_521 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_11_reg_1584 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        loop_0_reg_521 <= loop_reg_1629;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        loop_1_reg_533 <= 7'd0;
    end else if (((icmp_ln1774_reg_1634 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        loop_1_reg_533 <= loop_4_reg_1638;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd0))) begin
        loop_2_reg_600 <= 3'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln1808_fu_1170_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        loop_2_reg_600 <= loop_3_fu_1312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        phi_mul_reg_509 <= add_ln1763_reg_1566;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd1))) begin
        phi_mul_reg_509 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_prove_25_fu_779_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
        round_assign_reg_623 <= i_1_reg_1790;
    end else if (((grp_H3_2_fu_680_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        round_assign_reg_623 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln1763_reg_1566 <= add_ln1763_fu_872_p2;
        j_3_reg_1574 <= j_3_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_fu_878_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln1772_reg_1579 <= add_ln1772_fu_896_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1774_reg_1634_pp1_iter9_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln1775_1_reg_1673 <= add_ln1775_1_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd1))) begin
        add_ln1786_1_reg_1561[12 : 2] <= add_ln1786_1_fu_866_p2[12 : 2];
        add_ln1786_reg_1556[12 : 2] <= add_ln1786_fu_860_p2[12 : 2];
        sext_ln1772_reg_1546 <= sext_ln1772_fu_838_p1;
        sub_ln1786_reg_1551[12 : 2] <= sub_ln1786_fu_854_p2[12 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1785_fu_1075_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        add_ln1786_4_reg_1696 <= add_ln1786_4_fu_1116_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i_1_reg_1790 <= i_1_fu_1449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln1774_reg_1634 <= icmp_ln1774_fu_987_p2;
        icmp_ln1774_reg_1634_pp1_iter1_reg <= icmp_ln1774_reg_1634;
        loop_1_reg_533_pp1_iter1_reg <= loop_1_reg_533;
        tmp_15_reg_1648_pp1_iter1_reg <= tmp_15_reg_1648;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln1774_reg_1634_pp1_iter10_reg <= icmp_ln1774_reg_1634_pp1_iter9_reg;
        icmp_ln1774_reg_1634_pp1_iter2_reg <= icmp_ln1774_reg_1634_pp1_iter1_reg;
        icmp_ln1774_reg_1634_pp1_iter3_reg <= icmp_ln1774_reg_1634_pp1_iter2_reg;
        icmp_ln1774_reg_1634_pp1_iter4_reg <= icmp_ln1774_reg_1634_pp1_iter3_reg;
        icmp_ln1774_reg_1634_pp1_iter5_reg <= icmp_ln1774_reg_1634_pp1_iter4_reg;
        icmp_ln1774_reg_1634_pp1_iter6_reg <= icmp_ln1774_reg_1634_pp1_iter5_reg;
        icmp_ln1774_reg_1634_pp1_iter7_reg <= icmp_ln1774_reg_1634_pp1_iter6_reg;
        icmp_ln1774_reg_1634_pp1_iter8_reg <= icmp_ln1774_reg_1634_pp1_iter7_reg;
        icmp_ln1774_reg_1634_pp1_iter9_reg <= icmp_ln1774_reg_1634_pp1_iter8_reg;
        loop_1_reg_533_pp1_iter2_reg <= loop_1_reg_533_pp1_iter1_reg;
        loop_1_reg_533_pp1_iter3_reg <= loop_1_reg_533_pp1_iter2_reg;
        loop_1_reg_533_pp1_iter4_reg <= loop_1_reg_533_pp1_iter3_reg;
        loop_1_reg_533_pp1_iter5_reg <= loop_1_reg_533_pp1_iter4_reg;
        loop_1_reg_533_pp1_iter6_reg <= loop_1_reg_533_pp1_iter5_reg;
        loop_1_reg_533_pp1_iter7_reg <= loop_1_reg_533_pp1_iter6_reg;
        loop_1_reg_533_pp1_iter8_reg <= loop_1_reg_533_pp1_iter7_reg;
        loop_1_reg_533_pp1_iter9_reg <= loop_1_reg_533_pp1_iter8_reg;
        tmp_15_reg_1648_pp1_iter10_reg <= tmp_15_reg_1648_pp1_iter9_reg;
        tmp_15_reg_1648_pp1_iter2_reg <= tmp_15_reg_1648_pp1_iter1_reg;
        tmp_15_reg_1648_pp1_iter3_reg <= tmp_15_reg_1648_pp1_iter2_reg;
        tmp_15_reg_1648_pp1_iter4_reg <= tmp_15_reg_1648_pp1_iter3_reg;
        tmp_15_reg_1648_pp1_iter5_reg <= tmp_15_reg_1648_pp1_iter4_reg;
        tmp_15_reg_1648_pp1_iter6_reg <= tmp_15_reg_1648_pp1_iter5_reg;
        tmp_15_reg_1648_pp1_iter7_reg <= tmp_15_reg_1648_pp1_iter6_reg;
        tmp_15_reg_1648_pp1_iter8_reg <= tmp_15_reg_1648_pp1_iter7_reg;
        tmp_15_reg_1648_pp1_iter9_reg <= tmp_15_reg_1648_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln1808_reg_1706 <= icmp_ln1808_fu_1170_p2;
        icmp_ln1808_reg_1706_pp2_iter1_reg <= icmp_ln1808_reg_1706;
        select_ln1809_2_reg_1734_pp2_iter1_reg <= select_ln1809_2_reg_1734;
        select_ln1809_reg_1722_pp2_iter1_reg <= select_ln1809_reg_1722;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        j_5_reg_1757 <= j_5_fu_1402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j_reg_1681 <= j_fu_1081_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        k_reg_1541 <= k_fu_806_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        loop_4_reg_1638 <= loop_4_fu_993_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_11_reg_1584 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        loop_reg_1629 <= loop_fu_959_p2;
        tmp_0_load_1_reg_1614 <= tmp_0_q1;
        tmp_0_load_reg_1609 <= tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        or_ln_reg_1800 <= or_ln_fu_1522_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln1808_fu_1170_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln1808_1_reg_1715 <= select_ln1808_1_fu_1202_p3;
        select_ln1809_1_reg_1728 <= select_ln1809_1_fu_1282_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln1808_fu_1170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln1809_2_reg_1734 <= select_ln1809_2_fu_1304_p3;
        select_ln1809_reg_1722 <= select_ln1809_fu_1270_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_11_reg_1584 <= ap_phi_mux_loop_0_phi_fu_525_p4[32'd4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1774_fu_987_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_15_reg_1648 <= {{mul_ln1775_fu_1009_p2[15:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_11_fu_901_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln1771_reg_1588 <= trunc_ln1771_fu_909_p1;
        trunc_ln1_reg_1604 <= {{ap_phi_mux_loop_0_phi_fu_525_p4[3:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        viewOutputs_load_reg_1782 <= viewOutputs_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1816_fu_1396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        zext_ln1817_reg_1762[2 : 0] <= zext_ln1817_fu_1408_p1[2 : 0];
    end
end

always @ (*) begin
    if ((tmp_11_fu_901_p3 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1774_fu_987_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1808_fu_1170_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state41) & (icmp_ln1826_fu_1443_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln1808_reg_1706 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_0_phi_fu_571_p4 = select_ln1808_1_reg_1715;
    end else begin
        ap_phi_mux_i_0_phi_fu_571_p4 = i_0_reg_567;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln1808_reg_1706 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_j1_0_phi_fu_593_p4 = select_ln1809_1_reg_1728;
    end else begin
        ap_phi_mux_j1_0_phi_fu_593_p4 = j1_0_reg_589;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_11_reg_1584 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_loop_0_phi_fu_525_p4 = loop_reg_1629;
    end else begin
        ap_phi_mux_loop_0_phi_fu_525_p4 = loop_0_reg_521;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln1774_reg_1634 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_loop_1_phi_fu_537_p4 = loop_4_reg_1638;
    end else begin
        ap_phi_mux_loop_1_phi_fu_537_p4 = loop_1_reg_533;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) & (icmp_ln1826_fu_1443_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        as_hashes_address0 = grp_prove_25_fu_779_commitments_hashes_address0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        as_hashes_address0 = grp_Commit_2_fu_717_hash_address0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        as_hashes_address0 = grp_H3_2_fu_680_as_hashes_address0;
    end else begin
        as_hashes_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        as_hashes_ce0 = grp_prove_25_fu_779_commitments_hashes_ce0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        as_hashes_ce0 = grp_Commit_2_fu_717_hash_ce0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        as_hashes_ce0 = grp_H3_2_fu_680_as_hashes_ce0;
    end else begin
        as_hashes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        as_hashes_we0 = grp_Commit_2_fu_717_hash_we0;
    end else begin
        as_hashes_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_Commit_2_fu_717_hash_offset6 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_Commit_2_fu_717_hash_offset6 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_Commit_2_fu_717_hash_offset6 = 3'd0;
    end else begin
        grp_Commit_2_fu_717_hash_offset6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_Commit_2_fu_717_seed_offset1 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_Commit_2_fu_717_seed_offset1 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_Commit_2_fu_717_seed_offset1 = 3'd0;
    end else begin
        grp_Commit_2_fu_717_seed_offset1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_Commit_2_fu_717_view_communicatedBits_offset4 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_Commit_2_fu_717_view_communicatedBits_offset4 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_Commit_2_fu_717_view_communicatedBits_offset4 = 3'd0;
    end else begin
        grp_Commit_2_fu_717_view_communicatedBits_offset4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_Commit_2_fu_717_view_inputShare_offset3 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_Commit_2_fu_717_view_inputShare_offset3 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_Commit_2_fu_717_view_inputShare_offset3 = 3'd0;
    end else begin
        grp_Commit_2_fu_717_view_inputShare_offset3 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_Commit_2_fu_717_view_outputShare_offset5 = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_Commit_2_fu_717_view_outputShare_offset5 = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_Commit_2_fu_717_view_outputShare_offset5 = 3'd0;
    end else begin
        grp_Commit_2_fu_717_view_outputShare_offset5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        message_address0 = grp_H3_2_fu_680_message_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        message_address0 = grp_computeSeeds_2_fu_635_message_address0;
    end else begin
        message_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        message_ce0 = grp_H3_2_fu_680_message_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        message_ce0 = grp_computeSeeds_2_fu_635_message_ce0;
    end else begin
        message_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_address0 = zext_ln1817_reg_1762;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        output_address0 = grp_H3_2_fu_680_circuitOutput_address0;
    end else begin
        output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        output_ce0 = grp_H3_2_fu_680_circuitOutput_ce0;
    end else begin
        output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_we0 = 1'b1;
    end else begin
        output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        plaintext_address0 = grp_mpc_LowMC_2_fu_760_plaintext_address0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        plaintext_address0 = grp_H3_2_fu_680_plaintext_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        plaintext_address0 = grp_computeSeeds_2_fu_635_plaintext_address0;
    end else begin
        plaintext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        plaintext_ce0 = grp_mpc_LowMC_2_fu_760_plaintext_ce0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        plaintext_ce0 = grp_H3_2_fu_680_plaintext_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        plaintext_ce0 = grp_computeSeeds_2_fu_635_plaintext_ce0;
    end else begin
        plaintext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        privateKey_address0 = zext_ln1786_fu_1087_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        privateKey_address0 = grp_computeSeeds_2_fu_635_privateKey_address0;
    end else begin
        privateKey_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        privateKey_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        privateKey_ce0 = grp_computeSeeds_2_fu_635_privateKey_ce0;
    end else begin
        privateKey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        seeds_seed_address0 = grp_prove_25_fu_779_seeds_seed_address0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        seeds_seed_address0 = grp_Commit_2_fu_717_seed_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        seeds_seed_address0 = grp_createRandomTape_1_fu_701_seed_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        seeds_seed_address0 = grp_createRandomTape_fu_657_seed_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        seeds_seed_address0 = grp_computeSeeds_2_fu_635_allSeeds_seed_address0;
    end else begin
        seeds_seed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        seeds_seed_ce0 = grp_prove_25_fu_779_seeds_seed_ce0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        seeds_seed_ce0 = grp_Commit_2_fu_717_seed_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        seeds_seed_ce0 = grp_createRandomTape_1_fu_701_seed_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        seeds_seed_ce0 = grp_createRandomTape_fu_657_seed_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        seeds_seed_ce0 = grp_computeSeeds_2_fu_635_allSeeds_seed_ce0;
    end else begin
        seeds_seed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        seeds_seed_we0 = grp_computeSeeds_2_fu_635_allSeeds_seed_we0;
    end else begin
        seeds_seed_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        sig_0_challengeBits_address0 = zext_ln54_fu_1465_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        sig_0_challengeBits_address0 = grp_H3_2_fu_680_challengeBits_0_address0;
    end else begin
        sig_0_challengeBits_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        sig_0_challengeBits_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        sig_0_challengeBits_ce0 = grp_H3_2_fu_680_challengeBits_0_ce0;
    end else begin
        sig_0_challengeBits_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        sig_0_challengeBits_we0 = grp_H3_2_fu_680_challengeBits_0_we0;
    end else begin
        sig_0_challengeBits_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        sig_0_salt_address0 = grp_createRandomTape_1_fu_701_salt_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        sig_0_salt_address0 = grp_H3_2_fu_680_salt_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sig_0_salt_address0 = grp_createRandomTape_fu_657_salt_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_salt_address0 = grp_computeSeeds_2_fu_635_salt_0_address0;
    end else begin
        sig_0_salt_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        sig_0_salt_ce0 = grp_createRandomTape_1_fu_701_salt_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        sig_0_salt_ce0 = grp_H3_2_fu_680_salt_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sig_0_salt_ce0 = grp_createRandomTape_fu_657_salt_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_salt_ce0 = grp_computeSeeds_2_fu_635_salt_0_ce0;
    end else begin
        sig_0_salt_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sig_0_salt_we0 = grp_computeSeeds_2_fu_635_salt_0_we0;
    end else begin
        sig_0_salt_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        tape_tape_address0 = zext_ln1775_4_fu_1071_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        tape_tape_address0 = grp_mpc_LowMC_2_fu_760_tapes_tape_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tape_tape_address0 = grp_createRandomTape_1_fu_701_tape_address0;
    end else begin
        tape_tape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter11 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tape_tape_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        tape_tape_ce0 = grp_mpc_LowMC_2_fu_760_tapes_tape_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tape_tape_ce0 = grp_createRandomTape_1_fu_701_tape_ce0;
    end else begin
        tape_tape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tape_tape_ce1 = grp_mpc_LowMC_2_fu_760_tapes_tape_ce1;
    end else begin
        tape_tape_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        tape_tape_d0 = tmp_4_fu_1056_p6;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tape_tape_d0 = grp_createRandomTape_1_fu_701_tape_d0;
    end else begin
        tape_tape_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1774_reg_1634_pp1_iter10_reg == 1'd0) & (ap_enable_reg_pp1_iter11 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tape_tape_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tape_tape_we0 = grp_createRandomTape_1_fu_701_tape_we0;
    end else begin
        tape_tape_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        tmp_0_address0 = zext_ln1775_fu_1031_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        tmp_0_address0 = zext_ln1772_2_fu_944_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_0_address0 = zext_ln1772_fu_913_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_0_address0 = grp_createRandomTape_fu_657_tape_0_address0;
    end else begin
        tmp_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            tmp_0_address1 = zext_ln1772_3_fu_954_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_0_address1 = zext_ln1772_1_fu_924_p1;
        end else begin
            tmp_0_address1 = 'bx;
        end
    end else begin
        tmp_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp1_iter10 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        tmp_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_0_ce0 = grp_createRandomTape_fu_657_tape_0_ce0;
    end else begin
        tmp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_0_ce1 = 1'b1;
    end else begin
        tmp_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_0_we0 = grp_createRandomTape_fu_657_tape_0_we0;
    end else begin
        tmp_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        tmp_1_address0 = zext_ln1775_fu_1031_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_1_address0 = grp_createRandomTape_fu_657_tape_1_address0;
    end else begin
        tmp_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter10 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_1_ce0 = grp_createRandomTape_fu_657_tape_1_ce0;
    end else begin
        tmp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_1_we0 = grp_createRandomTape_fu_657_tape_1_we0;
    end else begin
        tmp_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        tmp_2_address0 = zext_ln1775_fu_1031_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_2_address0 = grp_createRandomTape_fu_657_tape_2_address0;
    end else begin
        tmp_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter10 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_2_ce0 = grp_createRandomTape_fu_657_tape_2_ce0;
    end else begin
        tmp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_2_we0 = grp_createRandomTape_fu_657_tape_2_we0;
    end else begin
        tmp_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter10 == 1'b1))) begin
        tmp_3_address0 = zext_ln1775_fu_1031_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_3_address0 = grp_createRandomTape_fu_657_tape_3_address0;
    end else begin
        tmp_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter10 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_3_ce0 = grp_createRandomTape_fu_657_tape_3_ce0;
    end else begin
        tmp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_3_we0 = grp_createRandomTape_fu_657_tape_3_we0;
    end else begin
        tmp_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        viewOutputs_address0 = tmp_13_fu_1413_p3;
    end else if (((icmp_ln1816_fu_1396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        viewOutputs_address0 = zext_ln1817_fu_1408_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        viewOutputs_address0 = sext_ln1811_fu_1391_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        viewOutputs_address0 = grp_H3_2_fu_680_viewOutputs_address0;
    end else begin
        viewOutputs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((icmp_ln1816_fu_1396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        viewOutputs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        viewOutputs_ce0 = grp_H3_2_fu_680_viewOutputs_ce0;
    end else begin
        viewOutputs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        viewOutputs_ce1 = 1'b1;
    end else begin
        viewOutputs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln1808_reg_1706_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        viewOutputs_we0 = 1'b1;
    end else begin
        viewOutputs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        views_communicatedBi_address0 = grp_prove_25_fu_779_views_communicatedBits_address0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        views_communicatedBi_address0 = grp_mpc_LowMC_2_fu_760_views_communicatedBi_address0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        views_communicatedBi_address0 = grp_Commit_2_fu_717_view_communicatedBits_address0;
    end else begin
        views_communicatedBi_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        views_communicatedBi_ce0 = grp_prove_25_fu_779_views_communicatedBits_ce0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        views_communicatedBi_ce0 = grp_mpc_LowMC_2_fu_760_views_communicatedBi_ce0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        views_communicatedBi_ce0 = grp_Commit_2_fu_717_view_communicatedBits_ce0;
    end else begin
        views_communicatedBi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        views_communicatedBi_we0 = grp_mpc_LowMC_2_fu_760_views_communicatedBi_we0;
    end else begin
        views_communicatedBi_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1785_fu_1075_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        views_inputShare_address0 = sext_ln1786_fu_1101_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        views_inputShare_address0 = sext_ln1772_1_fu_982_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        views_inputShare_address0 = grp_prove_25_fu_779_views_inputShare_address0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        views_inputShare_address0 = grp_mpc_LowMC_2_fu_760_views_inputShare_address0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        views_inputShare_address0 = grp_Commit_2_fu_717_view_inputShare_address0;
    end else begin
        views_inputShare_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        views_inputShare_address1 = sext_ln1786_2_fu_1121_p1;
    end else if (((icmp_ln1785_fu_1075_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        views_inputShare_address1 = sext_ln1786_1_fu_1111_p1;
    end else begin
        views_inputShare_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1785_fu_1075_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        views_inputShare_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        views_inputShare_ce0 = grp_prove_25_fu_779_views_inputShare_ce0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        views_inputShare_ce0 = grp_mpc_LowMC_2_fu_760_views_inputShare_ce0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        views_inputShare_ce0 = grp_Commit_2_fu_717_view_inputShare_ce0;
    end else begin
        views_inputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((icmp_ln1785_fu_1075_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        views_inputShare_ce1 = 1'b1;
    end else begin
        views_inputShare_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_11_reg_1584 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        views_inputShare_we0 = 1'b1;
    end else begin
        views_inputShare_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        views_inputShare_we1 = 1'b1;
    end else begin
        views_inputShare_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        views_outputShare_address0 = zext_ln1811_6_fu_1378_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        views_outputShare_address0 = grp_mpc_LowMC_2_fu_760_views_outputShare_address0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        views_outputShare_address0 = grp_Commit_2_fu_717_view_outputShare_address0;
    end else begin
        views_outputShare_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        views_outputShare_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        views_outputShare_ce0 = grp_mpc_LowMC_2_fu_760_views_outputShare_ce0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        views_outputShare_ce0 = grp_Commit_2_fu_717_view_outputShare_ce0;
    end else begin
        views_outputShare_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        views_outputShare_we0 = grp_mpc_LowMC_2_fu_760_views_outputShare_we0;
    end else begin
        views_outputShare_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_computeSeeds_2_fu_635_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1761_fu_800_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_878_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_createRandomTape_fu_657_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_11_fu_901_p3 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_11_fu_901_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln1774_fu_987_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter10 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter10 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln1774_fu_987_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_createRandomTape_1_fu_701_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln1785_fu_1075_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_mpc_LowMC_2_fu_760_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_Commit_2_fu_717_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_Commit_2_fu_717_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_Commit_2_fu_717_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln1808_fu_1170_p2 == 1'd1)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln1808_fu_1170_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln1816_fu_1396_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_H3_2_fu_680_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (icmp_ln1826_fu_1443_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((grp_prove_25_fu_779_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1763_fu_872_p2 = (phi_mul_reg_509 + 9'd166);

assign add_ln1772_fu_896_p2 = ($signed(zext_ln1772_7_fu_892_p1) + $signed(sext_ln1772_reg_1546));

assign add_ln1775_1_fu_1043_p2 = (zext_ln1775_3_fu_1039_p1 + phi_mul_reg_509);

assign add_ln1775_fu_999_p2 = (ap_phi_mux_loop_1_phi_fu_537_p4 + 7'd16);

assign add_ln1786_1_fu_866_p2 = (sub_ln1786_fu_854_p2 + 13'd8);

assign add_ln1786_2_fu_1096_p2 = (sub_ln1786_reg_1551 + zext_ln1786_2_fu_1092_p1);

assign add_ln1786_3_fu_1106_p2 = (add_ln1786_reg_1556 + zext_ln1786_2_fu_1092_p1);

assign add_ln1786_4_fu_1116_p2 = (add_ln1786_1_reg_1561 + zext_ln1786_2_fu_1092_p1);

assign add_ln1786_fu_860_p2 = (sub_ln1786_fu_854_p2 + 13'd4);

assign add_ln1808_fu_1176_p2 = (indvar_flatten19_reg_556 + 12'd1);

assign add_ln1809_1_fu_1318_p2 = (indvar_flatten_reg_578 + 5'd1);

assign add_ln1811_1_fu_1355_p2 = (sub_ln1811_1_fu_1346_p2 + zext_ln1811_4_fu_1352_p1);

assign add_ln1811_2_fu_1290_p2 = (select_ln1808_2_fu_1232_p3 + zext_ln1809_1_fu_1278_p1);

assign add_ln1811_3_fu_1372_p2 = (tmp_12_cast_fu_1361_p3 + zext_ln1811_5_fu_1369_p1);

assign add_ln1811_fu_1164_p2 = (sub_ln1811_fu_1154_p2 + zext_ln1809_fu_1160_p1);

assign and_ln1808_fu_1252_p2 = (xor_ln1808_fu_1240_p2 & icmp_ln1810_fu_1246_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_return = 1'd0;

assign bitNumber_assign_fu_1474_p3 = {{trunc_ln386_fu_1470_p1}, {1'd0}};

assign grp_Commit_2_fu_717_ap_start = grp_Commit_2_fu_717_ap_start_reg;

assign grp_H3_2_fu_680_ap_start = grp_H3_2_fu_680_ap_start_reg;

assign grp_computeSeeds_2_fu_635_ap_start = grp_computeSeeds_2_fu_635_ap_start_reg;

assign grp_createRandomTape_1_fu_701_ap_start = grp_createRandomTape_1_fu_701_ap_start_reg;

assign grp_createRandomTape_fu_657_ap_start = grp_createRandomTape_fu_657_ap_start_reg;

assign grp_mpc_LowMC_2_fu_760_ap_start = grp_mpc_LowMC_2_fu_760_ap_start_reg;

assign grp_prove_25_fu_779_ap_start = grp_prove_25_fu_779_ap_start_reg;

assign i_1_fu_1449_p2 = (round_assign_reg_623 + 8'd1);

assign i_fu_1182_p2 = (ap_phi_mux_i_0_phi_fu_571_p4 + 8'd1);

assign icmp_ln1761_fu_800_p2 = ((k_0_reg_485 < 8'd219) ? 1'b1 : 1'b0);

assign icmp_ln1774_fu_987_p2 = ((ap_phi_mux_loop_1_phi_fu_537_p4 == 7'd75) ? 1'b1 : 1'b0);

assign icmp_ln1785_fu_1075_p2 = ((j_1_reg_545 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln1808_fu_1170_p2 = ((indvar_flatten19_reg_556 == 12'd2628) ? 1'b1 : 1'b0);

assign icmp_ln1809_fu_1188_p2 = ((indvar_flatten_reg_578 == 5'd12) ? 1'b1 : 1'b0);

assign icmp_ln1810_fu_1246_p2 = ((loop_2_reg_600 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln1816_fu_1396_p2 = ((j_2_reg_611 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln1826_fu_1443_p2 = ((round_assign_reg_623 == 8'd219) ? 1'b1 : 1'b0);

assign j_3_fu_886_p2 = (j_0_reg_497 + 2'd1);

assign j_5_fu_1402_p2 = (j_2_reg_611 + 3'd1);

assign j_6_fu_1258_p2 = (select_ln1808_fu_1194_p3 + 2'd1);

assign j_fu_1081_p2 = (j_1_reg_545 + 3'd1);

assign k_fu_806_p2 = (k_0_reg_485 + 8'd1);

assign loop_3_fu_1312_p2 = (select_ln1809_fu_1270_p3 + 3'd1);

assign loop_4_fu_993_p2 = (ap_phi_mux_loop_1_phi_fu_537_p4 + 7'd1);

assign loop_fu_959_p2 = (5'd4 + loop_0_reg_521);

assign lshr_ln54_1_fu_1512_p2 = sig_0_challengeBits_q0 >> zext_ln54_2_fu_1508_p1;

assign lshr_ln54_fu_1492_p2 = sig_0_challengeBits_q0 >> zext_ln54_1_fu_1488_p1;

assign mul_ln1775_fu_1009_p0 = mul_ln1775_fu_1009_p00;

assign mul_ln1775_fu_1009_p00 = add_ln1775_fu_999_p2;

assign mul_ln1775_fu_1009_p2 = (mul_ln1775_fu_1009_p0 * $signed('hE4));

assign or_ln1772_1_fu_939_p2 = (trunc_ln1771_reg_1588 | 4'd2);

assign or_ln1772_2_fu_949_p2 = (trunc_ln1771_reg_1588 | 4'd3);

assign or_ln1772_fu_918_p2 = (trunc_ln1771_fu_909_p1 | 4'd1);

assign or_ln1809_fu_1264_p2 = (icmp_ln1809_fu_1188_p2 | and_ln1808_fu_1252_p2);

assign or_ln_fu_1522_p3 = {{trunc_ln386_1_fu_1498_p1}, {trunc_ln54_fu_1518_p1}};

assign output_d0 = (xor_ln1817_fu_1431_p2 ^ viewOutputs_q0);

assign pubKey_address0 = grp_computeSeeds_2_fu_635_publicKey_address0;

assign pubKey_ce0 = grp_computeSeeds_2_fu_635_publicKey_ce0;

assign select_ln1808_1_fu_1202_p3 = ((icmp_ln1809_fu_1188_p2[0:0] === 1'b1) ? i_fu_1182_p2 : ap_phi_mux_i_0_phi_fu_571_p4);

assign select_ln1808_2_fu_1232_p3 = ((icmp_ln1809_fu_1188_p2[0:0] === 1'b1) ? sub_ln1811_2_fu_1226_p2 : sub_ln1811_fu_1154_p2);

assign select_ln1808_3_fu_1296_p3 = ((icmp_ln1809_fu_1188_p2[0:0] === 1'b1) ? sub_ln1811_2_fu_1226_p2 : add_ln1811_fu_1164_p2);

assign select_ln1808_fu_1194_p3 = ((icmp_ln1809_fu_1188_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_j1_0_phi_fu_593_p4);

assign select_ln1809_1_fu_1282_p3 = ((and_ln1808_fu_1252_p2[0:0] === 1'b1) ? j_6_fu_1258_p2 : select_ln1808_fu_1194_p3);

assign select_ln1809_2_fu_1304_p3 = ((and_ln1808_fu_1252_p2[0:0] === 1'b1) ? add_ln1811_2_fu_1290_p2 : select_ln1808_3_fu_1296_p3);

assign select_ln1809_3_fu_1324_p3 = ((icmp_ln1809_fu_1188_p2[0:0] === 1'b1) ? 5'd1 : add_ln1809_1_fu_1318_p2);

assign select_ln1809_fu_1270_p3 = ((or_ln1809_fu_1264_p2[0:0] === 1'b1) ? 3'd0 : loop_2_reg_600);

assign sext_ln1772_1_fu_982_p1 = $signed(tmp_12_fu_976_p3);

assign sext_ln1772_fu_838_p1 = $signed(sub_ln1772_fu_832_p2);

assign sext_ln1775_fu_1049_p1 = $signed(tmp_15_reg_1648_pp1_iter10_reg);

assign sext_ln1786_1_fu_1111_p1 = $signed(add_ln1786_3_fu_1106_p2);

assign sext_ln1786_2_fu_1121_p1 = $signed(add_ln1786_4_reg_1696);

assign sext_ln1786_fu_1101_p1 = $signed(add_ln1786_2_fu_1096_p2);

assign sext_ln1811_fu_1391_p1 = $signed(tmp_10_fu_1383_p4);

assign shl_ln1811_mid1_fu_1214_p3 = {{i_fu_1182_p2}, {2'd0}};

assign shl_ln_fu_1142_p3 = {{ap_phi_mux_i_0_phi_fu_571_p4}, {2'd0}};

assign sig_0_challengeBits_d0 = grp_H3_2_fu_680_challengeBits_0_d0;

assign sig_0_proofs_commun_address0 = grp_prove_25_fu_779_proof_0_communicatedBits_address0;

assign sig_0_proofs_commun_ce0 = grp_prove_25_fu_779_proof_0_communicatedBits_ce0;

assign sig_0_proofs_commun_d0 = grp_prove_25_fu_779_proof_0_communicatedBits_d0;

assign sig_0_proofs_commun_we0 = grp_prove_25_fu_779_proof_0_communicatedBits_we0;

assign sig_0_proofs_inputS_address0 = grp_prove_25_fu_779_proof_0_inputShare_address0;

assign sig_0_proofs_inputS_ce0 = grp_prove_25_fu_779_proof_0_inputShare_ce0;

assign sig_0_proofs_inputS_d0 = grp_prove_25_fu_779_proof_0_inputShare_d0;

assign sig_0_proofs_inputS_we0 = grp_prove_25_fu_779_proof_0_inputShare_we0;

assign sig_0_proofs_seed1_address0 = grp_prove_25_fu_779_proof_0_seed1_address0;

assign sig_0_proofs_seed1_ce0 = grp_prove_25_fu_779_proof_0_seed1_ce0;

assign sig_0_proofs_seed1_d0 = grp_prove_25_fu_779_proof_0_seed1_d0;

assign sig_0_proofs_seed1_we0 = grp_prove_25_fu_779_proof_0_seed1_we0;

assign sig_0_proofs_seed2_address0 = grp_prove_25_fu_779_proof_0_seed2_address0;

assign sig_0_proofs_seed2_ce0 = grp_prove_25_fu_779_proof_0_seed2_ce0;

assign sig_0_proofs_seed2_d0 = grp_prove_25_fu_779_proof_0_seed2_d0;

assign sig_0_proofs_seed2_we0 = grp_prove_25_fu_779_proof_0_seed2_we0;

assign sig_0_proofs_view3C_address0 = grp_prove_25_fu_779_proof_0_view3Commitment_address0;

assign sig_0_proofs_view3C_ce0 = grp_prove_25_fu_779_proof_0_view3Commitment_ce0;

assign sig_0_proofs_view3C_d0 = grp_prove_25_fu_779_proof_0_view3Commitment_d0;

assign sig_0_proofs_view3C_we0 = grp_prove_25_fu_779_proof_0_view3Commitment_we0;

assign sig_0_salt_d0 = grp_computeSeeds_2_fu_635_salt_0_d0;

assign sub_ln1772_fu_832_p2 = (zext_ln1772_6_fu_828_p1 - zext_ln1772_4_fu_812_p1);

assign sub_ln1786_fu_854_p2 = (zext_ln1786_1_fu_850_p1 - zext_ln1772_5_fu_824_p1);

assign sub_ln1811_1_fu_1346_p2 = (zext_ln1811_2_fu_1342_p1 - zext_ln1811_1_fu_1332_p1);

assign sub_ln1811_2_fu_1226_p2 = (zext_ln1811_3_fu_1222_p1 - zext_ln1808_1_fu_1210_p1);

assign sub_ln1811_fu_1154_p2 = (zext_ln1811_fu_1150_p1 - zext_ln1808_fu_1138_p1);

assign tmp_10_fu_1383_p4 = {{{select_ln1809_2_reg_1734_pp2_iter1_reg}, {1'd0}}, {select_ln1809_reg_1722_pp2_iter1_reg}};

assign tmp_11_fu_901_p3 = ap_phi_mux_loop_0_phi_fu_525_p4[32'd4];

assign tmp_12_cast_fu_1361_p3 = {{add_ln1811_1_fu_1355_p2}, {2'd0}};

assign tmp_12_fu_976_p3 = {{add_ln1772_reg_1579}, {trunc_ln1_reg_1604}};

assign tmp_13_fu_1413_p3 = {{61'd2}, {j_2_reg_611}};

assign tmp_14_fu_1422_p3 = {{61'd4}, {j_2_reg_611}};

assign tmp_4_fu_1056_p5 = $unsigned(sext_ln1775_fu_1049_p1);

assign tmp_5_fu_816_p3 = {{k_0_reg_485}, {2'd0}};

assign tmp_6_fu_842_p3 = {{k_0_reg_485}, {4'd0}};

assign tmp_7_fu_878_p3 = j_0_reg_497[32'd1];

assign tmp_8_fu_1335_p3 = {{select_ln1808_1_reg_1715}, {2'd0}};

assign trunc_ln1771_fu_909_p1 = ap_phi_mux_loop_0_phi_fu_525_p4[3:0];

assign trunc_ln2_fu_1455_p4 = {{round_assign_reg_623[7:2]}};

assign trunc_ln386_1_fu_1498_p1 = lshr_ln54_fu_1492_p2[0:0];

assign trunc_ln386_fu_1470_p1 = round_assign_reg_623[1:0];

assign trunc_ln54_fu_1518_p1 = lshr_ln54_1_fu_1512_p2[0:0];

assign viewOutputs_address1 = tmp_14_fu_1422_p3;

assign viewOutputs_d0 = views_outputShare_q0;

assign views_inputShare_d0 = {{{{tmp_0_q1}, {tmp_0_q0}}, {tmp_0_load_1_reg_1614}}, {tmp_0_load_reg_1609}};

assign views_inputShare_d1 = (xor_ln1786_fu_1125_p2 ^ views_inputShare_q0);

assign xor_ln1786_fu_1125_p2 = (views_inputShare_q1 ^ privateKey_q0);

assign xor_ln1808_fu_1240_p2 = (icmp_ln1809_fu_1188_p2 ^ 1'd1);

assign xor_ln1817_fu_1431_p2 = (viewOutputs_q1 ^ viewOutputs_load_reg_1782);

assign xor_ln54_1_fu_1502_p2 = (bitNumber_assign_fu_1474_p3 ^ 3'd7);

assign xor_ln54_fu_1482_p2 = (bitNumber_assign_fu_1474_p3 ^ 3'd6);

assign zext_ln1772_1_fu_924_p1 = or_ln1772_fu_918_p2;

assign zext_ln1772_2_fu_944_p1 = or_ln1772_1_fu_939_p2;

assign zext_ln1772_3_fu_954_p1 = or_ln1772_2_fu_949_p2;

assign zext_ln1772_4_fu_812_p1 = k_0_reg_485;

assign zext_ln1772_5_fu_824_p1 = tmp_5_fu_816_p3;

assign zext_ln1772_6_fu_828_p1 = tmp_5_fu_816_p3;

assign zext_ln1772_7_fu_892_p1 = j_0_reg_497;

assign zext_ln1772_fu_913_p1 = ap_phi_mux_loop_0_phi_fu_525_p4;

assign zext_ln1775_3_fu_1039_p1 = loop_1_reg_533_pp1_iter9_reg;

assign zext_ln1775_4_fu_1071_p1 = add_ln1775_1_reg_1673;

assign zext_ln1775_fu_1031_p1 = grp_fu_1025_p2;

assign zext_ln1786_1_fu_850_p1 = tmp_6_fu_842_p3;

assign zext_ln1786_2_fu_1092_p1 = j_1_reg_545;

assign zext_ln1786_fu_1087_p1 = j_1_reg_545;

assign zext_ln1808_1_fu_1210_p1 = i_fu_1182_p2;

assign zext_ln1808_fu_1138_p1 = ap_phi_mux_i_0_phi_fu_571_p4;

assign zext_ln1809_1_fu_1278_p1 = j_6_fu_1258_p2;

assign zext_ln1809_fu_1160_p1 = ap_phi_mux_j1_0_phi_fu_593_p4;

assign zext_ln1811_1_fu_1332_p1 = select_ln1808_1_reg_1715;

assign zext_ln1811_2_fu_1342_p1 = tmp_8_fu_1335_p3;

assign zext_ln1811_3_fu_1222_p1 = shl_ln1811_mid1_fu_1214_p3;

assign zext_ln1811_4_fu_1352_p1 = select_ln1809_1_reg_1728;

assign zext_ln1811_5_fu_1369_p1 = select_ln1809_reg_1722;

assign zext_ln1811_6_fu_1378_p1 = add_ln1811_3_fu_1372_p2;

assign zext_ln1811_fu_1150_p1 = shl_ln_fu_1142_p3;

assign zext_ln1817_fu_1408_p1 = j_2_reg_611;

assign zext_ln54_1_fu_1488_p1 = xor_ln54_fu_1482_p2;

assign zext_ln54_2_fu_1508_p1 = xor_ln54_1_fu_1502_p2;

assign zext_ln54_fu_1465_p1 = trunc_ln2_fu_1455_p4;

always @ (posedge ap_clk) begin
    sub_ln1786_reg_1551[1:0] <= 2'b00;
    add_ln1786_reg_1556[1:0] <= 2'b00;
    add_ln1786_1_reg_1561[1:0] <= 2'b00;
    zext_ln1817_reg_1762[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //sign_picnic1
